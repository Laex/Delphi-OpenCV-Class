// ??0GScalar@cv@@QEAA@$$QEAV01@@Z	??0GScalar@cv@@QEAA@$$QEAV01@@Z	cv::GScalar::GScalar(class cv::GScalar &&)
// ??0GScalar@cv@@QEAA@$$QEAV?$Scalar_@N@1@@Z	??0GScalar@cv@@QEAA@$$QEAV?$Scalar_@N@1@@Z	cv::GScalar::GScalar(class cv::Scalar_<double> &&)
// ??0GScalar@cv@@QEAA@AEBV01@@Z	??0GScalar@cv@@QEAA@AEBV01@@Z	cv::GScalar::GScalar(class cv::GScalar const &)
// ??0GScalar@cv@@QEAA@AEBV?$Scalar_@N@1@@Z	??0GScalar@cv@@QEAA@AEBV?$Scalar_@N@1@@Z	cv::GScalar::GScalar(class cv::Scalar_<double> const &)
// ??0GScalar@cv@@QEAA@AEBVGNode@1@_K@Z	??0GScalar@cv@@QEAA@AEBVGNode@1@_K@Z	cv::GScalar::GScalar(class cv::GNode const &,unsigned __int64)
{
  ??0GScalar@cv@@QEAA@N@Z
  ??0GScalar@cv@@QEAA@N@Z
  cv::GScalar::GScalar(double)
}
procedure constructor_GScalar(Obj: pGScalar; d: double); overload; external opencv_world_dll name '??0GScalar@cv@@QEAA@N@Z'{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
{
  ??0GScalar@cv@@QEAA@XZ
  ??0GScalar@cv@@QEAA@XZ
  cv::GScalar::GScalar(void)
}
procedure constructor_GScalar(Obj: pGScalar); overload; external opencv_world_dll name '??0GScalar@cv@@QEAA@XZ'{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
{
  ??1GScalar@cv@@QEAA@XZ
  ??1GScalar@cv@@QEAA@XZ
  cv::GScalar::~GScalar(void)
}
procedure destructor_GScalar(Obj: pGScalar); overload; external opencv_world_dll name '??1GScalar@cv@@QEAA@XZ'{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
// ??4GScalar@cv@@QEAAAEAV01@$$QEAV01@@Z	??4GScalar@cv@@QEAAAEAV01@$$QEAV01@@Z	class cv::GScalar & cv::GScalar::operator=(class cv::GScalar &&)
{
  ??4GScalar@cv@@QEAAAEAV01@AEBV01@@Z
  ??4GScalar@cv@@QEAAAEAV01@AEBV01@@Z
  class cv::GScalar & cv::GScalar::operator=(class cv::GScalar const &)
}
procedure operator_assign_GScalar(Obj: pGScalar; const v: TGScalar); external opencv_world_dll name '??4GScalar@cv@@QEAAAEAV01@AEBV01@@Z'{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
