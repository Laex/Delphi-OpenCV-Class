// ??0IntelligentScissorsMB@segmentation@cv@@QEAA@$$QEAV012@@Z	??0IntelligentScissorsMB@segmentation@cv@@QEAA@$$QEAV012@@Z	cv::segmentation::IntelligentScissorsMB::IntelligentScissorsMB(class cv::segmentation::IntelligentScissorsMB &&)
// ??0IntelligentScissorsMB@segmentation@cv@@QEAA@AEBV012@@Z	??0IntelligentScissorsMB@segmentation@cv@@QEAA@AEBV012@@Z	cv::segmentation::IntelligentScissorsMB::IntelligentScissorsMB(class cv::segmentation::IntelligentScissorsMB const &)
{
  ??0IntelligentScissorsMB@segmentation@cv@@QEAA@XZ
  ??0IntelligentScissorsMB@segmentation@cv@@QEAA@XZ
  cv::segmentation::IntelligentScissorsMB::IntelligentScissorsMB(void)
}
procedure Constructor_IntelligentScissorsMB(Obj: pIntelligentScissorsMB); external opencv_world_dll name '??0IntelligentScissorsMB@segmentation@cv@@QEAA@XZ'
{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
{
  ??1IntelligentScissorsMB@segmentation@cv@@QEAA@XZ
  ??1IntelligentScissorsMB@segmentation@cv@@QEAA@XZ
  cv::segmentation::IntelligentScissorsMB::~IntelligentScissorsMB(void)
}
procedure Destructor_IntelligentScissorsMB(Obj: pIntelligentScissorsMB); external opencv_world_dll name '??1IntelligentScissorsMB@segmentation@cv@@QEAA@XZ'
{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
// ??4IntelligentScissorsMB@segmentation@cv@@QEAAAEAV012@$$QEAV012@@Z	??4IntelligentScissorsMB@segmentation@cv@@QEAAAEAV012@$$QEAV012@@Z	class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::operator=(class cv::segmentation::IntelligentScissorsMB &&)
// ??4IntelligentScissorsMB@segmentation@cv@@QEAAAEAV012@AEBV012@@Z	??4IntelligentScissorsMB@segmentation@cv@@QEAAAEAV012@AEBV012@@Z	class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::operator=(class cv::segmentation::IntelligentScissorsMB const &)
{
  3556
  ?applyImage@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@debug_build_guard@3@@Z
  ?applyImage@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@3@@Z
  class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::applyImage(class cv::_InputArray const &)
}
procedure applyImage_IntelligentScissorsMB(Obj: pIntelligentScissorsMB; const image: TInputArray); external opencv_world_dll
{$IFDEF DEBUG}
  name '?applyImage@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@debug_build_guard@3@@Z'
{$ELSE}
  name '?applyImage@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@3@@Z'
{$ENDIF}
{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
// ?applyImageFeatures@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@debug_build_guard@3@000@Z	?applyImageFeatures@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@3@000@Z	class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::applyImageFeatures(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
{
  ?buildMap@IntelligentScissorsMB@segmentation@cv@@QEAAXAEBV?$Point_@H@3@@Z
  ?buildMap@IntelligentScissorsMB@segmentation@cv@@QEAAXAEBV?$Point_@H@3@@Z
  void cv::segmentation::IntelligentScissorsMB::buildMap(class cv::Point_<int> const &)
}
procedure buildMap_IntelligentScissorsMB(Obj: pIntelligentScissorsMB; const sourcePt:  TPoint);
  external opencv_world_dll name '?buildMap@IntelligentScissorsMB@segmentation@cv@@QEAAXAEBV?$Point_@H@3@@Z'
{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
{
  4882
  ?getContour@IntelligentScissorsMB@segmentation@cv@@QEBAXAEBV?$Point_@H@3@AEBV_OutputArray@debug_build_guard@3@_N@Z
  ?getContour@IntelligentScissorsMB@segmentation@cv@@QEBAXAEBV?$Point_@H@3@AEBV_OutputArray@3@_N@Z
  void cv::segmentation::IntelligentScissorsMB::getContour(class cv::Point_<int> const &,class cv::_OutputArray const &,bool)
}
procedure getContour_IntelligentScissorsMB(Obj: pIntelligentScissorsMB; const targetPt: TPoint; const contour: TOutputArray; backward: BOOL); external opencv_world_dll
{$IFDEF DEBUG}
  name '?getContour@IntelligentScissorsMB@segmentation@cv@@QEBAXAEBV?$Point_@H@3@AEBV_OutputArray@debug_build_guard@3@_N@Z'
{$ELSE}
  name '?getContour@IntelligentScissorsMB@segmentation@cv@@QEBAXAEBV?$Point_@H@3@AEBV_OutputArray@3@_N@Z'
{$ENDIF}
{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
// ?getImpl@IntelligentScissorsMB@segmentation@cv@@QEBAPEAUImpl@123@XZ	?getImpl@IntelligentScissorsMB@segmentation@cv@@QEBAPEAUImpl@123@XZ	struct cv::segmentation::IntelligentScissorsMB::Impl * cv::segmentation::IntelligentScissorsMB::getImpl(void)
{
  6295
  ?setEdgeFeatureCannyParameters@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@NNH_N@Z
  ?setEdgeFeatureCannyParameters@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@NNH_N@Z
  class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setEdgeFeatureCannyParameters(double,double,int,bool)
  IntelligentScissorsMB& setEdgeFeatureCannyParameters(double threshold1, double threshold2,int apertureSize = 3, bool L2gradient = false);
}
procedure setEdgeFeatureCannyParameters_IntelligentScissorsMB(Obj: pIntelligentScissorsMB; threshold1, threshold2: double; apertureSize: Int = 3; L2gradient: BOOL = false);
  external opencv_world_dll name '?setEdgeFeatureCannyParameters@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@NNH_N@Z'
{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
{
  6296
  ?setEdgeFeatureZeroCrossingParameters@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@M@Z
  ?setEdgeFeatureZeroCrossingParameters@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@M@Z
  class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setEdgeFeatureZeroCrossingParameters(float)
}
{
  6315
  ?setGradientMagnitudeMaxLimit@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@M@Z
  ?setGradientMagnitudeMaxLimit@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@M@Z
  class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setGradientMagnitudeMaxLimit(float)
}
procedure setGradientMagnitudeMaxLimit_IntelligentScissorsMB(Obj: pIntelligentScissorsMB; gradient_magnitude_threshold_max: float);
  external opencv_world_dll name '?setGradientMagnitudeMaxLimit@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@M@Z'
{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
// ?setWeights@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@MMM@Z	?setWeights@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@MMM@Z	class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setWeights(float,float,float)
