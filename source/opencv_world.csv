??0?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>(class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector> const &)
??0?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>(void)
??0?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>(class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector> const &)
??0?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>(void)
??0?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>(class cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector> const &)
??0?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>(void)
??0?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::RotationWarperBase<struct cv::detail::CylindricalProjector>(class cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector> const &)
??0?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::RotationWarperBase<struct cv::detail::CylindricalProjector>(void)
??0?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::RotationWarperBase<struct cv::detail::FisheyeProjector>(class cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector> const &)
??0?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::RotationWarperBase<struct cv::detail::FisheyeProjector>(void)
??0?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::RotationWarperBase<struct cv::detail::MercatorProjector>(class cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector> const &)
??0?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::RotationWarperBase<struct cv::detail::MercatorProjector>(void)
??0?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>(class cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector> const &)
??0?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>(void)
??0?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::RotationWarperBase<struct cv::detail::PaniniProjector>(class cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector> const &)
??0?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::RotationWarperBase<struct cv::detail::PaniniProjector>(void)
??0?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::RotationWarperBase<struct cv::detail::PlanePortraitProjector>(class cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector> const &)
??0?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::RotationWarperBase<struct cv::detail::PlanePortraitProjector>(void)
??0?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::RotationWarperBase<struct cv::detail::PlaneProjector>(class cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector> const &)
??0?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::RotationWarperBase<struct cv::detail::PlaneProjector>(void)
??0?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>(class cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector> const &)
??0?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>(void)
??0?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::RotationWarperBase<struct cv::detail::SphericalProjector>(class cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector> const &)
??0?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::RotationWarperBase<struct cv::detail::SphericalProjector>(void)
??0?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::RotationWarperBase<struct cv::detail::StereographicProjector>(class cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector> const &)
??0?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::RotationWarperBase<struct cv::detail::StereographicProjector>(void)
??0?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>(class cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector> const &)
??0?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@QEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>(void)
??0?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEAA@$$QEAV012@@Z;cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>(class cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame> &&)
??0?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEAA@AEBV012@@Z;cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>(class cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame> const &)
??0?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEAA@XZ;cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>(void)
??0AKAZE@cv@@QEAA@$$QEAV01@@Z;cv::AKAZE::AKAZE(class cv::AKAZE &&)
??0AKAZE@cv@@QEAA@AEBV01@@Z;cv::AKAZE::AKAZE(class cv::AKAZE const &)
??0AKAZE@cv@@QEAA@XZ;cv::AKAZE::AKAZE(void)
??0ANN_MLP@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::ANN_MLP::ANN_MLP(class cv::ml::ANN_MLP &&)
??0ANN_MLP@ml@cv@@QEAA@AEBV012@@Z;cv::ml::ANN_MLP::ANN_MLP(class cv::ml::ANN_MLP const &)
??0ANN_MLP@ml@cv@@QEAA@XZ;cv::ml::ANN_MLP::ANN_MLP(void)
??0AVIReadContainer@cv@@QEAA@$$QEAV01@@Z;cv::AVIReadContainer::AVIReadContainer(class cv::AVIReadContainer &&)
??0AVIReadContainer@cv@@QEAA@AEBV01@@Z;cv::AVIReadContainer::AVIReadContainer(class cv::AVIReadContainer const &)
??0AVIReadContainer@cv@@QEAA@XZ;cv::AVIReadContainer::AVIReadContainer(void)
??0AVIWriteContainer@cv@@QEAA@AEBV01@@Z;cv::AVIWriteContainer::AVIWriteContainer(class cv::AVIWriteContainer const &)
??0AVIWriteContainer@cv@@QEAA@XZ;cv::AVIWriteContainer::AVIWriteContainer(void)
??0AbsLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::AbsLayer::AbsLayer(class cv::dnn::dnn4_v20211004::AbsLayer &&)
??0AbsLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::AbsLayer::AbsLayer(class cv::dnn::dnn4_v20211004::AbsLayer const &)
??0AbsLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::AbsLayer::AbsLayer(void)
??0AccumLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::AccumLayer::AccumLayer(class cv::dnn::dnn4_v20211004::AccumLayer &&)
??0AccumLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::AccumLayer::AccumLayer(class cv::dnn::dnn4_v20211004::AccumLayer const &)
??0AccumLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::AccumLayer::AccumLayer(void)
??0ActivationLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ActivationLayer::ActivationLayer(class cv::dnn::dnn4_v20211004::ActivationLayer &&)
??0ActivationLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ActivationLayer::ActivationLayer(class cv::dnn::dnn4_v20211004::ActivationLayer const &)
??0ActivationLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ActivationLayer::ActivationLayer(void)
??0ActivationLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ActivationLayerInt8::ActivationLayerInt8(class cv::dnn::dnn4_v20211004::ActivationLayerInt8 &&)
??0ActivationLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ActivationLayerInt8::ActivationLayerInt8(class cv::dnn::dnn4_v20211004::ActivationLayerInt8 const &)
??0ActivationLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ActivationLayerInt8::ActivationLayerInt8(void)
??0AffineBasedEstimator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::AffineBasedEstimator::AffineBasedEstimator(class cv::detail::AffineBasedEstimator &&)
??0AffineBasedEstimator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::AffineBasedEstimator::AffineBasedEstimator(class cv::detail::AffineBasedEstimator const &)
??0AffineBasedEstimator@detail@cv@@QEAA@XZ;cv::detail::AffineBasedEstimator::AffineBasedEstimator(void)
??0AffineBestOf2NearestMatcher@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::AffineBestOf2NearestMatcher::AffineBestOf2NearestMatcher(class cv::detail::AffineBestOf2NearestMatcher &&)
??0AffineBestOf2NearestMatcher@detail@cv@@QEAA@AEBV012@@Z;cv::detail::AffineBestOf2NearestMatcher::AffineBestOf2NearestMatcher(class cv::detail::AffineBestOf2NearestMatcher const &)
??0AffineBestOf2NearestMatcher@detail@cv@@QEAA@_N0MH@Z;cv::detail::AffineBestOf2NearestMatcher::AffineBestOf2NearestMatcher(bool,bool,float,int)
??0AffineFeature@cv@@QEAA@$$QEAV01@@Z;cv::AffineFeature::AffineFeature(class cv::AffineFeature &&)
??0AffineFeature@cv@@QEAA@AEBV01@@Z;cv::AffineFeature::AffineFeature(class cv::AffineFeature const &)
??0AffineFeature@cv@@QEAA@XZ;cv::AffineFeature::AffineFeature(void)
??0AffineWarper@cv@@QEAA@$$QEAV01@@Z;cv::AffineWarper::AffineWarper(class cv::AffineWarper &&)
??0AffineWarper@cv@@QEAA@AEBV01@@Z;cv::AffineWarper::AffineWarper(class cv::AffineWarper const &)
??0AffineWarper@cv@@QEAA@XZ;cv::AffineWarper::AffineWarper(void)
??0AffineWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::AffineWarper::AffineWarper(class cv::detail::AffineWarper &&)
??0AffineWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::AffineWarper::AffineWarper(class cv::detail::AffineWarper const &)
??0AffineWarper@detail@cv@@QEAA@M@Z;cv::detail::AffineWarper::AffineWarper(float)
??0AgastFeatureDetector@cv@@QEAA@$$QEAV01@@Z;cv::AgastFeatureDetector::AgastFeatureDetector(class cv::AgastFeatureDetector &&)
??0AgastFeatureDetector@cv@@QEAA@AEBV01@@Z;cv::AgastFeatureDetector::AgastFeatureDetector(class cv::AgastFeatureDetector const &)
??0AgastFeatureDetector@cv@@QEAA@XZ;cv::AgastFeatureDetector::AgastFeatureDetector(void)
??0Algorithm@cv@@QEAA@AEBV01@@Z;cv::Algorithm::Algorithm(class cv::Algorithm const &)
??0Algorithm@cv@@QEAA@XZ;cv::Algorithm::Algorithm(void)
??0AlignExposures@cv@@QEAA@$$QEAV01@@Z;cv::AlignExposures::AlignExposures(class cv::AlignExposures &&)
??0AlignExposures@cv@@QEAA@AEBV01@@Z;cv::AlignExposures::AlignExposures(class cv::AlignExposures const &)
??0AlignExposures@cv@@QEAA@XZ;cv::AlignExposures::AlignExposures(void)
??0AlignMTB@cv@@QEAA@$$QEAV01@@Z;cv::AlignMTB::AlignMTB(class cv::AlignMTB &&)
??0AlignMTB@cv@@QEAA@AEBV01@@Z;cv::AlignMTB::AlignMTB(class cv::AlignMTB const &)
??0AlignMTB@cv@@QEAA@XZ;cv::AlignMTB::AlignMTB(void)
??0Allocator@GpuMat@cuda@cv@@QEAA@AEBV0123@@Z;cv::cuda::GpuMat::Allocator::Allocator(class cv::cuda::GpuMat::Allocator const &)
??0Allocator@GpuMat@cuda@cv@@QEAA@XZ;cv::cuda::GpuMat::Allocator::Allocator(void)
??0Arrays@ogl@cv@@QEAA@$$QEAV012@@Z;cv::ogl::Arrays::Arrays(class cv::ogl::Arrays &&)
??0Arrays@ogl@cv@@QEAA@AEBV012@@Z;cv::ogl::Arrays::Arrays(class cv::ogl::Arrays const &)
??0Arrays@ogl@cv@@QEAA@XZ;cv::ogl::Arrays::Arrays(void)
??0AsyncArray@cv@@QEAA@$$QEAV01@@Z;cv::AsyncArray::AsyncArray(class cv::AsyncArray &&)
??0AsyncArray@cv@@QEAA@AEBV01@@Z;cv::AsyncArray::AsyncArray(class cv::AsyncArray const &)
??0AsyncArray@cv@@QEAA@XZ;cv::AsyncArray::AsyncArray(void)
??0AsyncPromise@cv@@QEAA@$$QEAV01@@Z;cv::AsyncPromise::AsyncPromise(class cv::AsyncPromise &&)
??0AsyncPromise@cv@@QEAA@AEBV01@@Z;cv::AsyncPromise::AsyncPromise(class cv::AsyncPromise const &)
??0AsyncPromise@cv@@QEAA@XZ;cv::AsyncPromise::AsyncPromise(void)
??0AutotunedIndexParams@flann@cv@@QEAA@MMMM@Z;cv::flann::AutotunedIndexParams::AutotunedIndexParams(float,float,float,float)
??0BFMatcher@cv@@QEAA@AEBV01@@Z;cv::BFMatcher::BFMatcher(class cv::BFMatcher const &)
??0BFMatcher@cv@@QEAA@H_N@Z;cv::BFMatcher::BFMatcher(int,bool)
??0BNLLLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::BNLLLayer::BNLLLayer(class cv::dnn::dnn4_v20211004::BNLLLayer &&)
??0BNLLLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::BNLLLayer::BNLLLayer(class cv::dnn::dnn4_v20211004::BNLLLayer const &)
??0BNLLLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::BNLLLayer::BNLLLayer(void)
??0BOWImgDescriptorExtractor@cv@@QEAA@AEBU?$Ptr@VDescriptorMatcher@cv@@@1@@Z;cv::BOWImgDescriptorExtractor::BOWImgDescriptorExtractor(struct cv::Ptr<class cv::DescriptorMatcher> const &)
??0BOWImgDescriptorExtractor@cv@@QEAA@AEBU?$Ptr@VFeature2D@cv@@@1@AEBU?$Ptr@VDescriptorMatcher@cv@@@1@@Z;cv::BOWImgDescriptorExtractor::BOWImgDescriptorExtractor(struct cv::Ptr<class cv::Feature2D> const &,struct cv::Ptr<class cv::DescriptorMatcher> const &)
??0BOWImgDescriptorExtractor@cv@@QEAA@AEBV01@@Z;cv::BOWImgDescriptorExtractor::BOWImgDescriptorExtractor(class cv::BOWImgDescriptorExtractor const &)
??0BOWKMeansTrainer@cv@@QEAA@AEBV01@@Z;cv::BOWKMeansTrainer::BOWKMeansTrainer(class cv::BOWKMeansTrainer const &)
??0BOWKMeansTrainer@cv@@QEAA@HAEBVTermCriteria@1@HH@Z;cv::BOWKMeansTrainer::BOWKMeansTrainer(int,class cv::TermCriteria const &,int,int)
??0BOWTrainer@cv@@QEAA@AEBV01@@Z;cv::BOWTrainer::BOWTrainer(class cv::BOWTrainer const &)
??0BOWTrainer@cv@@QEAA@XZ;cv::BOWTrainer::BOWTrainer(void)
??0BRISK@cv@@QEAA@$$QEAV01@@Z;cv::BRISK::BRISK(class cv::BRISK &&)
??0BRISK@cv@@QEAA@AEBV01@@Z;cv::BRISK::BRISK(class cv::BRISK const &)
??0BRISK@cv@@QEAA@XZ;cv::BRISK::BRISK(void)
??0BackgroundSubtractor@cv@@QEAA@$$QEAV01@@Z;cv::BackgroundSubtractor::BackgroundSubtractor(class cv::BackgroundSubtractor &&)
??0BackgroundSubtractor@cv@@QEAA@AEBV01@@Z;cv::BackgroundSubtractor::BackgroundSubtractor(class cv::BackgroundSubtractor const &)
??0BackgroundSubtractor@cv@@QEAA@XZ;cv::BackgroundSubtractor::BackgroundSubtractor(void)
??0BackgroundSubtractorKNN@cv@@QEAA@$$QEAV01@@Z;cv::BackgroundSubtractorKNN::BackgroundSubtractorKNN(class cv::BackgroundSubtractorKNN &&)
??0BackgroundSubtractorKNN@cv@@QEAA@AEBV01@@Z;cv::BackgroundSubtractorKNN::BackgroundSubtractorKNN(class cv::BackgroundSubtractorKNN const &)
??0BackgroundSubtractorKNN@cv@@QEAA@XZ;cv::BackgroundSubtractorKNN::BackgroundSubtractorKNN(void)
??0BackgroundSubtractorMOG2@cv@@QEAA@$$QEAV01@@Z;cv::BackgroundSubtractorMOG2::BackgroundSubtractorMOG2(class cv::BackgroundSubtractorMOG2 &&)
??0BackgroundSubtractorMOG2@cv@@QEAA@AEBV01@@Z;cv::BackgroundSubtractorMOG2::BackgroundSubtractorMOG2(class cv::BackgroundSubtractorMOG2 const &)
??0BackgroundSubtractorMOG2@cv@@QEAA@XZ;cv::BackgroundSubtractorMOG2::BackgroundSubtractorMOG2(void)
??0BaseCascadeClassifier@cv@@QEAA@AEBV01@@Z;cv::BaseCascadeClassifier::BaseCascadeClassifier(class cv::BaseCascadeClassifier const &)
??0BaseCascadeClassifier@cv@@QEAA@XZ;cv::BaseCascadeClassifier::BaseCascadeClassifier(void)
??0BaseConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::BaseConvolutionLayer::BaseConvolutionLayer(class cv::dnn::dnn4_v20211004::BaseConvolutionLayer &&)
??0BaseConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::BaseConvolutionLayer::BaseConvolutionLayer(class cv::dnn::dnn4_v20211004::BaseConvolutionLayer const &)
??0BaseConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::BaseConvolutionLayer::BaseConvolutionLayer(void)
??0BatchNormLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::BatchNormLayer::BatchNormLayer(class cv::dnn::dnn4_v20211004::BatchNormLayer &&)
??0BatchNormLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::BatchNormLayer::BatchNormLayer(class cv::dnn::dnn4_v20211004::BatchNormLayer const &)
??0BatchNormLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::BatchNormLayer::BatchNormLayer(void)
??0BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::BatchNormLayerInt8::BatchNormLayerInt8(class cv::dnn::dnn4_v20211004::BatchNormLayerInt8 &&)
??0BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::BatchNormLayerInt8::BatchNormLayerInt8(class cv::dnn::dnn4_v20211004::BatchNormLayerInt8 const &)
??0BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::BatchNormLayerInt8::BatchNormLayerInt8(void)
??0BestOf2NearestMatcher@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BestOf2NearestMatcher::BestOf2NearestMatcher(class cv::detail::BestOf2NearestMatcher &&)
??0BestOf2NearestMatcher@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BestOf2NearestMatcher::BestOf2NearestMatcher(class cv::detail::BestOf2NearestMatcher const &)
??0BestOf2NearestMatcher@detail@cv@@QEAA@_NMHH@Z;cv::detail::BestOf2NearestMatcher::BestOf2NearestMatcher(bool,float,int,int)
??0BestOf2NearestRangeMatcher@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BestOf2NearestRangeMatcher::BestOf2NearestRangeMatcher(class cv::detail::BestOf2NearestRangeMatcher &&)
??0BestOf2NearestRangeMatcher@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BestOf2NearestRangeMatcher::BestOf2NearestRangeMatcher(class cv::detail::BestOf2NearestRangeMatcher const &)
??0BestOf2NearestRangeMatcher@detail@cv@@QEAA@H_NMHH@Z;cv::detail::BestOf2NearestRangeMatcher::BestOf2NearestRangeMatcher(int,bool,float,int,int)
??0BlankLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::BlankLayer::BlankLayer(class cv::dnn::dnn4_v20211004::BlankLayer &&)
??0BlankLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::BlankLayer::BlankLayer(class cv::dnn::dnn4_v20211004::BlankLayer const &)
??0BlankLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::BlankLayer::BlankLayer(void)
??0Blender@detail@cv@@QEAA@AEBV012@@Z;cv::detail::Blender::Blender(class cv::detail::Blender const &)
??0Blender@detail@cv@@QEAA@XZ;cv::detail::Blender::Blender(void)
??0BlocksChannelsCompensator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BlocksChannelsCompensator::BlocksChannelsCompensator(class cv::detail::BlocksChannelsCompensator &&)
??0BlocksChannelsCompensator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BlocksChannelsCompensator::BlocksChannelsCompensator(class cv::detail::BlocksChannelsCompensator const &)
??0BlocksChannelsCompensator@detail@cv@@QEAA@HHH@Z;cv::detail::BlocksChannelsCompensator::BlocksChannelsCompensator(int,int,int)
??0BlocksCompensator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BlocksCompensator::BlocksCompensator(class cv::detail::BlocksCompensator &&)
??0BlocksCompensator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BlocksCompensator::BlocksCompensator(class cv::detail::BlocksCompensator const &)
??0BlocksCompensator@detail@cv@@QEAA@HHH@Z;cv::detail::BlocksCompensator::BlocksCompensator(int,int,int)
??0BlocksGainCompensator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BlocksGainCompensator::BlocksGainCompensator(class cv::detail::BlocksGainCompensator &&)
??0BlocksGainCompensator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BlocksGainCompensator::BlocksGainCompensator(class cv::detail::BlocksGainCompensator const &)
??0BlocksGainCompensator@detail@cv@@QEAA@HH@Z;cv::detail::BlocksGainCompensator::BlocksGainCompensator(int,int)
??0BlocksGainCompensator@detail@cv@@QEAA@HHH@Z;cv::detail::BlocksGainCompensator::BlocksGainCompensator(int,int,int)
??0Boost@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::Boost::Boost(class cv::ml::Boost &&)
??0Boost@ml@cv@@QEAA@AEBV012@@Z;cv::ml::Boost::Boost(class cv::ml::Boost const &)
??0Boost@ml@cv@@QEAA@XZ;cv::ml::Boost::Boost(void)
??0Buffer@fluid@gapi@cv@@QEAA@AEBUGMatDesc@3@@Z;cv::gapi::fluid::Buffer::Buffer(struct cv::GMatDesc const &)
??0Buffer@fluid@gapi@cv@@QEAA@AEBUGMatDesc@3@HHHHV?$optional@UBorder@fluid@gapi@cv@@@util@3@@Z;cv::gapi::fluid::Buffer::Buffer(struct cv::GMatDesc const &,int,int,int,int,class cv::util::optional<struct cv::gapi::fluid::Border>)
??0Buffer@fluid@gapi@cv@@QEAA@AEBVMat@3@_N@Z;cv::gapi::fluid::Buffer::Buffer(class cv::Mat const &,bool)
??0Buffer@fluid@gapi@cv@@QEAA@XZ;cv::gapi::fluid::Buffer::Buffer(void)
??0Buffer@ogl@cv@@QEAA@$$QEAV012@@Z;cv::ogl::Buffer::Buffer(class cv::ogl::Buffer &&)
??0Buffer@ogl@cv@@QEAA@AEBV012@@Z;cv::ogl::Buffer::Buffer(class cv::ogl::Buffer const &)
??0Buffer@ogl@cv@@QEAA@AEBV_InputArray@2@W4Target@012@_N@Z;cv::ogl::Buffer::Buffer(class cv::_InputArray const &,enum cv::ogl::Buffer::Target,bool)
??0Buffer@ogl@cv@@QEAA@HHHI_N@Z;cv::ogl::Buffer::Buffer(int,int,int,unsigned int,bool)
??0Buffer@ogl@cv@@QEAA@HHHW4Target@012@_N@Z;cv::ogl::Buffer::Buffer(int,int,int,enum cv::ogl::Buffer::Target,bool)
??0Buffer@ogl@cv@@QEAA@V?$Size_@H@2@HI_N@Z;cv::ogl::Buffer::Buffer(class cv::Size_<int>,int,unsigned int,bool)
??0Buffer@ogl@cv@@QEAA@V?$Size_@H@2@HW4Target@012@_N@Z;cv::ogl::Buffer::Buffer(class cv::Size_<int>,int,enum cv::ogl::Buffer::Target,bool)
??0Buffer@ogl@cv@@QEAA@XZ;cv::ogl::Buffer::Buffer(void)
??0BufferArea@utils@cv@@QEAA@_N@Z;cv::utils::BufferArea::BufferArea(bool)
??0BufferPool@cuda@cv@@QEAA@$$QEAV012@@Z;cv::cuda::BufferPool::BufferPool(class cv::cuda::BufferPool &&)
??0BufferPool@cuda@cv@@QEAA@AEAVStream@12@@Z;cv::cuda::BufferPool::BufferPool(class cv::cuda::Stream &)
??0BufferPool@cuda@cv@@QEAA@AEBV012@@Z;cv::cuda::BufferPool::BufferPool(class cv::cuda::BufferPool const &)
??0BundleAdjusterAffine@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BundleAdjusterAffine::BundleAdjusterAffine(class cv::detail::BundleAdjusterAffine &&)
??0BundleAdjusterAffine@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BundleAdjusterAffine::BundleAdjusterAffine(class cv::detail::BundleAdjusterAffine const &)
??0BundleAdjusterAffine@detail@cv@@QEAA@XZ;cv::detail::BundleAdjusterAffine::BundleAdjusterAffine(void)
??0BundleAdjusterAffinePartial@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BundleAdjusterAffinePartial::BundleAdjusterAffinePartial(class cv::detail::BundleAdjusterAffinePartial &&)
??0BundleAdjusterAffinePartial@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BundleAdjusterAffinePartial::BundleAdjusterAffinePartial(class cv::detail::BundleAdjusterAffinePartial const &)
??0BundleAdjusterAffinePartial@detail@cv@@QEAA@XZ;cv::detail::BundleAdjusterAffinePartial::BundleAdjusterAffinePartial(void)
??0BundleAdjusterBase@detail@cv@@IEAA@HH@Z;cv::detail::BundleAdjusterBase::BundleAdjusterBase(int,int)
??0BundleAdjusterBase@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BundleAdjusterBase::BundleAdjusterBase(class cv::detail::BundleAdjusterBase &&)
??0BundleAdjusterBase@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BundleAdjusterBase::BundleAdjusterBase(class cv::detail::BundleAdjusterBase const &)
??0BundleAdjusterRay@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BundleAdjusterRay::BundleAdjusterRay(class cv::detail::BundleAdjusterRay &&)
??0BundleAdjusterRay@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BundleAdjusterRay::BundleAdjusterRay(class cv::detail::BundleAdjusterRay const &)
??0BundleAdjusterRay@detail@cv@@QEAA@XZ;cv::detail::BundleAdjusterRay::BundleAdjusterRay(void)
??0BundleAdjusterReproj@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::BundleAdjusterReproj::BundleAdjusterReproj(class cv::detail::BundleAdjusterReproj &&)
??0BundleAdjusterReproj@detail@cv@@QEAA@AEBV012@@Z;cv::detail::BundleAdjusterReproj::BundleAdjusterReproj(class cv::detail::BundleAdjusterReproj const &)
??0BundleAdjusterReproj@detail@cv@@QEAA@XZ;cv::detail::BundleAdjusterReproj::BundleAdjusterReproj(void)
??0ByteMemoryInStream@s11n@gapi@cv@@QEAA@$$QEAV0123@@Z;cv::gapi::s11n::ByteMemoryInStream::ByteMemoryInStream(class cv::gapi::s11n::ByteMemoryInStream &&)
??0ByteMemoryInStream@s11n@gapi@cv@@QEAA@AEBV0123@@Z;cv::gapi::s11n::ByteMemoryInStream::ByteMemoryInStream(class cv::gapi::s11n::ByteMemoryInStream const &)
??0ByteMemoryInStream@s11n@gapi@cv@@QEAA@AEBV?$vector@DV?$allocator@D@std@@@std@@@Z;cv::gapi::s11n::ByteMemoryInStream::ByteMemoryInStream(class std::vector<char,class std::allocator<char> > const &)
??0ByteMemoryOutStream@s11n@gapi@cv@@QEAA@$$QEAV0123@@Z;cv::gapi::s11n::ByteMemoryOutStream::ByteMemoryOutStream(class cv::gapi::s11n::ByteMemoryOutStream &&)
??0ByteMemoryOutStream@s11n@gapi@cv@@QEAA@AEBV0123@@Z;cv::gapi::s11n::ByteMemoryOutStream::ByteMemoryOutStream(class cv::gapi::s11n::ByteMemoryOutStream const &)
??0ByteMemoryOutStream@s11n@gapi@cv@@QEAA@XZ;cv::gapi::s11n::ByteMemoryOutStream::ByteMemoryOutStream(void)
??0CLAHE@cv@@QEAA@$$QEAV01@@Z;cv::CLAHE::CLAHE(class cv::CLAHE &&)
??0CLAHE@cv@@QEAA@AEBV01@@Z;cv::CLAHE::CLAHE(class cv::CLAHE const &)
??0CLAHE@cv@@QEAA@XZ;cv::CLAHE::CLAHE(void)
??0CalibrateCRF@cv@@QEAA@$$QEAV01@@Z;cv::CalibrateCRF::CalibrateCRF(class cv::CalibrateCRF &&)
??0CalibrateCRF@cv@@QEAA@AEBV01@@Z;cv::CalibrateCRF::CalibrateCRF(class cv::CalibrateCRF const &)
??0CalibrateCRF@cv@@QEAA@XZ;cv::CalibrateCRF::CalibrateCRF(void)
??0CalibrateDebevec@cv@@QEAA@$$QEAV01@@Z;cv::CalibrateDebevec::CalibrateDebevec(class cv::CalibrateDebevec &&)
??0CalibrateDebevec@cv@@QEAA@AEBV01@@Z;cv::CalibrateDebevec::CalibrateDebevec(class cv::CalibrateDebevec const &)
??0CalibrateDebevec@cv@@QEAA@XZ;cv::CalibrateDebevec::CalibrateDebevec(void)
??0CalibrateRobertson@cv@@QEAA@$$QEAV01@@Z;cv::CalibrateRobertson::CalibrateRobertson(class cv::CalibrateRobertson &&)
??0CalibrateRobertson@cv@@QEAA@AEBV01@@Z;cv::CalibrateRobertson::CalibrateRobertson(class cv::CalibrateRobertson const &)
??0CalibrateRobertson@cv@@QEAA@XZ;cv::CalibrateRobertson::CalibrateRobertson(void)
??0Callback@LMSolver@cv@@QEAA@AEBV012@@Z;cv::LMSolver::Callback::Callback(class cv::LMSolver::Callback const &)
??0Callback@LMSolver@cv@@QEAA@XZ;cv::LMSolver::Callback::Callback(void)
??0Callback@PointSetRegistrator@cv@@QEAA@AEBV012@@Z;cv::PointSetRegistrator::Callback::Callback(class cv::PointSetRegistrator::Callback const &)
??0Callback@PointSetRegistrator@cv@@QEAA@XZ;cv::PointSetRegistrator::Callback::Callback(void)
??0CameraParams@detail@cv@@QEAA@AEBU012@@Z;cv::detail::CameraParams::CameraParams(struct cv::detail::CameraParams const &)
??0CameraParams@detail@cv@@QEAA@XZ;cv::detail::CameraParams::CameraParams(void)
??0CascadeClassifier@cv@@QEAA@AEBV01@@Z;cv::CascadeClassifier::CascadeClassifier(class cv::CascadeClassifier const &)
??0CascadeClassifier@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::CascadeClassifier::CascadeClassifier(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0CascadeClassifier@cv@@QEAA@XZ;cv::CascadeClassifier::CascadeClassifier(void)
??0Center@SimpleBlobDetectorImpl@cv@@QEAA@XZ;cv::SimpleBlobDetectorImpl::Center::Center(void)
??0CfgParam@onevpl@wip@gapi@cv@@AEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$QEAV?$variant@ECGFIH_K_JMNPEAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@util@4@_N@Z;cv::gapi::wip::onevpl::CfgParam::CfgParam(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::util::variant<unsigned char,signed char,unsigned short,short,unsigned int,int,unsigned __int64,__int64,float,double,void *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > &&,bool)
??0CfgParam@onevpl@wip@gapi@cv@@QEAA@$$QEAU01234@@Z;cv::gapi::wip::onevpl::CfgParam::CfgParam(struct cv::gapi::wip::onevpl::CfgParam &&)
??0CfgParam@onevpl@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::onevpl::CfgParam::CfgParam(struct cv::gapi::wip::onevpl::CfgParam const &)
??0ChannelsCompensator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::ChannelsCompensator::ChannelsCompensator(class cv::detail::ChannelsCompensator &&)
??0ChannelsCompensator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::ChannelsCompensator::ChannelsCompensator(class cv::detail::ChannelsCompensator const &)
??0ChannelsCompensator@detail@cv@@QEAA@H@Z;cv::detail::ChannelsCompensator::ChannelsCompensator(int)
??0ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ChannelsPReLULayer::ChannelsPReLULayer(class cv::dnn::dnn4_v20211004::ChannelsPReLULayer &&)
??0ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ChannelsPReLULayer::ChannelsPReLULayer(class cv::dnn::dnn4_v20211004::ChannelsPReLULayer const &)
??0ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ChannelsPReLULayer::ChannelsPReLULayer(void)
??0Circle@draw@wip@gapi@cv@@QEAA@$$QEAU01234@@Z;cv::gapi::wip::draw::Circle::Circle(struct cv::gapi::wip::draw::Circle &&)
??0Circle@draw@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::draw::Circle::Circle(struct cv::gapi::wip::draw::Circle const &)
??0Circle@draw@wip@gapi@cv@@QEAA@AEBV?$Point_@H@4@HAEBV?$Scalar_@N@4@HHH@Z;cv::gapi::wip::draw::Circle::Circle(class cv::Point_<int> const &,int,class cv::Scalar_<double> const &,int,int,int)
??0Circle@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Circle::Circle(void)
??0CirclesGridFinderParameters@cv@@QEAA@XZ;cv::CirclesGridFinderParameters::CirclesGridFinderParameters(void)
??0ClassificationModel@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ClassificationModel::ClassificationModel(class cv::dnn::dnn4_v20211004::ClassificationModel &&)
??0ClassificationModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ClassificationModel::ClassificationModel(class cv::dnn::dnn4_v20211004::ClassificationModel const &)
??0ClassificationModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::ClassificationModel::ClassificationModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0ClassificationModel@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::ClassificationModel::ClassificationModel(class cv::dnn::dnn4_v20211004::Net const &)
??0ClfMilBoost@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::ClfMilBoost::ClfMilBoost(class cv::detail::tracking::ClfMilBoost const &)
??0ClfMilBoost@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::ClfMilBoost::ClfMilBoost(void)
??0CommandLineParser@cv@@QEAA@AEBV01@@Z;cv::CommandLineParser::CommandLineParser(class cv::CommandLineParser const &)
??0CommandLineParser@cv@@QEAA@HQEBQEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::CommandLineParser::CommandLineParser(int,char const * const * const,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0CompositeIndexParams@flann@cv@@QEAA@HHHW4flann_centers_init_t@cvflann@@M@Z;cv::flann::CompositeIndexParams::CompositeIndexParams(int,int,int,enum cvflann::flann_centers_init_t,float)
??0CompressedRectilinearPortraitWarper@cv@@QEAA@$$QEAV01@@Z;cv::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper(class cv::CompressedRectilinearPortraitWarper &&)
??0CompressedRectilinearPortraitWarper@cv@@QEAA@AEBV01@@Z;cv::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper(class cv::CompressedRectilinearPortraitWarper const &)
??0CompressedRectilinearPortraitWarper@cv@@QEAA@MM@Z;cv::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper(float,float)
??0CompressedRectilinearPortraitWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper(class cv::detail::CompressedRectilinearPortraitWarper &&)
??0CompressedRectilinearPortraitWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper(class cv::detail::CompressedRectilinearPortraitWarper const &)
??0CompressedRectilinearPortraitWarper@detail@cv@@QEAA@MMM@Z;cv::detail::CompressedRectilinearPortraitWarper::CompressedRectilinearPortraitWarper(float,float,float)
??0CompressedRectilinearWarper@cv@@QEAA@$$QEAV01@@Z;cv::CompressedRectilinearWarper::CompressedRectilinearWarper(class cv::CompressedRectilinearWarper &&)
??0CompressedRectilinearWarper@cv@@QEAA@AEBV01@@Z;cv::CompressedRectilinearWarper::CompressedRectilinearWarper(class cv::CompressedRectilinearWarper const &)
??0CompressedRectilinearWarper@cv@@QEAA@MM@Z;cv::CompressedRectilinearWarper::CompressedRectilinearWarper(float,float)
??0CompressedRectilinearWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::CompressedRectilinearWarper::CompressedRectilinearWarper(class cv::detail::CompressedRectilinearWarper &&)
??0CompressedRectilinearWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::CompressedRectilinearWarper::CompressedRectilinearWarper(class cv::detail::CompressedRectilinearWarper const &)
??0CompressedRectilinearWarper@detail@cv@@QEAA@MMM@Z;cv::detail::CompressedRectilinearWarper::CompressedRectilinearWarper(float,float,float)
??0ConcatLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ConcatLayer::ConcatLayer(class cv::dnn::dnn4_v20211004::ConcatLayer &&)
??0ConcatLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ConcatLayer::ConcatLayer(class cv::dnn::dnn4_v20211004::ConcatLayer const &)
??0ConcatLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ConcatLayer::ConcatLayer(void)
??0ConjGradSolver@cv@@QEAA@$$QEAV01@@Z;cv::ConjGradSolver::ConjGradSolver(class cv::ConjGradSolver &&)
??0ConjGradSolver@cv@@QEAA@AEBV01@@Z;cv::ConjGradSolver::ConjGradSolver(class cv::ConjGradSolver const &)
??0ConjGradSolver@cv@@QEAA@XZ;cv::ConjGradSolver::ConjGradSolver(void)
??0ConstLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ConstLayer::ConstLayer(class cv::dnn::dnn4_v20211004::ConstLayer &&)
??0ConstLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ConstLayer::ConstLayer(class cv::dnn::dnn4_v20211004::ConstLayer const &)
??0ConstLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ConstLayer::ConstLayer(void)
??0Context@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::Context::Context(class cv::ocl::Context &&)
??0Context@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::Context::Context(class cv::ocl::Context const &)
??0Context@ocl@cv@@QEAA@H@Z;cv::ocl::Context::Context(int)
??0Context@ocl@cv@@QEAA@XZ;cv::ocl::Context::Context(void)
??0ConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ConvolutionLayer::ConvolutionLayer(class cv::dnn::dnn4_v20211004::ConvolutionLayer &&)
??0ConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ConvolutionLayer::ConvolutionLayer(class cv::dnn::dnn4_v20211004::ConvolutionLayer const &)
??0ConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ConvolutionLayer::ConvolutionLayer(void)
??0ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::ConvolutionLayerInt8(class cv::dnn::dnn4_v20211004::ConvolutionLayerInt8 &&)
??0ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::ConvolutionLayerInt8(class cv::dnn::dnn4_v20211004::ConvolutionLayerInt8 const &)
??0ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::ConvolutionLayerInt8(void)
??0CorrelationLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::CorrelationLayer::CorrelationLayer(class cv::dnn::dnn4_v20211004::CorrelationLayer &&)
??0CorrelationLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::CorrelationLayer::CorrelationLayer(class cv::dnn::dnn4_v20211004::CorrelationLayer const &)
??0CorrelationLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::CorrelationLayer::CorrelationLayer(void)
??0CropAndResizeLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::CropAndResizeLayer::CropAndResizeLayer(class cv::dnn::dnn4_v20211004::CropAndResizeLayer &&)
??0CropAndResizeLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::CropAndResizeLayer::CropAndResizeLayer(class cv::dnn::dnn4_v20211004::CropAndResizeLayer const &)
??0CropAndResizeLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::CropAndResizeLayer::CropAndResizeLayer(void)
??0CropLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::CropLayer::CropLayer(class cv::dnn::dnn4_v20211004::CropLayer &&)
??0CropLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::CropLayer::CropLayer(class cv::dnn::dnn4_v20211004::CropLayer const &)
??0CropLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::CropLayer::CropLayer(void)
??0CumSumLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::CumSumLayer::CumSumLayer(class cv::dnn::dnn4_v20211004::CumSumLayer &&)
??0CumSumLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::CumSumLayer::CumSumLayer(class cv::dnn::dnn4_v20211004::CumSumLayer const &)
??0CumSumLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::CumSumLayer::CumSumLayer(void)
??0CvLevMarq@@QEAA@AEBV0@@Z;CvLevMarq::CvLevMarq(class CvLevMarq const &)
??0CvLevMarq@@QEAA@HHUCvTermCriteria@@_N@Z;CvLevMarq::CvLevMarq(int,int,struct CvTermCriteria,bool)
??0CvLevMarq@@QEAA@XZ;CvLevMarq::CvLevMarq(void)
??0CylindricalPortraitWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::CylindricalPortraitWarper::CylindricalPortraitWarper(class cv::detail::CylindricalPortraitWarper &&)
??0CylindricalPortraitWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::CylindricalPortraitWarper::CylindricalPortraitWarper(class cv::detail::CylindricalPortraitWarper const &)
??0CylindricalPortraitWarper@detail@cv@@QEAA@M@Z;cv::detail::CylindricalPortraitWarper::CylindricalPortraitWarper(float)
??0CylindricalWarper@cv@@QEAA@$$QEAV01@@Z;cv::CylindricalWarper::CylindricalWarper(class cv::CylindricalWarper &&)
??0CylindricalWarper@cv@@QEAA@AEBV01@@Z;cv::CylindricalWarper::CylindricalWarper(class cv::CylindricalWarper const &)
??0CylindricalWarper@cv@@QEAA@XZ;cv::CylindricalWarper::CylindricalWarper(void)
??0CylindricalWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::CylindricalWarper::CylindricalWarper(class cv::detail::CylindricalWarper &&)
??0CylindricalWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::CylindricalWarper::CylindricalWarper(class cv::detail::CylindricalWarper const &)
??0CylindricalWarper@detail@cv@@QEAA@M@Z;cv::detail::CylindricalWarper::CylindricalWarper(float)
??0CylindricalWarperGpu@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::CylindricalWarperGpu::CylindricalWarperGpu(class cv::detail::CylindricalWarperGpu &&)
??0CylindricalWarperGpu@detail@cv@@QEAA@AEBV012@@Z;cv::detail::CylindricalWarperGpu::CylindricalWarperGpu(class cv::detail::CylindricalWarperGpu const &)
??0CylindricalWarperGpu@detail@cv@@QEAA@M@Z;cv::detail::CylindricalWarperGpu::CylindricalWarperGpu(float)
??0DCT2D@hal@cv@@QEAA@AEBU012@@Z;cv::hal::DCT2D::DCT2D(struct cv::hal::DCT2D const &)
??0DCT2D@hal@cv@@QEAA@XZ;cv::hal::DCT2D::DCT2D(void)
??0DFT1D@hal@cv@@QEAA@AEBU012@@Z;cv::hal::DFT1D::DFT1D(struct cv::hal::DFT1D const &)
??0DFT1D@hal@cv@@QEAA@XZ;cv::hal::DFT1D::DFT1D(void)
??0DFT2D@hal@cv@@QEAA@AEBU012@@Z;cv::hal::DFT2D::DFT2D(struct cv::hal::DFT2D const &)
??0DFT2D@hal@cv@@QEAA@XZ;cv::hal::DFT2D::DFT2D(void)
??0DISOpticalFlow@cv@@QEAA@$$QEAV01@@Z;cv::DISOpticalFlow::DISOpticalFlow(class cv::DISOpticalFlow &&)
??0DISOpticalFlow@cv@@QEAA@AEBV01@@Z;cv::DISOpticalFlow::DISOpticalFlow(class cv::DISOpticalFlow const &)
??0DISOpticalFlow@cv@@QEAA@XZ;cv::DISOpticalFlow::DISOpticalFlow(void)
??0DMatch@cv@@QEAA@HHHM@Z;cv::DMatch::DMatch(int,int,int,float)
??0DMatch@cv@@QEAA@HHM@Z;cv::DMatch::DMatch(int,int,float)
??0DMatch@cv@@QEAA@XZ;cv::DMatch::DMatch(void)
??0DTrees@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::DTrees::DTrees(class cv::ml::DTrees &&)
??0DTrees@ml@cv@@QEAA@AEBV012@@Z;cv::ml::DTrees::DTrees(class cv::ml::DTrees const &)
??0DTrees@ml@cv@@QEAA@XZ;cv::ml::DTrees::DTrees(void)
??0Data@wip@gapi@cv@@QEAA@$$QEAU0123@@Z;cv::gapi::wip::Data::Data(struct cv::gapi::wip::Data &&)
??0Data@wip@gapi@cv@@QEAA@AEBU0123@@Z;cv::gapi::wip::Data::Data(struct cv::gapi::wip::Data const &)
??0Data@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::Data::Data(void)
??0DataAugmentationLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::DataAugmentationLayer::DataAugmentationLayer(class cv::dnn::dnn4_v20211004::DataAugmentationLayer &&)
??0DataAugmentationLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::DataAugmentationLayer::DataAugmentationLayer(class cv::dnn::dnn4_v20211004::DataAugmentationLayer const &)
??0DataAugmentationLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::DataAugmentationLayer::DataAugmentationLayer(void)
??0DataProviderException@onevpl@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::onevpl::DataProviderException::DataProviderException(struct cv::gapi::wip::onevpl::DataProviderException const &)
??0DataProviderException@onevpl@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::onevpl::DataProviderException::DataProviderException(void)
??0DataProviderSystemErrorException@onevpl@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::onevpl::DataProviderSystemErrorException::DataProviderSystemErrorException(struct cv::gapi::wip::onevpl::DataProviderSystemErrorException const &)
??0DataProviderSystemErrorException@onevpl@wip@gapi@cv@@QEAA@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::gapi::wip::onevpl::DataProviderSystemErrorException::DataProviderSystemErrorException(int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0DeconvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::DeconvolutionLayer::DeconvolutionLayer(class cv::dnn::dnn4_v20211004::DeconvolutionLayer &&)
??0DeconvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::DeconvolutionLayer::DeconvolutionLayer(class cv::dnn::dnn4_v20211004::DeconvolutionLayer const &)
??0DeconvolutionLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::DeconvolutionLayer::DeconvolutionLayer(void)
??0DenseOpticalFlow@cv@@QEAA@$$QEAV01@@Z;cv::DenseOpticalFlow::DenseOpticalFlow(class cv::DenseOpticalFlow &&)
??0DenseOpticalFlow@cv@@QEAA@AEBV01@@Z;cv::DenseOpticalFlow::DenseOpticalFlow(class cv::DenseOpticalFlow const &)
??0DenseOpticalFlow@cv@@QEAA@XZ;cv::DenseOpticalFlow::DenseOpticalFlow(void)
??0DequantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::DequantizeLayer::DequantizeLayer(class cv::dnn::dnn4_v20211004::DequantizeLayer &&)
??0DequantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::DequantizeLayer::DequantizeLayer(class cv::dnn::dnn4_v20211004::DequantizeLayer const &)
??0DequantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::DequantizeLayer::DequantizeLayer(void)
??0DescriptorCollection@DescriptorMatcher@cv@@QEAA@AEBV012@@Z;cv::DescriptorMatcher::DescriptorCollection::DescriptorCollection(class cv::DescriptorMatcher::DescriptorCollection const &)
??0DescriptorCollection@DescriptorMatcher@cv@@QEAA@XZ;cv::DescriptorMatcher::DescriptorCollection::DescriptorCollection(void)
??0DescriptorMatcher@cv@@QEAA@AEBV01@@Z;cv::DescriptorMatcher::DescriptorMatcher(class cv::DescriptorMatcher const &)
??0DescriptorMatcher@cv@@QEAA@XZ;cv::DescriptorMatcher::DescriptorMatcher(void)
??0DetectionBasedTracker@cv@@QEAA@AEBV01@@Z;cv::DetectionBasedTracker::DetectionBasedTracker(class cv::DetectionBasedTracker const &)
??0DetectionBasedTracker@cv@@QEAA@U?$Ptr@VIDetector@DetectionBasedTracker@cv@@@1@0AEBUParameters@01@@Z;cv::DetectionBasedTracker::DetectionBasedTracker(struct cv::Ptr<class cv::DetectionBasedTracker::IDetector>,struct cv::Ptr<class cv::DetectionBasedTracker::IDetector>,struct cv::DetectionBasedTracker::Parameters const &)
??0DetectionModel@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::DetectionModel::DetectionModel(class cv::dnn::dnn4_v20211004::DetectionModel &&)
??0DetectionModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::DetectionModel::DetectionModel(class cv::dnn::dnn4_v20211004::DetectionModel const &)
??0DetectionModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::DetectionModel::DetectionModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0DetectionModel@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::DetectionModel::DetectionModel(class cv::dnn::dnn4_v20211004::Net const &)
??0DetectionModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::DetectionModel::DetectionModel(void)
??0DetectionOutputLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::DetectionOutputLayer::DetectionOutputLayer(class cv::dnn::dnn4_v20211004::DetectionOutputLayer &&)
??0DetectionOutputLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::DetectionOutputLayer::DetectionOutputLayer(class cv::dnn::dnn4_v20211004::DetectionOutputLayer const &)
??0DetectionOutputLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::DetectionOutputLayer::DetectionOutputLayer(void)
??0Device@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::Device::Device(class cv::ocl::Device &&)
??0Device@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::Device::Device(class cv::ocl::Device const &)
??0Device@ocl@cv@@QEAA@PEAX@Z;cv::ocl::Device::Device(void *)
??0Device@ocl@cv@@QEAA@XZ;cv::ocl::Device::Device(void)
??0DeviceInfo@cuda@cv@@QEAA@H@Z;cv::cuda::DeviceInfo::DeviceInfo(int)
??0DeviceInfo@cuda@cv@@QEAA@XZ;cv::cuda::DeviceInfo::DeviceInfo(void)
??0Dict@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::Dict::Dict(class cv::dnn::dnn4_v20211004::Dict &&)
??0Dict@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::Dict::Dict(class cv::dnn::dnn4_v20211004::Dict const &)
??0Dict@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::Dict::Dict(void)
??0DictValue@dnn4_v20211004@dnn@cv@@AEAA@W4Param@3@PEAX@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(enum cv::Param,void *)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@AEBU0123@@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(struct cv::dnn::dnn4_v20211004::DictValue const &)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@H@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(int)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@I@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(unsigned int)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@N@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(double)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@PEBD@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(char const *)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@_J@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(__int64)
??0DictValue@dnn4_v20211004@dnn@cv@@QEAA@_N@Z;cv::dnn::dnn4_v20211004::DictValue::DictValue(bool)
??0DisjointSets@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::DisjointSets::DisjointSets(class cv::detail::DisjointSets &&)
??0DisjointSets@detail@cv@@QEAA@AEBV012@@Z;cv::detail::DisjointSets::DisjointSets(class cv::detail::DisjointSets const &)
??0DisjointSets@detail@cv@@QEAA@H@Z;cv::detail::DisjointSets::DisjointSets(int)
??0DownhillSolver@cv@@QEAA@$$QEAV01@@Z;cv::DownhillSolver::DownhillSolver(class cv::DownhillSolver &&)
??0DownhillSolver@cv@@QEAA@AEBV01@@Z;cv::DownhillSolver::DownhillSolver(class cv::DownhillSolver const &)
??0DownhillSolver@cv@@QEAA@XZ;cv::DownhillSolver::DownhillSolver(void)
??0DpSeamFinder@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::DpSeamFinder::DpSeamFinder(class cv::detail::DpSeamFinder &&)
??0DpSeamFinder@detail@cv@@QEAA@AEBV012@@Z;cv::detail::DpSeamFinder::DpSeamFinder(class cv::detail::DpSeamFinder const &)
??0DpSeamFinder@detail@cv@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::detail::DpSeamFinder::DpSeamFinder(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)
??0DpSeamFinder@detail@cv@@QEAA@W4CostFunction@012@@Z;cv::detail::DpSeamFinder::DpSeamFinder(enum cv::detail::DpSeamFinder::CostFunction)
??0DynamicLib@impl@plugin@cv@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z;cv::plugin::impl::DynamicLib::DynamicLib(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &)
??0ELULayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ELULayer::ELULayer(class cv::dnn::dnn4_v20211004::ELULayer &&)
??0ELULayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ELULayer::ELULayer(class cv::dnn::dnn4_v20211004::ELULayer const &)
??0ELULayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ELULayer::ELULayer(void)
??0EM@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::EM::EM(class cv::ml::EM &&)
??0EM@ml@cv@@QEAA@AEBV012@@Z;cv::ml::EM::EM(class cv::ml::EM const &)
??0EM@ml@cv@@QEAA@XZ;cv::ml::EM::EM(void)
??0EMImpl@ml@cv@@QEAA@AEBV012@@Z;cv::ml::EMImpl::EMImpl(class cv::ml::EMImpl const &)
??0EMImpl@ml@cv@@QEAA@XZ;cv::ml::EMImpl::EMImpl(void)
??0EltwiseLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::EltwiseLayer::EltwiseLayer(class cv::dnn::dnn4_v20211004::EltwiseLayer &&)
??0EltwiseLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::EltwiseLayer::EltwiseLayer(class cv::dnn::dnn4_v20211004::EltwiseLayer const &)
??0EltwiseLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::EltwiseLayer::EltwiseLayer(void)
??0EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::EltwiseLayerInt8::EltwiseLayerInt8(class cv::dnn::dnn4_v20211004::EltwiseLayerInt8 &&)
??0EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::EltwiseLayerInt8::EltwiseLayerInt8(class cv::dnn::dnn4_v20211004::EltwiseLayerInt8 const &)
??0EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::EltwiseLayerInt8::EltwiseLayerInt8(void)
??0Estimator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::Estimator::Estimator(class cv::detail::Estimator const &)
??0Estimator@detail@cv@@QEAA@XZ;cv::detail::Estimator::Estimator(void)
??0Event@cuda@cv@@AEAA@AEBU?$Ptr@VImpl@Event@cuda@cv@@@2@@Z;cv::cuda::Event::Event(struct cv::Ptr<class cv::cuda::Event::Impl> const &)
??0Event@cuda@cv@@QEAA@$$QEAV012@@Z;cv::cuda::Event::Event(class cv::cuda::Event &&)
??0Event@cuda@cv@@QEAA@AEBV012@@Z;cv::cuda::Event::Event(class cv::cuda::Event const &)
??0Event@cuda@cv@@QEAA@W4CreateFlags@012@@Z;cv::cuda::Event::Event(enum cv::cuda::Event::CreateFlags)
??0Exception@cv@@QEAA@AEBV01@@Z;cv::Exception::Exception(class cv::Exception const &)
??0Exception@cv@@QEAA@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00H@Z;cv::Exception::Exception(int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
??0Exception@cv@@QEAA@XZ;cv::Exception::Exception(void)
??0ExpLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ExpLayer::ExpLayer(class cv::dnn::dnn4_v20211004::ExpLayer &&)
??0ExpLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ExpLayer::ExpLayer(class cv::dnn::dnn4_v20211004::ExpLayer const &)
??0ExpLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ExpLayer::ExpLayer(void)
??0ExposureCompensator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::ExposureCompensator::ExposureCompensator(class cv::detail::ExposureCompensator const &)
??0ExposureCompensator@detail@cv@@QEAA@XZ;cv::detail::ExposureCompensator::ExposureCompensator(void)
??0FTTextRender@draw@wip@gapi@cv@@QEAA@$$QEAV01234@@Z;cv::gapi::wip::draw::FTTextRender::FTTextRender(class cv::gapi::wip::draw::FTTextRender &&)
??0FTTextRender@draw@wip@gapi@cv@@QEAA@AEBV01234@@Z;cv::gapi::wip::draw::FTTextRender::FTTextRender(class cv::gapi::wip::draw::FTTextRender const &)
??0FTTextRender@draw@wip@gapi@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::gapi::wip::draw::FTTextRender::FTTextRender(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0FaceDetectorYN@cv@@QEAA@AEBV01@@Z;cv::FaceDetectorYN::FaceDetectorYN(class cv::FaceDetectorYN const &)
??0FaceDetectorYN@cv@@QEAA@XZ;cv::FaceDetectorYN::FaceDetectorYN(void)
??0FaceRecognizerSF@cv@@QEAA@AEBV01@@Z;cv::FaceRecognizerSF::FaceRecognizerSF(class cv::FaceRecognizerSF const &)
??0FaceRecognizerSF@cv@@QEAA@XZ;cv::FaceRecognizerSF::FaceRecognizerSF(void)
??0FarnebackOpticalFlow@cv@@QEAA@$$QEAV01@@Z;cv::FarnebackOpticalFlow::FarnebackOpticalFlow(class cv::FarnebackOpticalFlow &&)
??0FarnebackOpticalFlow@cv@@QEAA@AEBV01@@Z;cv::FarnebackOpticalFlow::FarnebackOpticalFlow(class cv::FarnebackOpticalFlow const &)
??0FarnebackOpticalFlow@cv@@QEAA@XZ;cv::FarnebackOpticalFlow::FarnebackOpticalFlow(void)
??0FastFeatureDetector@cv@@QEAA@$$QEAV01@@Z;cv::FastFeatureDetector::FastFeatureDetector(class cv::FastFeatureDetector &&)
??0FastFeatureDetector@cv@@QEAA@AEBV01@@Z;cv::FastFeatureDetector::FastFeatureDetector(class cv::FastFeatureDetector const &)
??0FastFeatureDetector@cv@@QEAA@XZ;cv::FastFeatureDetector::FastFeatureDetector(void)
??0FeatherBlender@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::FeatherBlender::FeatherBlender(class cv::detail::FeatherBlender &&)
??0FeatherBlender@detail@cv@@QEAA@AEBV012@@Z;cv::detail::FeatherBlender::FeatherBlender(class cv::detail::FeatherBlender const &)
??0FeatherBlender@detail@cv@@QEAA@M@Z;cv::detail::FeatherBlender::FeatherBlender(float)
??0Feature2D@cv@@QEAA@AEBV01@@Z;cv::Feature2D::Feature2D(class cv::Feature2D const &)
??0Feature2D@cv@@QEAA@XZ;cv::Feature2D::Feature2D(void)
??0FeaturesMatcher@detail@cv@@IEAA@_N@Z;cv::detail::FeaturesMatcher::FeaturesMatcher(bool)
??0FeaturesMatcher@detail@cv@@QEAA@AEBV012@@Z;cv::detail::FeaturesMatcher::FeaturesMatcher(class cv::detail::FeaturesMatcher const &)
??0FileLock@fs@utils@cv@@QEAA@PEBD@Z;cv::utils::fs::FileLock::FileLock(char const *)
??0FileNode@cv@@QEAA@AEBV01@@Z;cv::FileNode::FileNode(class cv::FileNode const &)
??0FileNode@cv@@QEAA@PEAVImpl@FileStorage@1@_K1@Z;cv::FileNode::FileNode(class cv::FileStorage::Impl *,unsigned __int64,unsigned __int64)
??0FileNode@cv@@QEAA@PEBVFileStorage@1@_K1@Z;cv::FileNode::FileNode(class cv::FileStorage const *,unsigned __int64,unsigned __int64)
??0FileNode@cv@@QEAA@XZ;cv::FileNode::FileNode(void)
??0FileNodeIterator@cv@@QEAA@AEBV01@@Z;cv::FileNodeIterator::FileNodeIterator(class cv::FileNodeIterator const &)
??0FileNodeIterator@cv@@QEAA@AEBVFileNode@1@_N@Z;cv::FileNodeIterator::FileNodeIterator(class cv::FileNode const &,bool)
??0FileNodeIterator@cv@@QEAA@XZ;cv::FileNodeIterator::FileNodeIterator(void)
??0FileStorage@cv@@QEAA@AEBV01@@Z;cv::FileStorage::FileStorage(class cv::FileStorage const &)
??0FileStorage@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0@Z;cv::FileStorage::FileStorage(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0FileStorage@cv@@QEAA@XZ;cv::FileStorage::FileStorage(void)
??0Filter2D@hal@cv@@QEAA@AEBU012@@Z;cv::hal::Filter2D::Filter2D(struct cv::hal::Filter2D const &)
??0Filter2D@hal@cv@@QEAA@XZ;cv::hal::Filter2D::Filter2D(void)
??0FisheyeWarper@cv@@QEAA@$$QEAV01@@Z;cv::FisheyeWarper::FisheyeWarper(class cv::FisheyeWarper &&)
??0FisheyeWarper@cv@@QEAA@AEBV01@@Z;cv::FisheyeWarper::FisheyeWarper(class cv::FisheyeWarper const &)
??0FisheyeWarper@cv@@QEAA@XZ;cv::FisheyeWarper::FisheyeWarper(void)
??0FisheyeWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::FisheyeWarper::FisheyeWarper(class cv::detail::FisheyeWarper &&)
??0FisheyeWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::FisheyeWarper::FisheyeWarper(class cv::detail::FisheyeWarper const &)
??0FisheyeWarper@detail@cv@@QEAA@M@Z;cv::detail::FisheyeWarper::FisheyeWarper(float)
??0FlannBasedMatcher@cv@@QEAA@$$QEAV01@@Z;cv::FlannBasedMatcher::FlannBasedMatcher(class cv::FlannBasedMatcher &&)
??0FlannBasedMatcher@cv@@QEAA@AEBU?$Ptr@UIndexParams@flann@cv@@@1@AEBU?$Ptr@USearchParams@flann@cv@@@1@@Z;cv::FlannBasedMatcher::FlannBasedMatcher(struct cv::Ptr<struct cv::flann::IndexParams> const &,struct cv::Ptr<struct cv::flann::SearchParams> const &)
??0FlannBasedMatcher@cv@@QEAA@AEBV01@@Z;cv::FlannBasedMatcher::FlannBasedMatcher(class cv::FlannBasedMatcher const &)
??0FlattenLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::FlattenLayer::FlattenLayer(class cv::dnn::dnn4_v20211004::FlattenLayer &&)
??0FlattenLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::FlattenLayer::FlattenLayer(class cv::dnn::dnn4_v20211004::FlattenLayer const &)
??0FlattenLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::FlattenLayer::FlattenLayer(void)
??0FlowWarpLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::FlowWarpLayer::FlowWarpLayer(class cv::dnn::dnn4_v20211004::FlowWarpLayer &&)
??0FlowWarpLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::FlowWarpLayer::FlowWarpLayer(class cv::dnn::dnn4_v20211004::FlowWarpLayer const &)
??0FlowWarpLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::FlowWarpLayer::FlowWarpLayer(void)
??0Formatted@cv@@QEAA@AEBV01@@Z;cv::Formatted::Formatted(class cv::Formatted const &)
??0Formatted@cv@@QEAA@XZ;cv::Formatted::Formatted(void)
??0Formatter@cv@@QEAA@AEBV01@@Z;cv::Formatter::Formatter(class cv::Formatter const &)
??0Formatter@cv@@QEAA@XZ;cv::Formatter::Formatter(void)
??0Function@MinProblemSolver@cv@@QEAA@AEBV012@@Z;cv::MinProblemSolver::Function::Function(class cv::MinProblemSolver::Function const &)
??0Function@MinProblemSolver@cv@@QEAA@XZ;cv::MinProblemSolver::Function::Function(void)
??0GArg@cv@@QEAA@$$QEAV01@@Z;cv::GArg::GArg(class cv::GArg &&)
??0GArg@cv@@QEAA@AEBV01@@Z;cv::GArg::GArg(class cv::GArg const &)
??0GArg@cv@@QEAA@XZ;cv::GArg::GArg(void)
??0GArrayU@detail@cv@@IEAA@AEBVVectorRef@12@@Z;cv::detail::GArrayU::GArrayU(class cv::detail::VectorRef const &)
??0GArrayU@detail@cv@@IEAA@XZ;cv::detail::GArrayU::GArrayU(void)
??0GArrayU@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::GArrayU::GArrayU(class cv::detail::GArrayU &&)
??0GArrayU@detail@cv@@QEAA@AEBV012@@Z;cv::detail::GArrayU::GArrayU(class cv::detail::GArrayU const &)
??0GArrayU@detail@cv@@QEAA@AEBVGNode@2@_K@Z;cv::detail::GArrayU::GArrayU(class cv::GNode const &,unsigned __int64)
??0GAsyncCanceled@wip@gapi@cv@@QEAA@$$QEAV0123@@Z;cv::gapi::wip::GAsyncCanceled::GAsyncCanceled(class cv::gapi::wip::GAsyncCanceled &&)
??0GAsyncCanceled@wip@gapi@cv@@QEAA@AEBV0123@@Z;cv::gapi::wip::GAsyncCanceled::GAsyncCanceled(class cv::gapi::wip::GAsyncCanceled const &)
??0GAsyncCanceled@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::GAsyncCanceled::GAsyncCanceled(void)
??0GAsyncContext@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::GAsyncContext::GAsyncContext(void)
??0GBackend@gapi@cv@@QEAA@$$QEAV012@@Z;cv::gapi::GBackend::GBackend(class cv::gapi::GBackend &&)
??0GBackend@gapi@cv@@QEAA@$$QEAV?$shared_ptr@VPriv@GBackend@gapi@cv@@@std@@@Z;cv::gapi::GBackend::GBackend(class std::shared_ptr<class cv::gapi::GBackend::Priv> &&)
??0GBackend@gapi@cv@@QEAA@AEBV012@@Z;cv::gapi::GBackend::GBackend(class cv::gapi::GBackend const &)
??0GBackend@gapi@cv@@QEAA@XZ;cv::gapi::GBackend::GBackend(void)
??0GCPUContext@cv@@QEAA@$$QEAV01@@Z;cv::GCPUContext::GCPUContext(class cv::GCPUContext &&)
??0GCPUContext@cv@@QEAA@AEBV01@@Z;cv::GCPUContext::GCPUContext(class cv::GCPUContext const &)
??0GCPUContext@cv@@QEAA@XZ;cv::GCPUContext::GCPUContext(void)
??0GCPUKernel@cv@@QEAA@$$QEAV01@@Z;cv::GCPUKernel::GCPUKernel(class cv::GCPUKernel &&)
??0GCPUKernel@cv@@QEAA@AEBV01@@Z;cv::GCPUKernel::GCPUKernel(class cv::GCPUKernel const &)
??0GCPUKernel@cv@@QEAA@AEBV?$function@$$A6AXAEAVGCPUContext@cv@@@Z@std@@AEBV?$function@$$A6AXAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@2@AEAVGArg@cv@@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@2@@Z@3@@Z;cv::GCPUKernel::GCPUKernel(class std::function<void > const &,class std::function<void > const &)
??0GCPUKernel@cv@@QEAA@XZ;cv::GCPUKernel::GCPUKernel(void)
??0GCall@cv@@QEAA@AEBUGKernel@1@@Z;cv::GCall::GCall(struct cv::GKernel const &)
??0GCall@cv@@QEAA@AEBV01@@Z;cv::GCall::GCall(class cv::GCall const &)
??0GCompiled@cv@@QEAA@$$QEAV01@@Z;cv::GCompiled::GCompiled(class cv::GCompiled &&)
??0GCompiled@cv@@QEAA@AEBV01@@Z;cv::GCompiled::GCompiled(class cv::GCompiled const &)
??0GCompiled@cv@@QEAA@XZ;cv::GCompiled::GCompiled(void)
??0GCompiler@gimpl@cv@@QEAA@AEBVGComputation@2@$$QEAV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@5@@Z;cv::gimpl::GCompiler::GCompiler(class cv::GComputation const &,class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
??0GCompoundKernel@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::GCompoundKernel::GCompoundKernel(class cv::detail::GCompoundKernel &&)
??0GCompoundKernel@detail@cv@@QEAA@AEBV012@@Z;cv::detail::GCompoundKernel::GCompoundKernel(class cv::detail::GCompoundKernel const &)
??0GCompoundKernel@detail@cv@@QEAA@AEBV?$function@$$A6AXAEAUGCompoundContext@detail@cv@@@Z@std@@@Z;cv::detail::GCompoundKernel::GCompoundKernel(class std::function<void > const &)
??0GComputation@cv@@QEAA@$$QEAU?$GIOProtoArgs@UIn_Tag@cv@@@1@$$QEAU?$GIOProtoArgs@UOut_Tag@cv@@@1@@Z;cv::GComputation::GComputation(struct cv::GIOProtoArgs<struct cv::In_Tag> &&,struct cv::GIOProtoArgs<struct cv::Out_Tag> &&)
??0GComputation@cv@@QEAA@$$QEAV01@@Z;cv::GComputation::GComputation(class cv::GComputation &&)
??0GComputation@cv@@QEAA@AEAUIIStream@s11n@gapi@1@@Z;cv::GComputation::GComputation(struct cv::gapi::s11n::IIStream &)
??0GComputation@cv@@QEAA@AEBV01@@Z;cv::GComputation::GComputation(class cv::GComputation const &)
??0GComputation@cv@@QEAA@AEBV?$function@$$A6A?AVGComputation@cv@@XZ@std@@@Z;cv::GComputation::GComputation(class std::function<class cv::GComputation > const &)
??0GComputation@cv@@QEAA@AEBV?$vector@VGMat@cv@@V?$allocator@VGMat@cv@@@std@@@std@@0@Z;cv::GComputation::GComputation(class std::vector<class cv::GMat,class std::allocator<class cv::GMat> > const &,class std::vector<class cv::GMat,class std::allocator<class cv::GMat> > const &)
??0GComputation@cv@@QEAA@VGMat@1@00@Z;cv::GComputation::GComputation(class cv::GMat,class cv::GMat,class cv::GMat)
??0GComputation@cv@@QEAA@VGMat@1@0@Z;cv::GComputation::GComputation(class cv::GMat,class cv::GMat)
??0GComputation@cv@@QEAA@VGMat@1@0VGScalar@1@@Z;cv::GComputation::GComputation(class cv::GMat,class cv::GMat,class cv::GScalar)
??0GComputation@cv@@QEAA@VGMat@1@VGScalar@1@@Z;cv::GComputation::GComputation(class cv::GMat,class cv::GScalar)
??0GFTTDetector@cv@@QEAA@$$QEAV01@@Z;cv::GFTTDetector::GFTTDetector(class cv::GFTTDetector &&)
??0GFTTDetector@cv@@QEAA@AEBV01@@Z;cv::GFTTDetector::GFTTDetector(class cv::GFTTDetector const &)
??0GFTTDetector@cv@@QEAA@XZ;cv::GFTTDetector::GFTTDetector(void)
??0GFluidKernel@cv@@QEAA@$$QEAV01@@Z;cv::GFluidKernel::GFluidKernel(class cv::GFluidKernel &&)
??0GFluidKernel@cv@@QEAA@AEBV01@@Z;cv::GFluidKernel::GFluidKernel(class cv::GFluidKernel const &)
??0GFluidKernel@cv@@QEAA@W4Kind@01@H_NAEBV?$function@$$A6AXAEBV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@std@@AEBV?$vector@PEAVBuffer@fluid@gapi@cv@@V?$allocator@PEAVBuffer@fluid@gapi@cv@@@std@@@2@@Z@std@@AEBV?$function@$$A6AXAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@2@AEAVBuffer@fluid@gapi@cv@@@Z@4@AEBV?$function@$$A6AXAEAVBuffer@fluid@gapi@cv@@@Z@4@AEBV?$function@$$A6A?AV?$optional@UBorder@fluid@gapi@cv@@@util@cv@@AEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@5@@Z@4@AEBV?$function@$$A6AHAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@2@@Z@4@@Z;cv::GFluidKernel::GFluidKernel(enum cv::GFluidKernel::Kind,int,bool,class std::function<void > const &,class std::function<void > const &,class std::function<void > const &,class std::function<class cv::util::optional<struct cv::gapi::fluid::Border> > const &,class std::function<int > const &)
??0GFluidKernel@cv@@QEAA@XZ;cv::GFluidKernel::GFluidKernel(void)
??0GFrame@cv@@QEAA@$$QEAV01@@Z;cv::GFrame::GFrame(class cv::GFrame &&)
??0GFrame@cv@@QEAA@AEBV01@@Z;cv::GFrame::GFrame(class cv::GFrame const &)
??0GFrame@cv@@QEAA@AEBVGNode@1@_K@Z;cv::GFrame::GFrame(class cv::GNode const &,unsigned __int64)
??0GFrame@cv@@QEAA@XZ;cv::GFrame::GFrame(void)
??0GFrameDesc@cv@@QEAA@XZ;cv::GFrameDesc::GFrameDesc(void)
??0GIsland@gimpl@cv@@QEAA@$$QEAV012@@Z;cv::gimpl::GIsland::GIsland(class cv::gimpl::GIsland &&)
??0GIsland@gimpl@cv@@QEAA@AEBV012@@Z;cv::gimpl::GIsland::GIsland(class cv::gimpl::GIsland const &)
??0GIsland@gimpl@cv@@QEAA@AEBVGBackend@gapi@2@$$QEAV?$unordered_set@V?$Handle@VNode@ade@@@ade@@U?$HandleHasher@VNode@ade@@@2@U?$equal_to@V?$Handle@VNode@ade@@@ade@@@std@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@5@@std@@11$$QEAV?$optional@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@util@2@@Z;cv::gimpl::GIsland::GIsland(class cv::gapi::GBackend const &,class std::unordered_set<class ade::Handle<class ade::Node>,struct ade::HandleHasher<class ade::Node>,struct std::equal_to<class ade::Handle<class ade::Node> >,class std::allocator<class ade::Handle<class ade::Node> > > &&,class std::unordered_set<class ade::Handle<class ade::Node>,struct ade::HandleHasher<class ade::Node>,struct std::equal_to<class ade::Handle<class ade::Node> >,class std::allocator<class ade::Handle<class ade::Node> > > &&,class std::unordered_set<class ade::Handle<class ade::Node>,struct ade::HandleHasher<class ade::Node>,struct std::equal_to<class ade::Handle<class ade::Node> >,class std::allocator<class ade::Handle<class ade::Node> > > &&,class cv::util::optional<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > &&)
??0GIsland@gimpl@cv@@QEAA@AEBVGBackend@gapi@2@V?$Handle@VNode@ade@@@ade@@$$QEAV?$optional@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@util@2@@Z;cv::gimpl::GIsland::GIsland(class cv::gapi::GBackend const &,class ade::Handle<class ade::Node>,class cv::util::optional<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > &&)
??0GIslandExecutable@gimpl@cv@@QEAA@AEBV012@@Z;cv::gimpl::GIslandExecutable::GIslandExecutable(class cv::gimpl::GIslandExecutable const &)
??0GIslandExecutable@gimpl@cv@@QEAA@XZ;cv::gimpl::GIslandExecutable::GIslandExecutable(void)
??0GKernel@cv@@QEAA@$$QEAU01@@Z;cv::GKernel::GKernel(struct cv::GKernel &&)
??0GKernel@cv@@QEAA@AEBU01@@Z;cv::GKernel::GKernel(struct cv::GKernel const &)
??0GKernel@cv@@QEAA@XZ;cv::GKernel::GKernel(void)
??0GKernelImpl@cv@@QEAA@$$QEAU01@@Z;cv::GKernelImpl::GKernelImpl(struct cv::GKernelImpl &&)
??0GKernelImpl@cv@@QEAA@AEBU01@@Z;cv::GKernelImpl::GKernelImpl(struct cv::GKernelImpl const &)
??0GKernelImpl@cv@@QEAA@XZ;cv::GKernelImpl::GKernelImpl(void)
??0GKernelPackage@gapi@cv@@QEAA@$$QEAV012@@Z;cv::gapi::GKernelPackage::GKernelPackage(class cv::gapi::GKernelPackage &&)
??0GKernelPackage@gapi@cv@@QEAA@AEBV012@@Z;cv::gapi::GKernelPackage::GKernelPackage(class cv::gapi::GKernelPackage const &)
??0GKernelPackage@gapi@cv@@QEAA@XZ;cv::gapi::GKernelPackage::GKernelPackage(void)
??0GMat@cv@@QEAA@$$QEAV01@@Z;cv::GMat::GMat(class cv::GMat &&)
??0GMat@cv@@QEAA@AEBV01@@Z;cv::GMat::GMat(class cv::GMat const &)
??0GMat@cv@@QEAA@AEBVGNode@1@_K@Z;cv::GMat::GMat(class cv::GNode const &,unsigned __int64)
??0GMat@cv@@QEAA@XZ;cv::GMat::GMat(void)
??0GMatDesc@cv@@QEAA@$$QEAU01@@Z;cv::GMatDesc::GMatDesc(struct cv::GMatDesc &&)
??0GMatDesc@cv@@QEAA@AEBU01@@Z;cv::GMatDesc::GMatDesc(struct cv::GMatDesc const &)
??0GMatDesc@cv@@QEAA@H$$QEAV?$vector@HV?$allocator@H@std@@@std@@@Z;cv::GMatDesc::GMatDesc(int,class std::vector<int,class std::allocator<int> > &&)
??0GMatDesc@cv@@QEAA@HAEBV?$vector@HV?$allocator@H@std@@@std@@@Z;cv::GMatDesc::GMatDesc(int,class std::vector<int,class std::allocator<int> > const &)
??0GMatDesc@cv@@QEAA@HHV?$Size_@H@1@_N@Z;cv::GMatDesc::GMatDesc(int,int,class cv::Size_<int>,bool)
??0GMatDesc@cv@@QEAA@XZ;cv::GMatDesc::GMatDesc(void)
??0GMatP@cv@@QEAA@$$QEAV01@@Z;cv::GMatP::GMatP(class cv::GMatP &&)
??0GMatP@cv@@QEAA@AEBV01@@Z;cv::GMatP::GMatP(class cv::GMatP const &)
??0GMatP@cv@@QEAA@AEBVGNode@1@_K@Z;cv::GMatP::GMatP(class cv::GNode const &,unsigned __int64)
??0GMatP@cv@@QEAA@XZ;cv::GMatP::GMatP(void)
??0GModelBuilder@gimpl@cv@@QEAA@$$QEAV012@@Z;cv::gimpl::GModelBuilder::GModelBuilder(class cv::gimpl::GModelBuilder &&)
??0GModelBuilder@gimpl@cv@@QEAA@AEAVGraph@ade@@@Z;cv::gimpl::GModelBuilder::GModelBuilder(class ade::Graph &)
??0GModelBuilder@gimpl@cv@@QEAA@AEBV012@@Z;cv::gimpl::GModelBuilder::GModelBuilder(class cv::gimpl::GModelBuilder const &)
??0GNetPackage@gapi@cv@@QEAA@$$QEAU012@@Z;cv::gapi::GNetPackage::GNetPackage(struct cv::gapi::GNetPackage &&)
??0GNetPackage@gapi@cv@@QEAA@AEBU012@@Z;cv::gapi::GNetPackage::GNetPackage(struct cv::gapi::GNetPackage const &)
??0GNetPackage@gapi@cv@@QEAA@V?$initializer_list@UGNetParam@gapi@cv@@@std@@@Z;cv::gapi::GNetPackage::GNetPackage(class std::initializer_list<struct cv::gapi::GNetParam>)
??0GNetPackage@gapi@cv@@QEAA@V?$vector@UGNetParam@gapi@cv@@V?$allocator@UGNetParam@gapi@cv@@@std@@@std@@@Z;cv::gapi::GNetPackage::GNetPackage(class std::vector<struct cv::gapi::GNetParam,class std::allocator<struct cv::gapi::GNetParam> >)
??0GNetPackage@gapi@cv@@QEAA@XZ;cv::gapi::GNetPackage::GNetPackage(void)
??0GNetParam@gapi@cv@@QEAA@$$QEAU012@@Z;cv::gapi::GNetParam::GNetParam(struct cv::gapi::GNetParam &&)
??0GNetParam@gapi@cv@@QEAA@AEBU012@@Z;cv::gapi::GNetParam::GNetParam(struct cv::gapi::GNetParam const &)
??0GNetParam@gapi@cv@@QEAA@XZ;cv::gapi::GNetParam::GNetParam(void)
??0GOCLContext@cv@@QEAA@$$QEAV01@@Z;cv::GOCLContext::GOCLContext(class cv::GOCLContext &&)
??0GOCLContext@cv@@QEAA@AEBV01@@Z;cv::GOCLContext::GOCLContext(class cv::GOCLContext const &)
??0GOCLContext@cv@@QEAA@XZ;cv::GOCLContext::GOCLContext(void)
??0GOCLKernel@cv@@QEAA@$$QEAV01@@Z;cv::GOCLKernel::GOCLKernel(class cv::GOCLKernel &&)
??0GOCLKernel@cv@@QEAA@AEBV01@@Z;cv::GOCLKernel::GOCLKernel(class cv::GOCLKernel const &)
??0GOCLKernel@cv@@QEAA@AEBV?$function@$$A6AXAEAVGOCLContext@cv@@@Z@std@@@Z;cv::GOCLKernel::GOCLKernel(class std::function<void > const &)
??0GOCLKernel@cv@@QEAA@XZ;cv::GOCLKernel::GOCLKernel(void)
??0GOpaqueU@detail@cv@@IEAA@XZ;cv::detail::GOpaqueU::GOpaqueU(void)
??0GOpaqueU@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::GOpaqueU::GOpaqueU(class cv::detail::GOpaqueU &&)
??0GOpaqueU@detail@cv@@QEAA@AEBV012@@Z;cv::detail::GOpaqueU::GOpaqueU(class cv::detail::GOpaqueU const &)
??0GOpaqueU@detail@cv@@QEAA@AEBVGNode@2@_K@Z;cv::detail::GOpaqueU::GOpaqueU(class cv::GNode const &,unsigned __int64)
??0GPythonFunctor@python@gapi@cv@@QEAA@$$QEAV0123@@Z;cv::gapi::python::GPythonFunctor::GPythonFunctor(class cv::gapi::python::GPythonFunctor &&)
??0GPythonFunctor@python@gapi@cv@@QEAA@AEBV0123@@Z;cv::gapi::python::GPythonFunctor::GPythonFunctor(class cv::gapi::python::GPythonFunctor const &)
??0GPythonFunctor@python@gapi@cv@@QEAA@PEBDAEBV?$function@$$A6A?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV12@AEBV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@2@@Z@std@@AEBV?$function@$$A6A?AV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@AEBUGPythonContext@python@gapi@cv@@@Z@5@@Z;cv::gapi::python::GPythonFunctor::GPythonFunctor(char const *,class std::function<class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > > const &,class std::function<class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > > const &)
??0GPythonKernel@python@gapi@cv@@QEAA@$$QEAV0123@@Z;cv::gapi::python::GPythonKernel::GPythonKernel(class cv::gapi::python::GPythonKernel &&)
??0GPythonKernel@python@gapi@cv@@QEAA@AEBV0123@@Z;cv::gapi::python::GPythonKernel::GPythonKernel(class cv::gapi::python::GPythonKernel const &)
??0GPythonKernel@python@gapi@cv@@QEAA@V?$function@$$A6A?AV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@AEBUGPythonContext@python@gapi@cv@@@Z@std@@@Z;cv::gapi::python::GPythonKernel::GPythonKernel(class std::function<class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > >)
??0GPythonKernel@python@gapi@cv@@QEAA@XZ;cv::gapi::python::GPythonKernel::GPythonKernel(void)
??0GRULayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::GRULayer::GRULayer(class cv::dnn::dnn4_v20211004::GRULayer &&)
??0GRULayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::GRULayer::GRULayer(class cv::dnn::dnn4_v20211004::GRULayer const &)
??0GRULayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::GRULayer::GRULayer(void)
??0GRunArg@cv@@QEAA@$$QEAU01@@Z;cv::GRunArg::GRunArg(struct cv::GRunArg &&)
??0GRunArg@cv@@QEAA@AEBU01@@Z;cv::GRunArg::GRunArg(struct cv::GRunArg const &)
??0GRunArg@cv@@QEAA@XZ;cv::GRunArg::GRunArg(void)
??0GScalar@cv@@QEAA@$$QEAV01@@Z;cv::GScalar::GScalar(class cv::GScalar &&)
??0GScalar@cv@@QEAA@$$QEAV?$Scalar_@N@1@@Z;cv::GScalar::GScalar(class cv::Scalar_<double> &&)
??0GScalar@cv@@QEAA@AEBV01@@Z;cv::GScalar::GScalar(class cv::GScalar const &)
??0GScalar@cv@@QEAA@AEBV?$Scalar_@N@1@@Z;cv::GScalar::GScalar(class cv::Scalar_<double> const &)
??0GScalar@cv@@QEAA@AEBVGNode@1@_K@Z;cv::GScalar::GScalar(class cv::GNode const &,unsigned __int64)
??0GScalar@cv@@QEAA@N@Z;cv::GScalar::GScalar(double)
??0GScalar@cv@@QEAA@XZ;cv::GScalar::GScalar(void)
??0GSource@onevpl@wip@gapi@cv@@AEAA@$$QEAV?$unique_ptr@UPriv@GSource@onevpl@wip@gapi@cv@@U?$default_delete@UPriv@GSource@onevpl@wip@gapi@cv@@@std@@@std@@@Z;cv::gapi::wip::onevpl::GSource::GSource(class std::unique_ptr<struct cv::gapi::wip::onevpl::GSource::Priv,struct std::default_delete<struct cv::gapi::wip::onevpl::GSource::Priv> > &&)
??0GSource@onevpl@wip@gapi@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@UCfgParam@onevpl@wip@gapi@cv@@V?$allocator@UCfgParam@onevpl@wip@gapi@cv@@@std@@@6@@Z;cv::gapi::wip::onevpl::GSource::GSource(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<struct cv::gapi::wip::onevpl::CfgParam,class std::allocator<struct cv::gapi::wip::onevpl::CfgParam> > const &)
??0GSource@onevpl@wip@gapi@cv@@QEAA@V?$shared_ptr@UIDataProvider@onevpl@wip@gapi@cv@@@std@@AEBV?$vector@UCfgParam@onevpl@wip@gapi@cv@@V?$allocator@UCfgParam@onevpl@wip@gapi@cv@@@std@@@6@@Z;cv::gapi::wip::onevpl::GSource::GSource(class std::shared_ptr<struct cv::gapi::wip::onevpl::IDataProvider>,class std::vector<struct cv::gapi::wip::onevpl::CfgParam,class std::allocator<struct cv::gapi::wip::onevpl::CfgParam> > const &)
??0GStreamingCompiled@cv@@QEAA@$$QEAV01@@Z;cv::GStreamingCompiled::GStreamingCompiled(class cv::GStreamingCompiled &&)
??0GStreamingCompiled@cv@@QEAA@AEBV01@@Z;cv::GStreamingCompiled::GStreamingCompiled(class cv::GStreamingCompiled const &)
??0GStreamingCompiled@cv@@QEAA@XZ;cv::GStreamingCompiled::GStreamingCompiled(void)
??0GTransform@cv@@QEAA@$$QEAU01@@Z;cv::GTransform::GTransform(struct cv::GTransform &&)
??0GTransform@cv@@QEAA@AEBU01@@Z;cv::GTransform::GTransform(struct cv::GTransform const &)
??0GTransform@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$function@$$A6A?AVGComputation@cv@@XZ@3@1@Z;cv::GTransform::GTransform(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::function<class cv::GComputation > const &,class std::function<class cv::GComputation > const &)
??0GainCompensator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::GainCompensator::GainCompensator(class cv::detail::GainCompensator &&)
??0GainCompensator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::GainCompensator::GainCompensator(class cv::detail::GainCompensator const &)
??0GainCompensator@detail@cv@@QEAA@H@Z;cv::detail::GainCompensator::GainCompensator(int)
??0GainCompensator@detail@cv@@QEAA@XZ;cv::detail::GainCompensator::GainCompensator(void)
??0GeneralizedHough@cv@@QEAA@$$QEAV01@@Z;cv::GeneralizedHough::GeneralizedHough(class cv::GeneralizedHough &&)
??0GeneralizedHough@cv@@QEAA@AEBV01@@Z;cv::GeneralizedHough::GeneralizedHough(class cv::GeneralizedHough const &)
??0GeneralizedHough@cv@@QEAA@XZ;cv::GeneralizedHough::GeneralizedHough(void)
??0GeneralizedHoughBallard@cv@@QEAA@$$QEAV01@@Z;cv::GeneralizedHoughBallard::GeneralizedHoughBallard(class cv::GeneralizedHoughBallard &&)
??0GeneralizedHoughBallard@cv@@QEAA@AEBV01@@Z;cv::GeneralizedHoughBallard::GeneralizedHoughBallard(class cv::GeneralizedHoughBallard const &)
??0GeneralizedHoughBallard@cv@@QEAA@XZ;cv::GeneralizedHoughBallard::GeneralizedHoughBallard(void)
??0GeneralizedHoughGuil@cv@@QEAA@$$QEAV01@@Z;cv::GeneralizedHoughGuil::GeneralizedHoughGuil(class cv::GeneralizedHoughGuil &&)
??0GeneralizedHoughGuil@cv@@QEAA@AEBV01@@Z;cv::GeneralizedHoughGuil::GeneralizedHoughGuil(class cv::GeneralizedHoughGuil const &)
??0GeneralizedHoughGuil@cv@@QEAA@XZ;cv::GeneralizedHoughGuil::GeneralizedHoughGuil(void)
??0GpuData@cuda@cv@@QEAA@_K@Z;cv::cuda::GpuData::GpuData(unsigned __int64)
??0GpuMat@cuda@cv@@QEAA@AEBV012@@Z;cv::cuda::GpuMat::GpuMat(class cv::cuda::GpuMat const &)
??0GpuMat@cuda@cv@@QEAA@AEBV012@V?$Rect_@H@2@@Z;cv::cuda::GpuMat::GpuMat(class cv::cuda::GpuMat const &,class cv::Rect_<int>)
??0GpuMat@cuda@cv@@QEAA@AEBV012@VRange@2@1@Z;cv::cuda::GpuMat::GpuMat(class cv::cuda::GpuMat const &,class cv::Range,class cv::Range)
??0GpuMat@cuda@cv@@QEAA@AEBV_InputArray@2@PEAVAllocator@012@@Z;cv::cuda::GpuMat::GpuMat(class cv::_InputArray const &,class cv::cuda::GpuMat::Allocator *)
??0GpuMat@cuda@cv@@QEAA@HHHPEAVAllocator@012@@Z;cv::cuda::GpuMat::GpuMat(int,int,int,class cv::cuda::GpuMat::Allocator *)
??0GpuMat@cuda@cv@@QEAA@HHHPEAX_K@Z;cv::cuda::GpuMat::GpuMat(int,int,int,void *,unsigned __int64)
??0GpuMat@cuda@cv@@QEAA@HHHV?$Scalar_@N@2@PEAVAllocator@012@@Z;cv::cuda::GpuMat::GpuMat(int,int,int,class cv::Scalar_<double>,class cv::cuda::GpuMat::Allocator *)
??0GpuMat@cuda@cv@@QEAA@PEAVAllocator@012@@Z;cv::cuda::GpuMat::GpuMat(class cv::cuda::GpuMat::Allocator *)
??0GpuMat@cuda@cv@@QEAA@V?$Size_@H@2@HPEAVAllocator@012@@Z;cv::cuda::GpuMat::GpuMat(class cv::Size_<int>,int,class cv::cuda::GpuMat::Allocator *)
??0GpuMat@cuda@cv@@QEAA@V?$Size_@H@2@HPEAX_K@Z;cv::cuda::GpuMat::GpuMat(class cv::Size_<int>,int,void *,unsigned __int64)
??0GpuMat@cuda@cv@@QEAA@V?$Size_@H@2@HV?$Scalar_@N@2@PEAVAllocator@012@@Z;cv::cuda::GpuMat::GpuMat(class cv::Size_<int>,int,class cv::Scalar_<double>,class cv::cuda::GpuMat::Allocator *)
??0GpuMatND@cuda@cv@@QEAA@$$QEAV012@@Z;cv::cuda::GpuMatND::GpuMatND(class cv::cuda::GpuMatND &&)
??0GpuMatND@cuda@cv@@QEAA@AEBV012@@Z;cv::cuda::GpuMatND::GpuMatND(class cv::cuda::GpuMatND const &)
??0GpuMatND@cuda@cv@@QEAA@V?$vector@HV?$allocator@H@std@@@std@@H@Z;cv::cuda::GpuMatND::GpuMatND(class std::vector<int,class std::allocator<int> >,int)
??0GpuMatND@cuda@cv@@QEAA@V?$vector@HV?$allocator@H@std@@@std@@HPEAXV?$vector@_KV?$allocator@_K@std@@@4@@Z;cv::cuda::GpuMatND::GpuMatND(class std::vector<int,class std::allocator<int> >,int,void *,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >)
??0GpuMatND@cuda@cv@@QEAA@XZ;cv::cuda::GpuMatND::GpuMatND(void)
??0Graph@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::Graph::Graph(class cv::detail::Graph &&)
??0Graph@detail@cv@@QEAA@AEBV012@@Z;cv::detail::Graph::Graph(class cv::detail::Graph const &)
??0Graph@detail@cv@@QEAA@H@Z;cv::detail::Graph::Graph(int)
??0GraphCutSeamFinder@detail@cv@@QEAA@AEBV012@@Z;cv::detail::GraphCutSeamFinder::GraphCutSeamFinder(class cv::detail::GraphCutSeamFinder const &)
??0GraphCutSeamFinder@detail@cv@@QEAA@HMM@Z;cv::detail::GraphCutSeamFinder::GraphCutSeamFinder(int,float,float)
??0GraphCutSeamFinder@detail@cv@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MM@Z;cv::detail::GraphCutSeamFinder::GraphCutSeamFinder(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,float,float)
??0GraphEdge@detail@cv@@QEAA@HHM@Z;cv::detail::GraphEdge::GraphEdge(int,int,float)
??0HOGDescriptor@cv@@QEAA@AEBU01@@Z;cv::HOGDescriptor::HOGDescriptor(struct cv::HOGDescriptor const &)
??0HOGDescriptor@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::HOGDescriptor::HOGDescriptor(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0HOGDescriptor@cv@@QEAA@V?$Size_@H@1@000HHNW4HistogramNormType@01@N_NH2@Z;cv::HOGDescriptor::HOGDescriptor(class cv::Size_<int>,class cv::Size_<int>,class cv::Size_<int>,class cv::Size_<int>,int,int,double,enum cv::HOGDescriptor::HistogramNormType,double,bool,int,bool)
??0HOGDescriptor@cv@@QEAA@XZ;cv::HOGDescriptor::HOGDescriptor(void)
??0Hdr@SparseMat@cv@@QEAA@$$QEAU012@@Z;cv::SparseMat::Hdr::Hdr(struct cv::SparseMat::Hdr &&)
??0Hdr@SparseMat@cv@@QEAA@AEBU012@@Z;cv::SparseMat::Hdr::Hdr(struct cv::SparseMat::Hdr const &)
??0Hdr@SparseMat@cv@@QEAA@HPEBHH@Z;cv::SparseMat::Hdr::Hdr(int,int const *,int)
??0HierarchicalClusteringIndexParams@flann@cv@@QEAA@HW4flann_centers_init_t@cvflann@@HH@Z;cv::flann::HierarchicalClusteringIndexParams::HierarchicalClusteringIndexParams(int,enum cvflann::flann_centers_init_t,int,int)
??0HomographyBasedEstimator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::HomographyBasedEstimator::HomographyBasedEstimator(class cv::detail::HomographyBasedEstimator &&)
??0HomographyBasedEstimator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::HomographyBasedEstimator::HomographyBasedEstimator(class cv::detail::HomographyBasedEstimator const &)
??0HomographyBasedEstimator@detail@cv@@QEAA@_N@Z;cv::detail::HomographyBasedEstimator::HomographyBasedEstimator(bool)
??0HostMem@cuda@cv@@QEAA@AEBV012@@Z;cv::cuda::HostMem::HostMem(class cv::cuda::HostMem const &)
??0HostMem@cuda@cv@@QEAA@AEBV_InputArray@2@W4AllocType@012@@Z;cv::cuda::HostMem::HostMem(class cv::_InputArray const &,enum cv::cuda::HostMem::AllocType)
??0HostMem@cuda@cv@@QEAA@HHHW4AllocType@012@@Z;cv::cuda::HostMem::HostMem(int,int,int,enum cv::cuda::HostMem::AllocType)
??0HostMem@cuda@cv@@QEAA@V?$Size_@H@2@HW4AllocType@012@@Z;cv::cuda::HostMem::HostMem(class cv::Size_<int>,int,enum cv::cuda::HostMem::AllocType)
??0HostMem@cuda@cv@@QEAA@W4AllocType@012@@Z;cv::cuda::HostMem::HostMem(enum cv::cuda::HostMem::AllocType)
??0IAdapter@MediaFrame@cv@@QEAA@AEBV012@@Z;cv::MediaFrame::IAdapter::IAdapter(class cv::MediaFrame::IAdapter const &)
??0IAdapter@MediaFrame@cv@@QEAA@XZ;cv::MediaFrame::IAdapter::IAdapter(void)
??0IDataProvider@onevpl@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::onevpl::IDataProvider::IDataProvider(struct cv::gapi::wip::onevpl::IDataProvider const &)
??0IDataProvider@onevpl@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::onevpl::IDataProvider::IDataProvider(void)
??0IIStream@s11n@gapi@cv@@QEAA@AEBU0123@@Z;cv::gapi::s11n::IIStream::IIStream(struct cv::gapi::s11n::IIStream const &)
??0IIStream@s11n@gapi@cv@@QEAA@XZ;cv::gapi::s11n::IIStream::IIStream(void)
??0IOStream@s11n@gapi@cv@@QEAA@AEBU0123@@Z;cv::gapi::s11n::IOStream::IOStream(struct cv::gapi::s11n::IOStream const &)
??0IOStream@s11n@gapi@cv@@QEAA@XZ;cv::gapi::s11n::IOStream::IOStream(void)
??0Image2D@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::Image2D::Image2D(class cv::ocl::Image2D &&)
??0Image2D@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::Image2D::Image2D(class cv::ocl::Image2D const &)
??0Image2D@ocl@cv@@QEAA@AEBVUMat@2@_N1@Z;cv::ocl::Image2D::Image2D(class cv::UMat const &,bool,bool)
??0Image2D@ocl@cv@@QEAA@XZ;cv::ocl::Image2D::Image2D(void)
??0Image@draw@wip@gapi@cv@@QEAA@$$QEAU01234@@Z;cv::gapi::wip::draw::Image::Image(struct cv::gapi::wip::draw::Image &&)
??0Image@draw@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::draw::Image::Image(struct cv::gapi::wip::draw::Image const &)
??0Image@draw@wip@gapi@cv@@QEAA@AEBV?$Point_@H@4@AEBVMat@4@1@Z;cv::gapi::wip::draw::Image::Image(class cv::Point_<int> const &,class cv::Mat const &,class cv::Mat const &)
??0Image@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Image::Image(void)
??0ImageFeatures@detail@cv@@QEAA@$$QEAU012@@Z;cv::detail::ImageFeatures::ImageFeatures(struct cv::detail::ImageFeatures &&)
??0ImageFeatures@detail@cv@@QEAA@AEBU012@@Z;cv::detail::ImageFeatures::ImageFeatures(struct cv::detail::ImageFeatures const &)
??0ImageFeatures@detail@cv@@QEAA@XZ;cv::detail::ImageFeatures::ImageFeatures(void)
??0Index@flann@cv@@QEAA@AEBV012@@Z;cv::flann::Index::Index(class cv::flann::Index const &)
??0Index@flann@cv@@QEAA@AEBV_InputArray@2@AEBUIndexParams@12@W4flann_distance_t@cvflann@@@Z;cv::flann::Index::Index(class cv::_InputArray const &,struct cv::flann::IndexParams const &,enum cvflann::flann_distance_t)
??0Index@flann@cv@@QEAA@XZ;cv::flann::Index::Index(void)
??0IndexParams@flann@cv@@QEAA@XZ;cv::flann::IndexParams::IndexParams(void)
??0InnerProductLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::InnerProductLayer::InnerProductLayer(class cv::dnn::dnn4_v20211004::InnerProductLayer &&)
??0InnerProductLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::InnerProductLayer::InnerProductLayer(class cv::dnn::dnn4_v20211004::InnerProductLayer const &)
??0InnerProductLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::InnerProductLayer::InnerProductLayer(void)
??0InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::InnerProductLayerInt8::InnerProductLayerInt8(class cv::dnn::dnn4_v20211004::InnerProductLayerInt8 &&)
??0InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::InnerProductLayerInt8::InnerProductLayerInt8(class cv::dnn::dnn4_v20211004::InnerProductLayerInt8 const &)
??0InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::InnerProductLayerInt8::InnerProductLayerInt8(void)
??0IntelligentScissorsMB@segmentation@cv@@QEAA@$$QEAV012@@Z;cv::segmentation::IntelligentScissorsMB::IntelligentScissorsMB(class cv::segmentation::IntelligentScissorsMB &&)
??0IntelligentScissorsMB@segmentation@cv@@QEAA@AEBV012@@Z;cv::segmentation::IntelligentScissorsMB::IntelligentScissorsMB(class cv::segmentation::IntelligentScissorsMB const &)
??0IntelligentScissorsMB@segmentation@cv@@QEAA@XZ;cv::segmentation::IntelligentScissorsMB::IntelligentScissorsMB(void)
??0InterpLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::InterpLayer::InterpLayer(class cv::dnn::dnn4_v20211004::InterpLayer &&)
??0InterpLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::InterpLayer::InterpLayer(class cv::dnn::dnn4_v20211004::InterpLayer const &)
??0InterpLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::InterpLayer::InterpLayer(void)
??0IntrinsicParams@internal@cv@@QEAA@$$QEAU012@@Z;cv::internal::IntrinsicParams::IntrinsicParams(struct cv::internal::IntrinsicParams &&)
??0IntrinsicParams@internal@cv@@QEAA@AEBU012@@Z;cv::internal::IntrinsicParams::IntrinsicParams(struct cv::internal::IntrinsicParams const &)
??0IntrinsicParams@internal@cv@@QEAA@V?$Vec@N$01@2@0V?$Vec@N$03@2@N@Z;cv::internal::IntrinsicParams::IntrinsicParams(class cv::Vec<double,2>,class cv::Vec<double,2>,class cv::Vec<double,4>,double)
??0IntrinsicParams@internal@cv@@QEAA@XZ;cv::internal::IntrinsicParams::IntrinsicParams(void)
??0KAZE@cv@@QEAA@$$QEAV01@@Z;cv::KAZE::KAZE(class cv::KAZE &&)
??0KAZE@cv@@QEAA@AEBV01@@Z;cv::KAZE::KAZE(class cv::KAZE const &)
??0KAZE@cv@@QEAA@XZ;cv::KAZE::KAZE(void)
??0KDTree@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::KDTree::KDTree(class cv::ml::KDTree &&)
??0KDTree@ml@cv@@QEAA@AEBV012@@Z;cv::ml::KDTree::KDTree(class cv::ml::KDTree const &)
??0KDTree@ml@cv@@QEAA@AEBV_InputArray@2@0_N@Z;cv::ml::KDTree::KDTree(class cv::_InputArray const &,class cv::_InputArray const &,bool)
??0KDTree@ml@cv@@QEAA@AEBV_InputArray@2@_N@Z;cv::ml::KDTree::KDTree(class cv::_InputArray const &,bool)
??0KDTree@ml@cv@@QEAA@XZ;cv::ml::KDTree::KDTree(void)
??0KDTreeIndexParams@flann@cv@@QEAA@H@Z;cv::flann::KDTreeIndexParams::KDTreeIndexParams(int)
??0KMeansIndexParams@flann@cv@@QEAA@HHW4flann_centers_init_t@cvflann@@M@Z;cv::flann::KMeansIndexParams::KMeansIndexParams(int,int,enum cvflann::flann_centers_init_t,float)
??0KNearest@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::KNearest::KNearest(class cv::ml::KNearest &&)
??0KNearest@ml@cv@@QEAA@AEBV012@@Z;cv::ml::KNearest::KNearest(class cv::ml::KNearest const &)
??0KNearest@ml@cv@@QEAA@XZ;cv::ml::KNearest::KNearest(void)
??0KalmanFilter@cv@@QEAA@$$QEAV01@@Z;cv::KalmanFilter::KalmanFilter(class cv::KalmanFilter &&)
??0KalmanFilter@cv@@QEAA@AEBV01@@Z;cv::KalmanFilter::KalmanFilter(class cv::KalmanFilter const &)
??0KalmanFilter@cv@@QEAA@HHHH@Z;cv::KalmanFilter::KalmanFilter(int,int,int,int)
??0KalmanFilter@cv@@QEAA@XZ;cv::KalmanFilter::KalmanFilter(void)
??0KalmanParams@gapi@cv@@QEAA@$$QEAU012@@Z;cv::gapi::KalmanParams::KalmanParams(struct cv::gapi::KalmanParams &&)
??0KalmanParams@gapi@cv@@QEAA@AEBU012@@Z;cv::gapi::KalmanParams::KalmanParams(struct cv::gapi::KalmanParams const &)
??0KalmanParams@gapi@cv@@QEAA@XZ;cv::gapi::KalmanParams::KalmanParams(void)
??0Kernel@SVM@ml@cv@@QEAA@$$QEAV0123@@Z;cv::ml::SVM::Kernel::Kernel(class cv::ml::SVM::Kernel &&)
??0Kernel@SVM@ml@cv@@QEAA@AEBV0123@@Z;cv::ml::SVM::Kernel::Kernel(class cv::ml::SVM::Kernel const &)
??0Kernel@SVM@ml@cv@@QEAA@XZ;cv::ml::SVM::Kernel::Kernel(void)
??0Kernel@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::Kernel::Kernel(class cv::ocl::Kernel &&)
??0Kernel@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::Kernel::Kernel(class cv::ocl::Kernel const &)
??0Kernel@ocl@cv@@QEAA@PEBDAEBVProgram@12@@Z;cv::ocl::Kernel::Kernel(char const *,class cv::ocl::Program const &)
??0Kernel@ocl@cv@@QEAA@PEBDAEBVProgramSource@12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV45@@Z;cv::ocl::Kernel::Kernel(char const *,class cv::ocl::ProgramSource const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
??0Kernel@ocl@cv@@QEAA@XZ;cv::ocl::Kernel::Kernel(void)
??0KernelArg@ocl@cv@@QEAA@HPEAVUMat@2@HHPEBX_K@Z;cv::ocl::KernelArg::KernelArg(int,class cv::UMat *,int,int,void const *,unsigned __int64)
??0KernelArg@ocl@cv@@QEAA@XZ;cv::ocl::KernelArg::KernelArg(void)
??0KeyPoint@cv@@QEAA@MMMMMHH@Z;cv::KeyPoint::KeyPoint(float,float,float,float,float,int,int)
??0KeyPoint@cv@@QEAA@V?$Point_@M@1@MMMHH@Z;cv::KeyPoint::KeyPoint(class cv::Point_<float>,float,float,float,int,int)
??0KeyPoint@cv@@QEAA@XZ;cv::KeyPoint::KeyPoint(void)
??0KeyPointsFilter@cv@@QEAA@XZ;cv::KeyPointsFilter::KeyPointsFilter(void)
??0KeypointsModel@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::KeypointsModel::KeypointsModel(class cv::dnn::dnn4_v20211004::KeypointsModel &&)
??0KeypointsModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::KeypointsModel::KeypointsModel(class cv::dnn::dnn4_v20211004::KeypointsModel const &)
??0KeypointsModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::KeypointsModel::KeypointsModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0KeypointsModel@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::KeypointsModel::KeypointsModel(class cv::dnn::dnn4_v20211004::Net const &)
??0LDA@cv@@QEAA@AEBV01@@Z;cv::LDA::LDA(class cv::LDA const &)
??0LDA@cv@@QEAA@AEBV_InputArray@1@0H@Z;cv::LDA::LDA(class cv::_InputArray const &,class cv::_InputArray const &,int)
??0LDA@cv@@QEAA@H@Z;cv::LDA::LDA(int)
??0LMSolver@cv@@QEAA@$$QEAV01@@Z;cv::LMSolver::LMSolver(class cv::LMSolver &&)
??0LMSolver@cv@@QEAA@AEBV01@@Z;cv::LMSolver::LMSolver(class cv::LMSolver const &)
??0LMSolver@cv@@QEAA@XZ;cv::LMSolver::LMSolver(void)
??0LRNLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::LRNLayer::LRNLayer(class cv::dnn::dnn4_v20211004::LRNLayer &&)
??0LRNLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::LRNLayer::LRNLayer(class cv::dnn::dnn4_v20211004::LRNLayer const &)
??0LRNLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::LRNLayer::LRNLayer(void)
??0LSTMLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::LSTMLayer::LSTMLayer(class cv::dnn::dnn4_v20211004::LSTMLayer &&)
??0LSTMLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::LSTMLayer::LSTMLayer(class cv::dnn::dnn4_v20211004::LSTMLayer const &)
??0LSTMLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::LSTMLayer::LSTMLayer(void)
??0Layer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::Layer::Layer(class cv::dnn::dnn4_v20211004::Layer const &)
??0Layer@dnn4_v20211004@dnn@cv@@QEAA@AEBVLayerParams@123@@Z;cv::dnn::dnn4_v20211004::Layer::Layer(class cv::dnn::dnn4_v20211004::LayerParams const &)
??0Layer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::Layer::Layer(void)
??0LayerParams@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::LayerParams::LayerParams(class cv::dnn::dnn4_v20211004::LayerParams &&)
??0LayerParams@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::LayerParams::LayerParams(class cv::dnn::dnn4_v20211004::LayerParams const &)
??0LayerParams@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::LayerParams::LayerParams(void)
??0Line@draw@wip@gapi@cv@@QEAA@$$QEAU01234@@Z;cv::gapi::wip::draw::Line::Line(struct cv::gapi::wip::draw::Line &&)
??0Line@draw@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::draw::Line::Line(struct cv::gapi::wip::draw::Line const &)
??0Line@draw@wip@gapi@cv@@QEAA@AEBV?$Point_@H@4@0AEBV?$Scalar_@N@4@HHH@Z;cv::gapi::wip::draw::Line::Line(class cv::Point_<int> const &,class cv::Point_<int> const &,class cv::Scalar_<double> const &,int,int,int)
??0Line@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Line::Line(void)
??0LineIterator@cv@@QEAA@AEBVMat@1@V?$Point_@H@1@1H_N@Z;cv::LineIterator::LineIterator(class cv::Mat const &,class cv::Point_<int>,class cv::Point_<int>,int,bool)
??0LineIterator@cv@@QEAA@V?$Point_@H@1@0H_N@Z;cv::LineIterator::LineIterator(class cv::Point_<int>,class cv::Point_<int>,int,bool)
??0LineIterator@cv@@QEAA@V?$Rect_@H@1@V?$Point_@H@1@1H_N@Z;cv::LineIterator::LineIterator(class cv::Rect_<int>,class cv::Point_<int>,class cv::Point_<int>,int,bool)
??0LineIterator@cv@@QEAA@V?$Size_@H@1@V?$Point_@H@1@1H_N@Z;cv::LineIterator::LineIterator(class cv::Size_<int>,class cv::Point_<int>,class cv::Point_<int>,int,bool)
??0LineSegmentDetector@cv@@QEAA@AEBV01@@Z;cv::LineSegmentDetector::LineSegmentDetector(class cv::LineSegmentDetector const &)
??0LineSegmentDetector@cv@@QEAA@XZ;cv::LineSegmentDetector::LineSegmentDetector(void)
??0LinearIndexParams@flann@cv@@QEAA@XZ;cv::flann::LinearIndexParams::LinearIndexParams(void)
??0LogisticRegression@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::LogisticRegression::LogisticRegression(class cv::ml::LogisticRegression &&)
??0LogisticRegression@ml@cv@@QEAA@AEBV012@@Z;cv::ml::LogisticRegression::LogisticRegression(class cv::ml::LogisticRegression const &)
??0LogisticRegression@ml@cv@@QEAA@XZ;cv::ml::LogisticRegression::LogisticRegression(void)
??0LshIndexParams@flann@cv@@QEAA@HHH@Z;cv::flann::LshIndexParams::LshIndexParams(int,int,int)
??0MSER@cv@@QEAA@$$QEAV01@@Z;cv::MSER::MSER(class cv::MSER &&)
??0MSER@cv@@QEAA@AEBV01@@Z;cv::MSER::MSER(class cv::MSER const &)
??0MSER@cv@@QEAA@XZ;cv::MSER::MSER(void)
??0MVNLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::MVNLayer::MVNLayer(class cv::dnn::dnn4_v20211004::MVNLayer &&)
??0MVNLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::MVNLayer::MVNLayer(class cv::dnn::dnn4_v20211004::MVNLayer const &)
??0MVNLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::MVNLayer::MVNLayer(void)
??0MaskGenerator@BaseCascadeClassifier@cv@@QEAA@AEBV012@@Z;cv::BaseCascadeClassifier::MaskGenerator::MaskGenerator(class cv::BaseCascadeClassifier::MaskGenerator const &)
??0MaskGenerator@BaseCascadeClassifier@cv@@QEAA@XZ;cv::BaseCascadeClassifier::MaskGenerator::MaskGenerator(void)
??0Mat@cv@@QEAA@$$QEAV01@@Z;cv::Mat::Mat(class cv::Mat &&)
??0Mat@cv@@QEAA@AEBV01@@Z;cv::Mat::Mat(class cv::Mat const &)
??0Mat@cv@@QEAA@AEBV01@AEBV?$Rect_@H@1@@Z;cv::Mat::Mat(class cv::Mat const &,class cv::Rect_<int> const &)
??0Mat@cv@@QEAA@AEBV01@AEBV?$vector@VRange@cv@@V?$allocator@VRange@cv@@@std@@@std@@@Z;cv::Mat::Mat(class cv::Mat const &,class std::vector<class cv::Range,class std::allocator<class cv::Range> > const &)
??0Mat@cv@@QEAA@AEBV01@AEBVRange@1@1@Z;cv::Mat::Mat(class cv::Mat const &,class cv::Range const &,class cv::Range const &)
??0Mat@cv@@QEAA@AEBV01@PEBVRange@1@@Z;cv::Mat::Mat(class cv::Mat const &,class cv::Range const *)
??0Mat@cv@@QEAA@AEBV?$vector@HV?$allocator@H@std@@@std@@H@Z;cv::Mat::Mat(class std::vector<int,class std::allocator<int> > const &,int)
??0Mat@cv@@QEAA@AEBV?$vector@HV?$allocator@H@std@@@std@@HAEBV?$Scalar_@N@1@@Z;cv::Mat::Mat(class std::vector<int,class std::allocator<int> > const &,int,class cv::Scalar_<double> const &)
??0Mat@cv@@QEAA@AEBV?$vector@HV?$allocator@H@std@@@std@@HPEAXPEB_K@Z;cv::Mat::Mat(class std::vector<int,class std::allocator<int> > const &,int,void *,unsigned __int64 const *)
??0Mat@cv@@QEAA@AEBVGpuMat@cuda@1@@Z;cv::Mat::Mat(class cv::cuda::GpuMat const &)
??0Mat@cv@@QEAA@HHH@Z;cv::Mat::Mat(int,int,int)
??0Mat@cv@@QEAA@HHHAEBV?$Scalar_@N@1@@Z;cv::Mat::Mat(int,int,int,class cv::Scalar_<double> const &)
??0Mat@cv@@QEAA@HHHPEAX_K@Z;cv::Mat::Mat(int,int,int,void *,unsigned __int64)
??0Mat@cv@@QEAA@HPEBHH@Z;cv::Mat::Mat(int,int const *,int)
??0Mat@cv@@QEAA@HPEBHHAEBV?$Scalar_@N@1@@Z;cv::Mat::Mat(int,int const *,int,class cv::Scalar_<double> const &)
??0Mat@cv@@QEAA@HPEBHHPEAXPEB_K@Z;cv::Mat::Mat(int,int const *,int,void *,unsigned __int64 const *)
??0Mat@cv@@QEAA@V?$Size_@H@1@H@Z;cv::Mat::Mat(class cv::Size_<int>,int)
??0Mat@cv@@QEAA@V?$Size_@H@1@HAEBV?$Scalar_@N@1@@Z;cv::Mat::Mat(class cv::Size_<int>,int,class cv::Scalar_<double> const &)
??0Mat@cv@@QEAA@V?$Size_@H@1@HPEAX_K@Z;cv::Mat::Mat(class cv::Size_<int>,int,void *,unsigned __int64)
??0Mat@cv@@QEAA@XZ;cv::Mat::Mat(void)
??0MatAllocator@cv@@QEAA@AEBV01@@Z;cv::MatAllocator::MatAllocator(class cv::MatAllocator const &)
??0MatAllocator@cv@@QEAA@XZ;cv::MatAllocator::MatAllocator(void)
??0MatConstIterator@cv@@QEAA@AEBV01@@Z;cv::MatConstIterator::MatConstIterator(class cv::MatConstIterator const &)
??0MatConstIterator@cv@@QEAA@PEBVMat@1@@Z;cv::MatConstIterator::MatConstIterator(class cv::Mat const *)
??0MatConstIterator@cv@@QEAA@PEBVMat@1@HH@Z;cv::MatConstIterator::MatConstIterator(class cv::Mat const *,int,int)
??0MatConstIterator@cv@@QEAA@PEBVMat@1@V?$Point_@H@1@@Z;cv::MatConstIterator::MatConstIterator(class cv::Mat const *,class cv::Point_<int>)
??0MatConstIterator@cv@@QEAA@XZ;cv::MatConstIterator::MatConstIterator(void)
??0MatExpr@cv@@QEAA@$$QEAV01@@Z;cv::MatExpr::MatExpr(class cv::MatExpr &&)
??0MatExpr@cv@@QEAA@AEBV01@@Z;cv::MatExpr::MatExpr(class cv::MatExpr const &)
??0MatExpr@cv@@QEAA@AEBVMat@1@@Z;cv::MatExpr::MatExpr(class cv::Mat const &)
??0MatExpr@cv@@QEAA@PEBVMatOp@1@HAEBVMat@1@11NNAEBV?$Scalar_@N@1@@Z;cv::MatExpr::MatExpr(class cv::MatOp const *,int,class cv::Mat const &,class cv::Mat const &,class cv::Mat const &,double,double,class cv::Scalar_<double> const &)
??0MatExpr@cv@@QEAA@XZ;cv::MatExpr::MatExpr(void)
??0MatOp@cv@@QEAA@AEBV01@@Z;cv::MatOp::MatOp(class cv::MatOp const &)
??0MatOp@cv@@QEAA@XZ;cv::MatOp::MatOp(void)
??0MatSize@cv@@QEAA@PEAH@Z;cv::MatSize::MatSize(int *)
??0MatStep@cv@@QEAA@XZ;cv::MatStep::MatStep(void)
??0MatStep@cv@@QEAA@_K@Z;cv::MatStep::MatStep(unsigned __int64)
??0MatchesInfo@detail@cv@@QEAA@AEBU012@@Z;cv::detail::MatchesInfo::MatchesInfo(struct cv::detail::MatchesInfo const &)
??0MatchesInfo@detail@cv@@QEAA@XZ;cv::detail::MatchesInfo::MatchesInfo(void)
??0Matx_AddOp@cv@@QEAA@AEBU01@@Z;cv::Matx_AddOp::Matx_AddOp(struct cv::Matx_AddOp const &)
??0Matx_AddOp@cv@@QEAA@XZ;cv::Matx_AddOp::Matx_AddOp(void)
??0Matx_DivOp@cv@@QEAA@AEBU01@@Z;cv::Matx_DivOp::Matx_DivOp(struct cv::Matx_DivOp const &)
??0Matx_DivOp@cv@@QEAA@XZ;cv::Matx_DivOp::Matx_DivOp(void)
??0Matx_MatMulOp@cv@@QEAA@AEBU01@@Z;cv::Matx_MatMulOp::Matx_MatMulOp(struct cv::Matx_MatMulOp const &)
??0Matx_MatMulOp@cv@@QEAA@XZ;cv::Matx_MatMulOp::Matx_MatMulOp(void)
??0Matx_MulOp@cv@@QEAA@AEBU01@@Z;cv::Matx_MulOp::Matx_MulOp(struct cv::Matx_MulOp const &)
??0Matx_MulOp@cv@@QEAA@XZ;cv::Matx_MulOp::Matx_MulOp(void)
??0Matx_ScaleOp@cv@@QEAA@AEBU01@@Z;cv::Matx_ScaleOp::Matx_ScaleOp(struct cv::Matx_ScaleOp const &)
??0Matx_ScaleOp@cv@@QEAA@XZ;cv::Matx_ScaleOp::Matx_ScaleOp(void)
??0Matx_SubOp@cv@@QEAA@AEBU01@@Z;cv::Matx_SubOp::Matx_SubOp(struct cv::Matx_SubOp const &)
??0Matx_SubOp@cv@@QEAA@XZ;cv::Matx_SubOp::Matx_SubOp(void)
??0Matx_TOp@cv@@QEAA@AEBU01@@Z;cv::Matx_TOp::Matx_TOp(struct cv::Matx_TOp const &)
??0Matx_TOp@cv@@QEAA@XZ;cv::Matx_TOp::Matx_TOp(void)
??0MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::MaxUnpoolLayer::MaxUnpoolLayer(class cv::dnn::dnn4_v20211004::MaxUnpoolLayer &&)
??0MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::MaxUnpoolLayer::MaxUnpoolLayer(class cv::dnn::dnn4_v20211004::MaxUnpoolLayer const &)
??0MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::MaxUnpoolLayer::MaxUnpoolLayer(void)
??0MediaFrame@cv@@QEAA@$$QEAV01@@Z;cv::MediaFrame::MediaFrame(class cv::MediaFrame &&)
??0MediaFrame@cv@@QEAA@$$QEAV?$unique_ptr@VIAdapter@MediaFrame@cv@@U?$default_delete@VIAdapter@MediaFrame@cv@@@std@@@std@@@Z;cv::MediaFrame::MediaFrame(class std::unique_ptr<class cv::MediaFrame::IAdapter,struct std::default_delete<class cv::MediaFrame::IAdapter> > &&)
??0MediaFrame@cv@@QEAA@AEBV01@@Z;cv::MediaFrame::MediaFrame(class cv::MediaFrame const &)
??0MediaFrame@cv@@QEAA@XZ;cv::MediaFrame::MediaFrame(void)
??0MercatorWarper@cv@@QEAA@$$QEAV01@@Z;cv::MercatorWarper::MercatorWarper(class cv::MercatorWarper &&)
??0MercatorWarper@cv@@QEAA@AEBV01@@Z;cv::MercatorWarper::MercatorWarper(class cv::MercatorWarper const &)
??0MercatorWarper@cv@@QEAA@XZ;cv::MercatorWarper::MercatorWarper(void)
??0MercatorWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::MercatorWarper::MercatorWarper(class cv::detail::MercatorWarper &&)
??0MercatorWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::MercatorWarper::MercatorWarper(class cv::detail::MercatorWarper const &)
??0MercatorWarper@detail@cv@@QEAA@M@Z;cv::detail::MercatorWarper::MercatorWarper(float)
??0MergeDebevec@cv@@QEAA@$$QEAV01@@Z;cv::MergeDebevec::MergeDebevec(class cv::MergeDebevec &&)
??0MergeDebevec@cv@@QEAA@AEBV01@@Z;cv::MergeDebevec::MergeDebevec(class cv::MergeDebevec const &)
??0MergeDebevec@cv@@QEAA@XZ;cv::MergeDebevec::MergeDebevec(void)
??0MergeExposures@cv@@QEAA@$$QEAV01@@Z;cv::MergeExposures::MergeExposures(class cv::MergeExposures &&)
??0MergeExposures@cv@@QEAA@AEBV01@@Z;cv::MergeExposures::MergeExposures(class cv::MergeExposures const &)
??0MergeExposures@cv@@QEAA@XZ;cv::MergeExposures::MergeExposures(void)
??0MergeMertens@cv@@QEAA@$$QEAV01@@Z;cv::MergeMertens::MergeMertens(class cv::MergeMertens &&)
??0MergeMertens@cv@@QEAA@AEBV01@@Z;cv::MergeMertens::MergeMertens(class cv::MergeMertens const &)
??0MergeMertens@cv@@QEAA@XZ;cv::MergeMertens::MergeMertens(void)
??0MergeRobertson@cv@@QEAA@$$QEAV01@@Z;cv::MergeRobertson::MergeRobertson(class cv::MergeRobertson &&)
??0MergeRobertson@cv@@QEAA@AEBV01@@Z;cv::MergeRobertson::MergeRobertson(class cv::MergeRobertson const &)
??0MergeRobertson@cv@@QEAA@XZ;cv::MergeRobertson::MergeRobertson(void)
??0MinProblemSolver@cv@@QEAA@$$QEAV01@@Z;cv::MinProblemSolver::MinProblemSolver(class cv::MinProblemSolver &&)
??0MinProblemSolver@cv@@QEAA@AEBV01@@Z;cv::MinProblemSolver::MinProblemSolver(class cv::MinProblemSolver const &)
??0MinProblemSolver@cv@@QEAA@XZ;cv::MinProblemSolver::MinProblemSolver(void)
??0MishLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::MishLayer::MishLayer(class cv::dnn::dnn4_v20211004::MishLayer &&)
??0MishLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::MishLayer::MishLayer(class cv::dnn::dnn4_v20211004::MishLayer const &)
??0MishLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::MishLayer::MishLayer(void)
??0Model@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::Model::Model(class cv::dnn::dnn4_v20211004::Model &&)
??0Model@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::Model::Model(class cv::dnn::dnn4_v20211004::Model const &)
??0Model@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::Model::Model(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0Model@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::Model::Model(class cv::dnn::dnn4_v20211004::Net const &)
??0Model@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::Model::Model(void)
??0Moments@cv@@QEAA@NNNNNNNNNN@Z;cv::Moments::Moments(double,double,double,double,double,double,double,double,double,double)
??0Moments@cv@@QEAA@XZ;cv::Moments::Moments(void)
??0Morph@hal@cv@@QEAA@AEBU012@@Z;cv::hal::Morph::Morph(struct cv::hal::Morph const &)
??0Morph@hal@cv@@QEAA@XZ;cv::hal::Morph::Morph(void)
??0Mosaic@draw@wip@gapi@cv@@QEAA@AEBV?$Rect_@H@4@HH@Z;cv::gapi::wip::draw::Mosaic::Mosaic(class cv::Rect_<int> const &,int,int)
??0Mosaic@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Mosaic::Mosaic(void)
??0MultiBandBlender@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::MultiBandBlender::MultiBandBlender(class cv::detail::MultiBandBlender &&)
??0MultiBandBlender@detail@cv@@QEAA@AEBV012@@Z;cv::detail::MultiBandBlender::MultiBandBlender(class cv::detail::MultiBandBlender const &)
??0MultiBandBlender@detail@cv@@QEAA@HHH@Z;cv::detail::MultiBandBlender::MultiBandBlender(int,int,int)
??0NAryMatIterator@cv@@QEAA@PEAPEBVMat@1@PEAPEAEH@Z;cv::NAryMatIterator::NAryMatIterator(class cv::Mat const * *,unsigned char * *,int)
??0NAryMatIterator@cv@@QEAA@PEAPEBVMat@1@PEAV21@H@Z;cv::NAryMatIterator::NAryMatIterator(class cv::Mat const * *,class cv::Mat *,int)
??0NAryMatIterator@cv@@QEAA@XZ;cv::NAryMatIterator::NAryMatIterator(void)
??0Net@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::Net::Net(class cv::dnn::dnn4_v20211004::Net const &)
??0Net@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::Net::Net(void)
??0NoBundleAdjuster@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::NoBundleAdjuster::NoBundleAdjuster(class cv::detail::NoBundleAdjuster &&)
??0NoBundleAdjuster@detail@cv@@QEAA@AEBV012@@Z;cv::detail::NoBundleAdjuster::NoBundleAdjuster(class cv::detail::NoBundleAdjuster const &)
??0NoBundleAdjuster@detail@cv@@QEAA@XZ;cv::detail::NoBundleAdjuster::NoBundleAdjuster(void)
??0NoExposureCompensator@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::NoExposureCompensator::NoExposureCompensator(class cv::detail::NoExposureCompensator &&)
??0NoExposureCompensator@detail@cv@@QEAA@AEBV012@@Z;cv::detail::NoExposureCompensator::NoExposureCompensator(class cv::detail::NoExposureCompensator const &)
??0NoExposureCompensator@detail@cv@@QEAA@XZ;cv::detail::NoExposureCompensator::NoExposureCompensator(void)
??0NoSeamFinder@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::NoSeamFinder::NoSeamFinder(class cv::detail::NoSeamFinder &&)
??0NoSeamFinder@detail@cv@@QEAA@AEBV012@@Z;cv::detail::NoSeamFinder::NoSeamFinder(class cv::detail::NoSeamFinder const &)
??0NoSeamFinder@detail@cv@@QEAA@XZ;cv::detail::NoSeamFinder::NoSeamFinder(void)
??0Node@DTrees@ml@cv@@QEAA@XZ;cv::ml::DTrees::Node::Node(void)
??0NodeData@instr@cv@@QEAA@AEAV012@@Z;cv::instr::NodeData::NodeData(class cv::instr::NodeData &)
??0NodeData@instr@cv@@QEAA@PEBD0HPEAX_NW4TYPE@12@W4IMPL@12@@Z;cv::instr::NodeData::NodeData(char const *,char const *,int,void *,bool,enum cv::instr::TYPE,enum cv::instr::IMPL)
??0NormalBayesClassifier@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::NormalBayesClassifier::NormalBayesClassifier(class cv::ml::NormalBayesClassifier &&)
??0NormalBayesClassifier@ml@cv@@QEAA@AEBV012@@Z;cv::ml::NormalBayesClassifier::NormalBayesClassifier(class cv::ml::NormalBayesClassifier const &)
??0NormalBayesClassifier@ml@cv@@QEAA@XZ;cv::ml::NormalBayesClassifier::NormalBayesClassifier(void)
??0NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::NormalizeBBoxLayer(class cv::dnn::dnn4_v20211004::NormalizeBBoxLayer &&)
??0NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::NormalizeBBoxLayer(class cv::dnn::dnn4_v20211004::NormalizeBBoxLayer const &)
??0NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::NormalizeBBoxLayer(void)
??0ORB@cv@@QEAA@$$QEAV01@@Z;cv::ORB::ORB(class cv::ORB &&)
??0ORB@cv@@QEAA@AEBV01@@Z;cv::ORB::ORB(class cv::ORB const &)
??0ORB@cv@@QEAA@XZ;cv::ORB::ORB(void)
??0OpenCLExecutionContext@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::OpenCLExecutionContext::OpenCLExecutionContext(class cv::ocl::OpenCLExecutionContext &&)
??0OpenCLExecutionContext@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::OpenCLExecutionContext::OpenCLExecutionContext(class cv::ocl::OpenCLExecutionContext const &)
??0OpenCLExecutionContext@ocl@cv@@QEAA@XZ;cv::ocl::OpenCLExecutionContext::OpenCLExecutionContext(void)
??0PCA@cv@@QEAA@$$QEAV01@@Z;cv::PCA::PCA(class cv::PCA &&)
??0PCA@cv@@QEAA@AEBV01@@Z;cv::PCA::PCA(class cv::PCA const &)
??0PCA@cv@@QEAA@AEBV_InputArray@1@0HH@Z;cv::PCA::PCA(class cv::_InputArray const &,class cv::_InputArray const &,int,int)
??0PCA@cv@@QEAA@AEBV_InputArray@1@0HN@Z;cv::PCA::PCA(class cv::_InputArray const &,class cv::_InputArray const &,int,double)
??0PCA@cv@@QEAA@XZ;cv::PCA::PCA(void)
??0PaddingLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::PaddingLayer::PaddingLayer(class cv::dnn::dnn4_v20211004::PaddingLayer &&)
??0PaddingLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::PaddingLayer::PaddingLayer(class cv::dnn::dnn4_v20211004::PaddingLayer const &)
??0PaddingLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::PaddingLayer::PaddingLayer(void)
??0PairwiseSeamFinder@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::PairwiseSeamFinder::PairwiseSeamFinder(class cv::detail::PairwiseSeamFinder &&)
??0PairwiseSeamFinder@detail@cv@@QEAA@AEBV012@@Z;cv::detail::PairwiseSeamFinder::PairwiseSeamFinder(class cv::detail::PairwiseSeamFinder const &)
??0PairwiseSeamFinder@detail@cv@@QEAA@XZ;cv::detail::PairwiseSeamFinder::PairwiseSeamFinder(void)
??0PaniniPortraitWarper@cv@@QEAA@$$QEAV01@@Z;cv::PaniniPortraitWarper::PaniniPortraitWarper(class cv::PaniniPortraitWarper &&)
??0PaniniPortraitWarper@cv@@QEAA@AEBV01@@Z;cv::PaniniPortraitWarper::PaniniPortraitWarper(class cv::PaniniPortraitWarper const &)
??0PaniniPortraitWarper@cv@@QEAA@MM@Z;cv::PaniniPortraitWarper::PaniniPortraitWarper(float,float)
??0PaniniPortraitWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::PaniniPortraitWarper::PaniniPortraitWarper(class cv::detail::PaniniPortraitWarper &&)
??0PaniniPortraitWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::PaniniPortraitWarper::PaniniPortraitWarper(class cv::detail::PaniniPortraitWarper const &)
??0PaniniPortraitWarper@detail@cv@@QEAA@MMM@Z;cv::detail::PaniniPortraitWarper::PaniniPortraitWarper(float,float,float)
??0PaniniWarper@cv@@QEAA@$$QEAV01@@Z;cv::PaniniWarper::PaniniWarper(class cv::PaniniWarper &&)
??0PaniniWarper@cv@@QEAA@AEBV01@@Z;cv::PaniniWarper::PaniniWarper(class cv::PaniniWarper const &)
??0PaniniWarper@cv@@QEAA@MM@Z;cv::PaniniWarper::PaniniWarper(float,float)
??0PaniniWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::PaniniWarper::PaniniWarper(class cv::detail::PaniniWarper &&)
??0PaniniWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::PaniniWarper::PaniniWarper(class cv::detail::PaniniWarper const &)
??0PaniniWarper@detail@cv@@QEAA@MMM@Z;cv::detail::PaniniWarper::PaniniWarper(float,float,float)
??0ParallelForAPI@parallel@cv@@QEAA@AEBV012@@Z;cv::parallel::ParallelForAPI::ParallelForAPI(class cv::parallel::ParallelForAPI const &)
??0ParallelForAPI@parallel@cv@@QEAA@XZ;cv::parallel::ParallelForAPI::ParallelForAPI(void)
??0ParallelLoopBody@cv@@QEAA@AEBV01@@Z;cv::ParallelLoopBody::ParallelLoopBody(class cv::ParallelLoopBody const &)
??0ParallelLoopBody@cv@@QEAA@XZ;cv::ParallelLoopBody::ParallelLoopBody(void)
??0ParamGrid@ml@cv@@QEAA@NNN@Z;cv::ml::ParamGrid::ParamGrid(double,double,double)
??0ParamGrid@ml@cv@@QEAA@XZ;cv::ml::ParamGrid::ParamGrid(void)
??0Parameters@DetectionBasedTracker@cv@@QEAA@XZ;cv::DetectionBasedTracker::Parameters::Parameters(void)
??0Params@ClfMilBoost@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::ClfMilBoost::Params::Params(void)
??0Params@SimpleBlobDetector@cv@@QEAA@XZ;cv::SimpleBlobDetector::Params::Params(void)
??0Params@TrackerDaSiamRPN@cv@@QEAA@$$QEAU012@@Z;cv::TrackerDaSiamRPN::Params::Params(struct cv::TrackerDaSiamRPN::Params &&)
??0Params@TrackerDaSiamRPN@cv@@QEAA@AEBU012@@Z;cv::TrackerDaSiamRPN::Params::Params(struct cv::TrackerDaSiamRPN::Params const &)
??0Params@TrackerDaSiamRPN@cv@@QEAA@XZ;cv::TrackerDaSiamRPN::Params::Params(void)
??0Params@TrackerGOTURN@cv@@QEAA@$$QEAU012@@Z;cv::TrackerGOTURN::Params::Params(struct cv::TrackerGOTURN::Params &&)
??0Params@TrackerGOTURN@cv@@QEAA@AEBU012@@Z;cv::TrackerGOTURN::Params::Params(struct cv::TrackerGOTURN::Params const &)
??0Params@TrackerGOTURN@cv@@QEAA@XZ;cv::TrackerGOTURN::Params::Params(void)
??0Params@TrackerMIL@cv@@QEAA@XZ;cv::TrackerMIL::Params::Params(void)
??0Params@TrackerSamplerCSC@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerSamplerCSC::Params::Params(void)
??0PermuteLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::PermuteLayer::PermuteLayer(class cv::dnn::dnn4_v20211004::PermuteLayer &&)
??0PermuteLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::PermuteLayer::PermuteLayer(class cv::dnn::dnn4_v20211004::PermuteLayer const &)
??0PermuteLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::PermuteLayer::PermuteLayer(void)
??0PlanePortraitWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::PlanePortraitWarper::PlanePortraitWarper(class cv::detail::PlanePortraitWarper &&)
??0PlanePortraitWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::PlanePortraitWarper::PlanePortraitWarper(class cv::detail::PlanePortraitWarper const &)
??0PlanePortraitWarper@detail@cv@@QEAA@M@Z;cv::detail::PlanePortraitWarper::PlanePortraitWarper(float)
??0PlaneWarper@cv@@QEAA@$$QEAV01@@Z;cv::PlaneWarper::PlaneWarper(class cv::PlaneWarper &&)
??0PlaneWarper@cv@@QEAA@AEBV01@@Z;cv::PlaneWarper::PlaneWarper(class cv::PlaneWarper const &)
??0PlaneWarper@cv@@QEAA@XZ;cv::PlaneWarper::PlaneWarper(void)
??0PlaneWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::PlaneWarper::PlaneWarper(class cv::detail::PlaneWarper &&)
??0PlaneWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::PlaneWarper::PlaneWarper(class cv::detail::PlaneWarper const &)
??0PlaneWarper@detail@cv@@QEAA@M@Z;cv::detail::PlaneWarper::PlaneWarper(float)
??0PlaneWarperGpu@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::PlaneWarperGpu::PlaneWarperGpu(class cv::detail::PlaneWarperGpu &&)
??0PlaneWarperGpu@detail@cv@@QEAA@AEBV012@@Z;cv::detail::PlaneWarperGpu::PlaneWarperGpu(class cv::detail::PlaneWarperGpu const &)
??0PlaneWarperGpu@detail@cv@@QEAA@M@Z;cv::detail::PlaneWarperGpu::PlaneWarperGpu(float)
??0Platform@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::Platform::Platform(class cv::ocl::Platform &&)
??0Platform@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::Platform::Platform(class cv::ocl::Platform const &)
??0Platform@ocl@cv@@QEAA@XZ;cv::ocl::Platform::Platform(void)
??0PlatformInfo@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::PlatformInfo::PlatformInfo(class cv::ocl::PlatformInfo &&)
??0PlatformInfo@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::PlatformInfo::PlatformInfo(class cv::ocl::PlatformInfo const &)
??0PlatformInfo@ocl@cv@@QEAA@PEAX@Z;cv::ocl::PlatformInfo::PlatformInfo(void *)
??0PlatformInfo@ocl@cv@@QEAA@XZ;cv::ocl::PlatformInfo::PlatformInfo(void)
??0PointSetRegistrator@cv@@QEAA@$$QEAV01@@Z;cv::PointSetRegistrator::PointSetRegistrator(class cv::PointSetRegistrator &&)
??0PointSetRegistrator@cv@@QEAA@AEBV01@@Z;cv::PointSetRegistrator::PointSetRegistrator(class cv::PointSetRegistrator const &)
??0PointSetRegistrator@cv@@QEAA@XZ;cv::PointSetRegistrator::PointSetRegistrator(void)
??0Poly@draw@wip@gapi@cv@@QEAA@$$QEAU01234@@Z;cv::gapi::wip::draw::Poly::Poly(struct cv::gapi::wip::draw::Poly &&)
??0Poly@draw@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::draw::Poly::Poly(struct cv::gapi::wip::draw::Poly const &)
??0Poly@draw@wip@gapi@cv@@QEAA@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$Scalar_@N@4@HHH@Z;cv::gapi::wip::draw::Poly::Poly(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class cv::Scalar_<double> const &,int,int,int)
??0Poly@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Poly::Poly(void)
??0PoolingLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::PoolingLayer::PoolingLayer(class cv::dnn::dnn4_v20211004::PoolingLayer &&)
??0PoolingLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::PoolingLayer::PoolingLayer(class cv::dnn::dnn4_v20211004::PoolingLayer const &)
??0PoolingLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::PoolingLayer::PoolingLayer(void)
??0PoolingLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::PoolingLayerInt8::PoolingLayerInt8(class cv::dnn::dnn4_v20211004::PoolingLayerInt8 &&)
??0PoolingLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::PoolingLayerInt8::PoolingLayerInt8(class cv::dnn::dnn4_v20211004::PoolingLayerInt8 const &)
??0PoolingLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::PoolingLayerInt8::PoolingLayerInt8(void)
??0PowerLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::PowerLayer::PowerLayer(class cv::dnn::dnn4_v20211004::PowerLayer &&)
??0PowerLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::PowerLayer::PowerLayer(class cv::dnn::dnn4_v20211004::PowerLayer const &)
??0PowerLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::PowerLayer::PowerLayer(void)
??0PriorBoxLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::PriorBoxLayer::PriorBoxLayer(class cv::dnn::dnn4_v20211004::PriorBoxLayer &&)
??0PriorBoxLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::PriorBoxLayer::PriorBoxLayer(class cv::dnn::dnn4_v20211004::PriorBoxLayer const &)
??0PriorBoxLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::PriorBoxLayer::PriorBoxLayer(void)
??0Priv@Buffer@fluid@gapi@cv@@QEAA@$$QEAV01234@@Z;cv::gapi::fluid::Buffer::Priv::Priv(class cv::gapi::fluid::Buffer::Priv &&)
??0Priv@Buffer@fluid@gapi@cv@@QEAA@HV?$Rect_@H@4@@Z;cv::gapi::fluid::Buffer::Priv::Priv(int,class cv::Rect_<int>)
??0Priv@Buffer@fluid@gapi@cv@@QEAA@XZ;cv::gapi::fluid::Buffer::Priv::Priv(void)
??0Priv@GBackend@gapi@cv@@QEAA@AEBV0123@@Z;cv::gapi::GBackend::Priv::Priv(class cv::gapi::GBackend::Priv const &)
??0Priv@GBackend@gapi@cv@@QEAA@XZ;cv::gapi::GBackend::Priv::Priv(void)
??0Priv@GCompiled@cv@@QEAA@$$QEAV012@@Z;cv::GCompiled::Priv::Priv(class cv::GCompiled::Priv &&)
??0Priv@GCompiled@cv@@QEAA@XZ;cv::GCompiled::Priv::Priv(void)
??0Priv@GStreamingCompiled@cv@@QEAA@$$QEAV012@@Z;cv::GStreamingCompiled::Priv::Priv(class cv::GStreamingCompiled::Priv &&)
??0Priv@GStreamingCompiled@cv@@QEAA@XZ;cv::GStreamingCompiled::Priv::Priv(void)
??0Priv@View@fluid@gapi@cv@@QEAA@AEBV01234@@Z;cv::gapi::fluid::View::Priv::Priv(class cv::gapi::fluid::View::Priv const &)
??0Priv@View@fluid@gapi@cv@@QEAA@XZ;cv::gapi::fluid::View::Priv::Priv(void)
??0Program@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::Program::Program(class cv::ocl::Program &&)
??0Program@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::Program::Program(class cv::ocl::Program const &)
??0Program@ocl@cv@@QEAA@AEBVProgramSource@12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV45@@Z;cv::ocl::Program::Program(class cv::ocl::ProgramSource const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
??0Program@ocl@cv@@QEAA@XZ;cv::ocl::Program::Program(void)
??0ProgramSource@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::ProgramSource::ProgramSource(class cv::ocl::ProgramSource &&)
??0ProgramSource@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::ProgramSource::ProgramSource(class cv::ocl::ProgramSource const &)
??0ProgramSource@ocl@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000@Z;cv::ocl::ProgramSource::ProgramSource(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0ProgramSource@ocl@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::ocl::ProgramSource::ProgramSource(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0ProgramSource@ocl@cv@@QEAA@PEBD@Z;cv::ocl::ProgramSource::ProgramSource(char const *)
??0ProgramSource@ocl@cv@@QEAA@XZ;cv::ocl::ProgramSource::ProgramSource(void)
??0ProposalLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ProposalLayer::ProposalLayer(class cv::dnn::dnn4_v20211004::ProposalLayer &&)
??0ProposalLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ProposalLayer::ProposalLayer(class cv::dnn::dnn4_v20211004::ProposalLayer const &)
??0ProposalLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ProposalLayer::ProposalLayer(void)
??0PyParams@ie@gapi@cv@@QEAA@$$QEAV0123@@Z;cv::gapi::ie::PyParams::PyParams(class cv::gapi::ie::PyParams &&)
??0PyParams@ie@gapi@cv@@QEAA@AEBV0123@@Z;cv::gapi::ie::PyParams::PyParams(class cv::gapi::ie::PyParams const &)
??0PyParams@ie@gapi@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000@Z;cv::gapi::ie::PyParams::PyParams(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0PyParams@ie@gapi@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z;cv::gapi::ie::PyParams::PyParams(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0PyParams@ie@gapi@cv@@QEAA@XZ;cv::gapi::ie::PyParams::PyParams(void)
??0PyRotationWarper@cv@@QEAA@AEBV01@@Z;cv::PyRotationWarper::PyRotationWarper(class cv::PyRotationWarper const &)
??0PyRotationWarper@cv@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@Z;cv::PyRotationWarper::PyRotationWarper(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,float)
??0PyRotationWarper@cv@@QEAA@XZ;cv::PyRotationWarper::PyRotationWarper(void)
??0QRCodeDetector@cv@@QEAA@AEBV01@@Z;cv::QRCodeDetector::QRCodeDetector(class cv::QRCodeDetector const &)
??0QRCodeDetector@cv@@QEAA@XZ;cv::QRCodeDetector::QRCodeDetector(void)
??0QuadEdge@Subdiv2D@cv@@QEAA@H@Z;cv::Subdiv2D::QuadEdge::QuadEdge(int)
??0QuadEdge@Subdiv2D@cv@@QEAA@XZ;cv::Subdiv2D::QuadEdge::QuadEdge(void)
??0QuantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::QuantizeLayer::QuantizeLayer(class cv::dnn::dnn4_v20211004::QuantizeLayer &&)
??0QuantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::QuantizeLayer::QuantizeLayer(class cv::dnn::dnn4_v20211004::QuantizeLayer const &)
??0QuantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::QuantizeLayer::QuantizeLayer(void)
??0Queue@ocl@cv@@QEAA@$$QEAV012@@Z;cv::ocl::Queue::Queue(class cv::ocl::Queue &&)
??0Queue@ocl@cv@@QEAA@AEBV012@@Z;cv::ocl::Queue::Queue(class cv::ocl::Queue const &)
??0Queue@ocl@cv@@QEAA@AEBVContext@12@AEBVDevice@12@@Z;cv::ocl::Queue::Queue(class cv::ocl::Context const &,class cv::ocl::Device const &)
??0Queue@ocl@cv@@QEAA@XZ;cv::ocl::Queue::Queue(void)
??0RMat@cv@@QEAA@$$QEAV01@@Z;cv::RMat::RMat(class cv::RMat &&)
??0RMat@cv@@QEAA@$$QEAV?$shared_ptr@VAdapter@RMat@cv@@@std@@@Z;cv::RMat::RMat(class std::shared_ptr<class cv::RMat::Adapter> &&)
??0RMat@cv@@QEAA@AEBV01@@Z;cv::RMat::RMat(class cv::RMat const &)
??0RMat@cv@@QEAA@XZ;cv::RMat::RMat(void)
??0RMatMediaFrameAdapter@gimpl@cv@@QEAA@$$QEAU012@@Z;cv::gimpl::RMatMediaFrameAdapter::RMatMediaFrameAdapter(struct cv::gimpl::RMatMediaFrameAdapter &&)
??0RMatMediaFrameAdapter@gimpl@cv@@QEAA@AEBU012@@Z;cv::gimpl::RMatMediaFrameAdapter::RMatMediaFrameAdapter(struct cv::gimpl::RMatMediaFrameAdapter const &)
??0RMatMediaFrameAdapter@gimpl@cv@@QEAA@AEBVMediaFrame@2@AEBV?$function@$$A6A?AUGMatDesc@cv@@AEBUGFrameDesc@2@@Z@std@@AEBV?$function@$$A6A?AVMat@cv@@AEBUGFrameDesc@2@AEBVView@MediaFrame@2@@Z@5@@Z;cv::gimpl::RMatMediaFrameAdapter::RMatMediaFrameAdapter(class cv::MediaFrame const &,class std::function<struct cv::GMatDesc > const &,class std::function<class cv::Mat > const &)
??0RNG@cv@@QEAA@XZ;cv::RNG::RNG(void)
??0RNG@cv@@QEAA@_K@Z;cv::RNG::RNG(unsigned __int64)
??0RNG_MT19937@cv@@QEAA@I@Z;cv::RNG_MT19937::RNG_MT19937(unsigned int)
??0RNG_MT19937@cv@@QEAA@XZ;cv::RNG_MT19937::RNG_MT19937(void)
??0RNNLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::RNNLayer::RNNLayer(class cv::dnn::dnn4_v20211004::RNNLayer &&)
??0RNNLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::RNNLayer::RNNLayer(class cv::dnn::dnn4_v20211004::RNNLayer const &)
??0RNNLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::RNNLayer::RNNLayer(void)
??0RTrees@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::RTrees::RTrees(class cv::ml::RTrees &&)
??0RTrees@ml@cv@@QEAA@AEBV012@@Z;cv::ml::RTrees::RTrees(class cv::ml::RTrees const &)
??0RTrees@ml@cv@@QEAA@XZ;cv::ml::RTrees::RTrees(void)
??0Range@cv@@QEAA@HH@Z;cv::Range::Range(int,int)
??0Range@cv@@QEAA@XZ;cv::Range::Range(void)
??0ReLU6Layer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ReLU6Layer::ReLU6Layer(class cv::dnn::dnn4_v20211004::ReLU6Layer &&)
??0ReLU6Layer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ReLU6Layer::ReLU6Layer(class cv::dnn::dnn4_v20211004::ReLU6Layer const &)
??0ReLU6Layer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ReLU6Layer::ReLU6Layer(void)
??0ReLULayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ReLULayer::ReLULayer(class cv::dnn::dnn4_v20211004::ReLULayer &&)
??0ReLULayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ReLULayer::ReLULayer(class cv::dnn::dnn4_v20211004::ReLULayer const &)
??0ReLULayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ReLULayer::ReLULayer(void)
??0Rect@draw@wip@gapi@cv@@QEAA@$$QEAU01234@@Z;cv::gapi::wip::draw::Rect::Rect(struct cv::gapi::wip::draw::Rect &&)
??0Rect@draw@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::draw::Rect::Rect(struct cv::gapi::wip::draw::Rect const &)
??0Rect@draw@wip@gapi@cv@@QEAA@AEBV?$Rect_@H@4@AEBV?$Scalar_@N@4@HHH@Z;cv::gapi::wip::draw::Rect::Rect(class cv::Rect_<int> const &,class cv::Scalar_<double> const &,int,int,int)
??0Rect@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Rect::Rect(void)
??0Region@details@trace@utils@cv@@QEAA@AEBULocationStaticStorage@01234@@Z;cv::utils::trace::details::Region::Region(struct cv::utils::trace::details::Region::LocationStaticStorage const &)
??0RegionLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::RegionLayer::RegionLayer(class cv::dnn::dnn4_v20211004::RegionLayer &&)
??0RegionLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::RegionLayer::RegionLayer(class cv::dnn::dnn4_v20211004::RegionLayer const &)
??0RegionLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::RegionLayer::RegionLayer(void)
??0ReorgLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ReorgLayer::ReorgLayer(class cv::dnn::dnn4_v20211004::ReorgLayer &&)
??0ReorgLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ReorgLayer::ReorgLayer(class cv::dnn::dnn4_v20211004::ReorgLayer const &)
??0ReorgLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ReorgLayer::ReorgLayer(void)
??0RequantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::RequantizeLayer::RequantizeLayer(class cv::dnn::dnn4_v20211004::RequantizeLayer &&)
??0RequantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::RequantizeLayer::RequantizeLayer(class cv::dnn::dnn4_v20211004::RequantizeLayer const &)
??0RequantizeLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::RequantizeLayer::RequantizeLayer(void)
??0ReshapeLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ReshapeLayer::ReshapeLayer(class cv::dnn::dnn4_v20211004::ReshapeLayer &&)
??0ReshapeLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ReshapeLayer::ReshapeLayer(class cv::dnn::dnn4_v20211004::ReshapeLayer const &)
??0ReshapeLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ReshapeLayer::ReshapeLayer(void)
??0ResizeLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ResizeLayer::ResizeLayer(class cv::dnn::dnn4_v20211004::ResizeLayer &&)
??0ResizeLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ResizeLayer::ResizeLayer(class cv::dnn::dnn4_v20211004::ResizeLayer const &)
??0ResizeLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ResizeLayer::ResizeLayer(void)
??0RotatedRect@cv@@QEAA@AEBV?$Point_@M@1@00@Z;cv::RotatedRect::RotatedRect(class cv::Point_<float> const &,class cv::Point_<float> const &,class cv::Point_<float> const &)
??0RotatedRect@cv@@QEAA@AEBV?$Point_@M@1@AEBV?$Size_@M@1@M@Z;cv::RotatedRect::RotatedRect(class cv::Point_<float> const &,class cv::Size_<float> const &,float)
??0RotatedRect@cv@@QEAA@XZ;cv::RotatedRect::RotatedRect(void)
??0RotationWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::RotationWarper::RotationWarper(class cv::detail::RotationWarper const &)
??0RotationWarper@detail@cv@@QEAA@XZ;cv::detail::RotationWarper::RotationWarper(void)
??0SIFT@cv@@QEAA@$$QEAV01@@Z;cv::SIFT::SIFT(class cv::SIFT &&)
??0SIFT@cv@@QEAA@AEBV01@@Z;cv::SIFT::SIFT(class cv::SIFT const &)
??0SIFT@cv@@QEAA@XZ;cv::SIFT::SIFT(void)
??0SVD@cv@@QEAA@$$QEAV01@@Z;cv::SVD::SVD(class cv::SVD &&)
??0SVD@cv@@QEAA@AEBV01@@Z;cv::SVD::SVD(class cv::SVD const &)
??0SVD@cv@@QEAA@AEBV_InputArray@1@H@Z;cv::SVD::SVD(class cv::_InputArray const &,int)
??0SVD@cv@@QEAA@XZ;cv::SVD::SVD(void)
??0SVM@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::SVM::SVM(class cv::ml::SVM &&)
??0SVM@ml@cv@@QEAA@AEBV012@@Z;cv::ml::SVM::SVM(class cv::ml::SVM const &)
??0SVM@ml@cv@@QEAA@XZ;cv::ml::SVM::SVM(void)
??0SVMSGD@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::SVMSGD::SVMSGD(class cv::ml::SVMSGD &&)
??0SVMSGD@ml@cv@@QEAA@AEBV012@@Z;cv::ml::SVMSGD::SVMSGD(class cv::ml::SVMSGD const &)
??0SVMSGD@ml@cv@@QEAA@XZ;cv::ml::SVMSGD::SVMSGD(void)
??0SavedIndexParams@flann@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;cv::flann::SavedIndexParams::SavedIndexParams(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0Scalar@own@gapi@cv@@QEAA@N@Z;cv::gapi::own::Scalar::Scalar(double)
??0Scalar@own@gapi@cv@@QEAA@NNNN@Z;cv::gapi::own::Scalar::Scalar(double,double,double,double)
??0Scalar@own@gapi@cv@@QEAA@XZ;cv::gapi::own::Scalar::Scalar(void)
??0ScaleLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ScaleLayer::ScaleLayer(class cv::dnn::dnn4_v20211004::ScaleLayer &&)
??0ScaleLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ScaleLayer::ScaleLayer(class cv::dnn::dnn4_v20211004::ScaleLayer const &)
??0ScaleLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ScaleLayer::ScaleLayer(void)
??0ScaleLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ScaleLayerInt8::ScaleLayerInt8(class cv::dnn::dnn4_v20211004::ScaleLayerInt8 &&)
??0ScaleLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ScaleLayerInt8::ScaleLayerInt8(class cv::dnn::dnn4_v20211004::ScaleLayerInt8 const &)
??0ScaleLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ScaleLayerInt8::ScaleLayerInt8(void)
??0SeamFinder@detail@cv@@QEAA@AEBV012@@Z;cv::detail::SeamFinder::SeamFinder(class cv::detail::SeamFinder const &)
??0SeamFinder@detail@cv@@QEAA@XZ;cv::detail::SeamFinder::SeamFinder(void)
??0SearchParams@flann@cv@@QEAA@HM_N0@Z;cv::flann::SearchParams::SearchParams(int,float,bool,bool)
??0SearchParams@flann@cv@@QEAA@HM_N@Z;cv::flann::SearchParams::SearchParams(int,float,bool)
??0SegmentationModel@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::SegmentationModel::SegmentationModel(class cv::dnn::dnn4_v20211004::SegmentationModel &&)
??0SegmentationModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::SegmentationModel::SegmentationModel(class cv::dnn::dnn4_v20211004::SegmentationModel const &)
??0SegmentationModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::SegmentationModel::SegmentationModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0SegmentationModel@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::SegmentationModel::SegmentationModel(class cv::dnn::dnn4_v20211004::Net const &)
??0SepFilter2D@hal@cv@@QEAA@AEBU012@@Z;cv::hal::SepFilter2D::SepFilter2D(struct cv::hal::SepFilter2D const &)
??0SepFilter2D@hal@cv@@QEAA@XZ;cv::hal::SepFilter2D::SepFilter2D(void)
??0ShiftLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ShiftLayer::ShiftLayer(class cv::dnn::dnn4_v20211004::ShiftLayer &&)
??0ShiftLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ShiftLayer::ShiftLayer(class cv::dnn::dnn4_v20211004::ShiftLayer const &)
??0ShiftLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ShiftLayer::ShiftLayer(void)
??0ShiftLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ShiftLayerInt8::ShiftLayerInt8(class cv::dnn::dnn4_v20211004::ShiftLayerInt8 &&)
??0ShiftLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ShiftLayerInt8::ShiftLayerInt8(class cv::dnn::dnn4_v20211004::ShiftLayerInt8 const &)
??0ShiftLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ShiftLayerInt8::ShiftLayerInt8(void)
??0ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::ShuffleChannelLayer::ShuffleChannelLayer(class cv::dnn::dnn4_v20211004::ShuffleChannelLayer &&)
??0ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::ShuffleChannelLayer::ShuffleChannelLayer(class cv::dnn::dnn4_v20211004::ShuffleChannelLayer const &)
??0ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ShuffleChannelLayer::ShuffleChannelLayer(void)
??0SigmoidLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::SigmoidLayer::SigmoidLayer(class cv::dnn::dnn4_v20211004::SigmoidLayer &&)
??0SigmoidLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::SigmoidLayer::SigmoidLayer(class cv::dnn::dnn4_v20211004::SigmoidLayer const &)
??0SigmoidLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::SigmoidLayer::SigmoidLayer(void)
??0SimilarRects@cv@@QEAA@N@Z;cv::SimilarRects::SimilarRects(double)
??0SimpleBlobDetector@cv@@QEAA@$$QEAV01@@Z;cv::SimpleBlobDetector::SimpleBlobDetector(class cv::SimpleBlobDetector &&)
??0SimpleBlobDetector@cv@@QEAA@AEBV01@@Z;cv::SimpleBlobDetector::SimpleBlobDetector(class cv::SimpleBlobDetector const &)
??0SimpleBlobDetector@cv@@QEAA@XZ;cv::SimpleBlobDetector::SimpleBlobDetector(void)
??0SimpleBlobDetectorImpl@cv@@QEAA@$$QEAV01@@Z;cv::SimpleBlobDetectorImpl::SimpleBlobDetectorImpl(class cv::SimpleBlobDetectorImpl &&)
??0SimpleBlobDetectorImpl@cv@@QEAA@AEBUParams@SimpleBlobDetector@1@@Z;cv::SimpleBlobDetectorImpl::SimpleBlobDetectorImpl(struct cv::SimpleBlobDetector::Params const &)
??0SimpleBlobDetectorImpl@cv@@QEAA@AEBV01@@Z;cv::SimpleBlobDetectorImpl::SimpleBlobDetectorImpl(class cv::SimpleBlobDetectorImpl const &)
??0SliceLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::SliceLayer::SliceLayer(class cv::dnn::dnn4_v20211004::SliceLayer &&)
??0SliceLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::SliceLayer::SliceLayer(class cv::dnn::dnn4_v20211004::SliceLayer const &)
??0SliceLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::SliceLayer::SliceLayer(void)
??0SoftmaxLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::SoftmaxLayer::SoftmaxLayer(class cv::dnn::dnn4_v20211004::SoftmaxLayer &&)
??0SoftmaxLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::SoftmaxLayer::SoftmaxLayer(class cv::dnn::dnn4_v20211004::SoftmaxLayer const &)
??0SoftmaxLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::SoftmaxLayer::SoftmaxLayer(void)
??0SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::SoftmaxLayerInt8(class cv::dnn::dnn4_v20211004::SoftmaxLayerInt8 &&)
??0SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::SoftmaxLayerInt8(class cv::dnn::dnn4_v20211004::SoftmaxLayerInt8 const &)
??0SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::SoftmaxLayerInt8(void)
??0SparseMat@cv@@QEAA@AEBV01@@Z;cv::SparseMat::SparseMat(class cv::SparseMat const &)
??0SparseMat@cv@@QEAA@AEBVMat@1@@Z;cv::SparseMat::SparseMat(class cv::Mat const &)
??0SparseMat@cv@@QEAA@HPEBHH@Z;cv::SparseMat::SparseMat(int,int const *,int)
??0SparseMat@cv@@QEAA@XZ;cv::SparseMat::SparseMat(void)
??0SparseMatConstIterator@cv@@QEAA@AEBV01@@Z;cv::SparseMatConstIterator::SparseMatConstIterator(class cv::SparseMatConstIterator const &)
??0SparseMatConstIterator@cv@@QEAA@PEBVSparseMat@1@@Z;cv::SparseMatConstIterator::SparseMatConstIterator(class cv::SparseMat const *)
??0SparseMatConstIterator@cv@@QEAA@XZ;cv::SparseMatConstIterator::SparseMatConstIterator(void)
??0SparseMatIterator@cv@@QEAA@AEBV01@@Z;cv::SparseMatIterator::SparseMatIterator(class cv::SparseMatIterator const &)
??0SparseMatIterator@cv@@QEAA@PEAVSparseMat@1@@Z;cv::SparseMatIterator::SparseMatIterator(class cv::SparseMat *)
??0SparseMatIterator@cv@@QEAA@XZ;cv::SparseMatIterator::SparseMatIterator(void)
??0SparseOpticalFlow@cv@@QEAA@$$QEAV01@@Z;cv::SparseOpticalFlow::SparseOpticalFlow(class cv::SparseOpticalFlow &&)
??0SparseOpticalFlow@cv@@QEAA@AEBV01@@Z;cv::SparseOpticalFlow::SparseOpticalFlow(class cv::SparseOpticalFlow const &)
??0SparseOpticalFlow@cv@@QEAA@XZ;cv::SparseOpticalFlow::SparseOpticalFlow(void)
??0SparsePyrLKOpticalFlow@cv@@QEAA@$$QEAV01@@Z;cv::SparsePyrLKOpticalFlow::SparsePyrLKOpticalFlow(class cv::SparsePyrLKOpticalFlow &&)
??0SparsePyrLKOpticalFlow@cv@@QEAA@AEBV01@@Z;cv::SparsePyrLKOpticalFlow::SparsePyrLKOpticalFlow(class cv::SparsePyrLKOpticalFlow const &)
??0SparsePyrLKOpticalFlow@cv@@QEAA@XZ;cv::SparsePyrLKOpticalFlow::SparsePyrLKOpticalFlow(void)
??0SphericalPortraitWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::SphericalPortraitWarper::SphericalPortraitWarper(class cv::detail::SphericalPortraitWarper &&)
??0SphericalPortraitWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::SphericalPortraitWarper::SphericalPortraitWarper(class cv::detail::SphericalPortraitWarper const &)
??0SphericalPortraitWarper@detail@cv@@QEAA@M@Z;cv::detail::SphericalPortraitWarper::SphericalPortraitWarper(float)
??0SphericalWarper@cv@@QEAA@$$QEAV01@@Z;cv::SphericalWarper::SphericalWarper(class cv::SphericalWarper &&)
??0SphericalWarper@cv@@QEAA@AEBV01@@Z;cv::SphericalWarper::SphericalWarper(class cv::SphericalWarper const &)
??0SphericalWarper@cv@@QEAA@XZ;cv::SphericalWarper::SphericalWarper(void)
??0SphericalWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::SphericalWarper::SphericalWarper(class cv::detail::SphericalWarper &&)
??0SphericalWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::SphericalWarper::SphericalWarper(class cv::detail::SphericalWarper const &)
??0SphericalWarper@detail@cv@@QEAA@M@Z;cv::detail::SphericalWarper::SphericalWarper(float)
??0SphericalWarperGpu@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::SphericalWarperGpu::SphericalWarperGpu(class cv::detail::SphericalWarperGpu &&)
??0SphericalWarperGpu@detail@cv@@QEAA@AEBV012@@Z;cv::detail::SphericalWarperGpu::SphericalWarperGpu(class cv::detail::SphericalWarperGpu const &)
??0SphericalWarperGpu@detail@cv@@QEAA@M@Z;cv::detail::SphericalWarperGpu::SphericalWarperGpu(float)
??0Split@DTrees@ml@cv@@QEAA@XZ;cv::ml::DTrees::Split::Split(void)
??0SplitLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::SplitLayer::SplitLayer(class cv::dnn::dnn4_v20211004::SplitLayer &&)
??0SplitLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::SplitLayer::SplitLayer(class cv::dnn::dnn4_v20211004::SplitLayer const &)
??0SplitLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::SplitLayer::SplitLayer(void)
??0StatModel@ml@cv@@QEAA@$$QEAV012@@Z;cv::ml::StatModel::StatModel(class cv::ml::StatModel &&)
??0StatModel@ml@cv@@QEAA@AEBV012@@Z;cv::ml::StatModel::StatModel(class cv::ml::StatModel const &)
??0StatModel@ml@cv@@QEAA@XZ;cv::ml::StatModel::StatModel(void)
??0StereoBM@cv@@QEAA@$$QEAV01@@Z;cv::StereoBM::StereoBM(class cv::StereoBM &&)
??0StereoBM@cv@@QEAA@AEBV01@@Z;cv::StereoBM::StereoBM(class cv::StereoBM const &)
??0StereoBM@cv@@QEAA@XZ;cv::StereoBM::StereoBM(void)
??0StereoInitParam@cpu@calib3d@gapi@cv@@QEAA@HHNN@Z;cv::gapi::calib3d::cpu::StereoInitParam::StereoInitParam(int,int,double,double)
??0StereoInitParam@cpu@calib3d@gapi@cv@@QEAA@XZ;cv::gapi::calib3d::cpu::StereoInitParam::StereoInitParam(void)
??0StereoMatcher@cv@@QEAA@$$QEAV01@@Z;cv::StereoMatcher::StereoMatcher(class cv::StereoMatcher &&)
??0StereoMatcher@cv@@QEAA@AEBV01@@Z;cv::StereoMatcher::StereoMatcher(class cv::StereoMatcher const &)
??0StereoMatcher@cv@@QEAA@XZ;cv::StereoMatcher::StereoMatcher(void)
??0StereoSGBM@cv@@QEAA@$$QEAV01@@Z;cv::StereoSGBM::StereoSGBM(class cv::StereoSGBM &&)
??0StereoSGBM@cv@@QEAA@AEBV01@@Z;cv::StereoSGBM::StereoSGBM(class cv::StereoSGBM const &)
??0StereoSGBM@cv@@QEAA@XZ;cv::StereoSGBM::StereoSGBM(void)
??0StereoSetup@@QEAA@$$QEAU0@@Z;StereoSetup::StereoSetup(struct StereoSetup &&)
??0StereoSetup@@QEAA@AEBU0@@Z;StereoSetup::StereoSetup(struct StereoSetup const &)
??0StereoSetup@@QEAA@XZ;StereoSetup::StereoSetup(void)
??0StereographicWarper@cv@@QEAA@$$QEAV01@@Z;cv::StereographicWarper::StereographicWarper(class cv::StereographicWarper &&)
??0StereographicWarper@cv@@QEAA@AEBV01@@Z;cv::StereographicWarper::StereographicWarper(class cv::StereographicWarper const &)
??0StereographicWarper@cv@@QEAA@XZ;cv::StereographicWarper::StereographicWarper(void)
??0StereographicWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::StereographicWarper::StereographicWarper(class cv::detail::StereographicWarper &&)
??0StereographicWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::StereographicWarper::StereographicWarper(class cv::detail::StereographicWarper const &)
??0StereographicWarper@detail@cv@@QEAA@M@Z;cv::detail::StereographicWarper::StereographicWarper(float)
??0Stitcher@cv@@QEAA@$$QEAV01@@Z;cv::Stitcher::Stitcher(class cv::Stitcher &&)
??0Stitcher@cv@@QEAA@AEBV01@@Z;cv::Stitcher::Stitcher(class cv::Stitcher const &)
??0Stitcher@cv@@QEAA@XZ;cv::Stitcher::Stitcher(void)
??0Stream@cuda@cv@@AEAA@AEBU?$Ptr@VImpl@Stream@cuda@cv@@@2@@Z;cv::cuda::Stream::Stream(struct cv::Ptr<class cv::cuda::Stream::Impl> const &)
??0Stream@cuda@cv@@QEAA@$$QEAV012@@Z;cv::cuda::Stream::Stream(class cv::cuda::Stream &&)
??0Stream@cuda@cv@@QEAA@AEBU?$Ptr@VAllocator@GpuMat@cuda@cv@@@2@@Z;cv::cuda::Stream::Stream(struct cv::Ptr<class cv::cuda::GpuMat::Allocator> const &)
??0Stream@cuda@cv@@QEAA@AEBV012@@Z;cv::cuda::Stream::Stream(class cv::cuda::Stream const &)
??0Stream@cuda@cv@@QEAA@XZ;cv::cuda::Stream::Stream(void)
??0Stream@cuda@cv@@QEAA@_K@Z;cv::cuda::Stream::Stream(unsigned __int64)
??0Subdiv2D@cv@@QEAA@$$QEAV01@@Z;cv::Subdiv2D::Subdiv2D(class cv::Subdiv2D &&)
??0Subdiv2D@cv@@QEAA@AEBV01@@Z;cv::Subdiv2D::Subdiv2D(class cv::Subdiv2D const &)
??0Subdiv2D@cv@@QEAA@V?$Rect_@H@1@@Z;cv::Subdiv2D::Subdiv2D(class cv::Rect_<int>)
??0Subdiv2D@cv@@QEAA@XZ;cv::Subdiv2D::Subdiv2D(void)
??0SwishLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::SwishLayer::SwishLayer(class cv::dnn::dnn4_v20211004::SwishLayer &&)
??0SwishLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::SwishLayer::SwishLayer(class cv::dnn::dnn4_v20211004::SwishLayer const &)
??0SwishLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::SwishLayer::SwishLayer(void)
??0TLSDataContainer@cv@@IEAA@XZ;cv::TLSDataContainer::TLSDataContainer(void)
??0TanHLayer@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::TanHLayer::TanHLayer(class cv::dnn::dnn4_v20211004::TanHLayer &&)
??0TanHLayer@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::TanHLayer::TanHLayer(class cv::dnn::dnn4_v20211004::TanHLayer const &)
??0TanHLayer@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TanHLayer::TanHLayer(void)
??0TermCriteria@cv@@QEAA@HHN@Z;cv::TermCriteria::TermCriteria(int,int,double)
??0TermCriteria@cv@@QEAA@XZ;cv::TermCriteria::TermCriteria(void)
??0Text@draw@wip@gapi@cv@@QEAA@$$QEAU01234@@Z;cv::gapi::wip::draw::Text::Text(struct cv::gapi::wip::draw::Text &&)
??0Text@draw@wip@gapi@cv@@QEAA@AEBU01234@@Z;cv::gapi::wip::draw::Text::Text(struct cv::gapi::wip::draw::Text const &)
??0Text@draw@wip@gapi@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$Point_@H@4@HNAEBV?$Scalar_@N@4@HH_N@Z;cv::gapi::wip::draw::Text::Text(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Point_<int> const &,int,double,class cv::Scalar_<double> const &,int,int,bool)
??0Text@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Text::Text(void)
??0TextDetectionModel@dnn4_v20211004@dnn@cv@@IEAA@XZ;cv::dnn::dnn4_v20211004::TextDetectionModel::TextDetectionModel(void)
??0TextDetectionModel@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel::TextDetectionModel(class cv::dnn::dnn4_v20211004::TextDetectionModel &&)
??0TextDetectionModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel::TextDetectionModel(class cv::dnn::dnn4_v20211004::TextDetectionModel const &)
??0TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_DB::TextDetectionModel_DB(class cv::dnn::dnn4_v20211004::TextDetectionModel_DB &&)
??0TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_DB::TextDetectionModel_DB(class cv::dnn::dnn4_v20211004::TextDetectionModel_DB const &)
??0TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_DB::TextDetectionModel_DB(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_DB::TextDetectionModel_DB(class cv::dnn::dnn4_v20211004::Net const &)
??0TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TextDetectionModel_DB::TextDetectionModel_DB(void)
??0TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::TextDetectionModel_EAST(class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST &&)
??0TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::TextDetectionModel_EAST(class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST const &)
??0TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::TextDetectionModel_EAST(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::TextDetectionModel_EAST(class cv::dnn::dnn4_v20211004::Net const &)
??0TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::TextDetectionModel_EAST(void)
??0TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAA@$$QEAV0123@@Z;cv::dnn::dnn4_v20211004::TextRecognitionModel::TextRecognitionModel(class cv::dnn::dnn4_v20211004::TextRecognitionModel &&)
??0TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV0123@@Z;cv::dnn::dnn4_v20211004::TextRecognitionModel::TextRecognitionModel(class cv::dnn::dnn4_v20211004::TextRecognitionModel const &)
??0TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;cv::dnn::dnn4_v20211004::TextRecognitionModel::TextRecognitionModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAA@AEBVNet@123@@Z;cv::dnn::dnn4_v20211004::TextRecognitionModel::TextRecognitionModel(class cv::dnn::dnn4_v20211004::Net const &)
??0TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TextRecognitionModel::TextRecognitionModel(void)
??0Texture2D@ogl@cv@@QEAA@$$QEAV012@@Z;cv::ogl::Texture2D::Texture2D(class cv::ogl::Texture2D &&)
??0Texture2D@ogl@cv@@QEAA@AEBV012@@Z;cv::ogl::Texture2D::Texture2D(class cv::ogl::Texture2D const &)
??0Texture2D@ogl@cv@@QEAA@AEBV_InputArray@2@_N@Z;cv::ogl::Texture2D::Texture2D(class cv::_InputArray const &,bool)
??0Texture2D@ogl@cv@@QEAA@HHW4Format@012@I_N@Z;cv::ogl::Texture2D::Texture2D(int,int,enum cv::ogl::Texture2D::Format,unsigned int,bool)
??0Texture2D@ogl@cv@@QEAA@HHW4Format@012@_N@Z;cv::ogl::Texture2D::Texture2D(int,int,enum cv::ogl::Texture2D::Format,bool)
??0Texture2D@ogl@cv@@QEAA@V?$Size_@H@2@W4Format@012@I_N@Z;cv::ogl::Texture2D::Texture2D(class cv::Size_<int>,enum cv::ogl::Texture2D::Format,unsigned int,bool)
??0Texture2D@ogl@cv@@QEAA@V?$Size_@H@2@W4Format@012@_N@Z;cv::ogl::Texture2D::Texture2D(class cv::Size_<int>,enum cv::ogl::Texture2D::Format,bool)
??0Texture2D@ogl@cv@@QEAA@XZ;cv::ogl::Texture2D::Texture2D(void)
??0TickMeter@cv@@QEAA@XZ;cv::TickMeter::TickMeter(void)
??0Timelapser@detail@cv@@QEAA@AEBV012@@Z;cv::detail::Timelapser::Timelapser(class cv::detail::Timelapser const &)
??0Timelapser@detail@cv@@QEAA@XZ;cv::detail::Timelapser::Timelapser(void)
??0TimelapserCrop@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::TimelapserCrop::TimelapserCrop(class cv::detail::TimelapserCrop &&)
??0TimelapserCrop@detail@cv@@QEAA@AEBV012@@Z;cv::detail::TimelapserCrop::TimelapserCrop(class cv::detail::TimelapserCrop const &)
??0TimelapserCrop@detail@cv@@QEAA@XZ;cv::detail::TimelapserCrop::TimelapserCrop(void)
??0Timer@ocl@cv@@QEAA@AEBVQueue@12@@Z;cv::ocl::Timer::Timer(class cv::ocl::Queue const &)
??0Tonemap@cv@@QEAA@$$QEAV01@@Z;cv::Tonemap::Tonemap(class cv::Tonemap &&)
??0Tonemap@cv@@QEAA@AEBV01@@Z;cv::Tonemap::Tonemap(class cv::Tonemap const &)
??0Tonemap@cv@@QEAA@XZ;cv::Tonemap::Tonemap(void)
??0TonemapDrago@cv@@QEAA@$$QEAV01@@Z;cv::TonemapDrago::TonemapDrago(class cv::TonemapDrago &&)
??0TonemapDrago@cv@@QEAA@AEBV01@@Z;cv::TonemapDrago::TonemapDrago(class cv::TonemapDrago const &)
??0TonemapDrago@cv@@QEAA@XZ;cv::TonemapDrago::TonemapDrago(void)
??0TonemapMantiuk@cv@@QEAA@$$QEAV01@@Z;cv::TonemapMantiuk::TonemapMantiuk(class cv::TonemapMantiuk &&)
??0TonemapMantiuk@cv@@QEAA@AEBV01@@Z;cv::TonemapMantiuk::TonemapMantiuk(class cv::TonemapMantiuk const &)
??0TonemapMantiuk@cv@@QEAA@XZ;cv::TonemapMantiuk::TonemapMantiuk(void)
??0TonemapReinhard@cv@@QEAA@$$QEAV01@@Z;cv::TonemapReinhard::TonemapReinhard(class cv::TonemapReinhard &&)
??0TonemapReinhard@cv@@QEAA@AEBV01@@Z;cv::TonemapReinhard::TonemapReinhard(class cv::TonemapReinhard const &)
??0TonemapReinhard@cv@@QEAA@XZ;cv::TonemapReinhard::TonemapReinhard(void)
??0TraceManager@details@trace@utils@cv@@QEAA@XZ;cv::utils::trace::details::TraceManager::TraceManager(void)
??0Tracker@cv@@IEAA@XZ;cv::Tracker::Tracker(void)
??0Tracker@cv@@QEAA@AEBV01@@Z;cv::Tracker::Tracker(class cv::Tracker const &)
??0TrackerDaSiamRPN@cv@@IEAA@XZ;cv::TrackerDaSiamRPN::TrackerDaSiamRPN(void)
??0TrackerDaSiamRPN@cv@@QEAA@AEBV01@@Z;cv::TrackerDaSiamRPN::TrackerDaSiamRPN(class cv::TrackerDaSiamRPN const &)
??0TrackerFeature@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerFeature::TrackerFeature(class cv::detail::tracking::TrackerFeature const &)
??0TrackerFeature@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerFeature::TrackerFeature(void)
??0TrackerFeatureSet@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerFeatureSet::TrackerFeatureSet(class cv::detail::tracking::TrackerFeatureSet const &)
??0TrackerFeatureSet@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerFeatureSet::TrackerFeatureSet(void)
??0TrackerGOTURN@cv@@IEAA@XZ;cv::TrackerGOTURN::TrackerGOTURN(void)
??0TrackerGOTURN@cv@@QEAA@AEBV01@@Z;cv::TrackerGOTURN::TrackerGOTURN(class cv::TrackerGOTURN const &)
??0TrackerMIL@cv@@IEAA@XZ;cv::TrackerMIL::TrackerMIL(void)
??0TrackerMIL@cv@@QEAA@AEBV01@@Z;cv::TrackerMIL::TrackerMIL(class cv::TrackerMIL const &)
??0TrackerModel@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerModel::TrackerModel(class cv::detail::tracking::TrackerModel const &)
??0TrackerModel@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerModel::TrackerModel(void)
??0TrackerSampler@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerSampler::TrackerSampler(class cv::detail::tracking::TrackerSampler const &)
??0TrackerSampler@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerSampler::TrackerSampler(void)
??0TrackerSamplerAlgorithm@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerSamplerAlgorithm::TrackerSamplerAlgorithm(class cv::detail::tracking::TrackerSamplerAlgorithm const &)
??0TrackerSamplerAlgorithm@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerSamplerAlgorithm::TrackerSamplerAlgorithm(void)
??0TrackerSamplerCSC@tracking@detail@cv@@QEAA@AEBUParams@0123@@Z;cv::detail::tracking::TrackerSamplerCSC::TrackerSamplerCSC(struct cv::detail::tracking::TrackerSamplerCSC::Params const &)
??0TrackerSamplerCSC@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerSamplerCSC::TrackerSamplerCSC(class cv::detail::tracking::TrackerSamplerCSC const &)
??0TrackerStateEstimator@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerStateEstimator::TrackerStateEstimator(class cv::detail::tracking::TrackerStateEstimator const &)
??0TrackerStateEstimator@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerStateEstimator::TrackerStateEstimator(void)
??0TrackerStateEstimatorMILBoosting@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerStateEstimatorMILBoosting::TrackerStateEstimatorMILBoosting(class cv::detail::tracking::TrackerStateEstimatorMILBoosting const &)
??0TrackerStateEstimatorMILBoosting@tracking@detail@cv@@QEAA@H@Z;cv::detail::tracking::TrackerStateEstimatorMILBoosting::TrackerStateEstimatorMILBoosting(int)
??0TrackerTargetState@tracking@detail@cv@@QEAA@AEBV0123@@Z;cv::detail::tracking::TrackerTargetState::TrackerTargetState(class cv::detail::tracking::TrackerTargetState const &)
??0TrackerTargetState@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerTargetState::TrackerTargetState(void)
??0TrainData@ml@cv@@QEAA@AEBV012@@Z;cv::ml::TrainData::TrainData(class cv::ml::TrainData const &)
??0TrainData@ml@cv@@QEAA@XZ;cv::ml::TrainData::TrainData(void)
??0TransverseMercatorWarper@cv@@QEAA@$$QEAV01@@Z;cv::TransverseMercatorWarper::TransverseMercatorWarper(class cv::TransverseMercatorWarper &&)
??0TransverseMercatorWarper@cv@@QEAA@AEBV01@@Z;cv::TransverseMercatorWarper::TransverseMercatorWarper(class cv::TransverseMercatorWarper const &)
??0TransverseMercatorWarper@cv@@QEAA@XZ;cv::TransverseMercatorWarper::TransverseMercatorWarper(void)
??0TransverseMercatorWarper@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::TransverseMercatorWarper::TransverseMercatorWarper(class cv::detail::TransverseMercatorWarper &&)
??0TransverseMercatorWarper@detail@cv@@QEAA@AEBV012@@Z;cv::detail::TransverseMercatorWarper::TransverseMercatorWarper(class cv::detail::TransverseMercatorWarper const &)
??0TransverseMercatorWarper@detail@cv@@QEAA@M@Z;cv::detail::TransverseMercatorWarper::TransverseMercatorWarper(float)
??0UIBackend@highgui_backend@cv@@QEAA@AEBV012@@Z;cv::highgui_backend::UIBackend::UIBackend(class cv::highgui_backend::UIBackend const &)
??0UIBackend@highgui_backend@cv@@QEAA@XZ;cv::highgui_backend::UIBackend::UIBackend(void)
??0UITrackbar@highgui_backend@cv@@QEAA@AEBV012@@Z;cv::highgui_backend::UITrackbar::UITrackbar(class cv::highgui_backend::UITrackbar const &)
??0UITrackbar@highgui_backend@cv@@QEAA@XZ;cv::highgui_backend::UITrackbar::UITrackbar(void)
??0UIWindow@highgui_backend@cv@@QEAA@AEBV012@@Z;cv::highgui_backend::UIWindow::UIWindow(class cv::highgui_backend::UIWindow const &)
??0UIWindow@highgui_backend@cv@@QEAA@XZ;cv::highgui_backend::UIWindow::UIWindow(void)
??0UIWindowBase@highgui_backend@cv@@QEAA@AEBV012@@Z;cv::highgui_backend::UIWindowBase::UIWindowBase(class cv::highgui_backend::UIWindowBase const &)
??0UIWindowBase@highgui_backend@cv@@QEAA@XZ;cv::highgui_backend::UIWindowBase::UIWindowBase(void)
??0UMat@cv@@QEAA@$$QEAV01@@Z;cv::UMat::UMat(class cv::UMat &&)
??0UMat@cv@@QEAA@AEBV01@@Z;cv::UMat::UMat(class cv::UMat const &)
??0UMat@cv@@QEAA@AEBV01@AEBV?$Rect_@H@1@@Z;cv::UMat::UMat(class cv::UMat const &,class cv::Rect_<int> const &)
??0UMat@cv@@QEAA@AEBV01@AEBV?$vector@VRange@cv@@V?$allocator@VRange@cv@@@std@@@std@@@Z;cv::UMat::UMat(class cv::UMat const &,class std::vector<class cv::Range,class std::allocator<class cv::Range> > const &)
??0UMat@cv@@QEAA@AEBV01@AEBVRange@1@1@Z;cv::UMat::UMat(class cv::UMat const &,class cv::Range const &,class cv::Range const &)
??0UMat@cv@@QEAA@AEBV01@PEBVRange@1@@Z;cv::UMat::UMat(class cv::UMat const &,class cv::Range const *)
??0UMat@cv@@QEAA@HHHAEBV?$Scalar_@N@1@W4UMatUsageFlags@1@@Z;cv::UMat::UMat(int,int,int,class cv::Scalar_<double> const &,enum cv::UMatUsageFlags)
??0UMat@cv@@QEAA@HHHW4UMatUsageFlags@1@@Z;cv::UMat::UMat(int,int,int,enum cv::UMatUsageFlags)
??0UMat@cv@@QEAA@HPEBHHAEBV?$Scalar_@N@1@W4UMatUsageFlags@1@@Z;cv::UMat::UMat(int,int const *,int,class cv::Scalar_<double> const &,enum cv::UMatUsageFlags)
??0UMat@cv@@QEAA@HPEBHHW4UMatUsageFlags@1@@Z;cv::UMat::UMat(int,int const *,int,enum cv::UMatUsageFlags)
??0UMat@cv@@QEAA@V?$Size_@H@1@HAEBV?$Scalar_@N@1@W4UMatUsageFlags@1@@Z;cv::UMat::UMat(class cv::Size_<int>,int,class cv::Scalar_<double> const &,enum cv::UMatUsageFlags)
??0UMat@cv@@QEAA@V?$Size_@H@1@HW4UMatUsageFlags@1@@Z;cv::UMat::UMat(class cv::Size_<int>,int,enum cv::UMatUsageFlags)
??0UMat@cv@@QEAA@W4UMatUsageFlags@1@@Z;cv::UMat::UMat(enum cv::UMatUsageFlags)
??0UMatData@cv@@QEAA@AEBU01@@Z;cv::UMatData::UMatData(struct cv::UMatData const &)
??0UMatData@cv@@QEAA@PEBVMatAllocator@1@@Z;cv::UMatData::UMatData(class cv::MatAllocator const *)
??0UMatDataAutoLock@cv@@QEAA@PEAUUMatData@1@0@Z;cv::UMatDataAutoLock::UMatDataAutoLock(struct cv::UMatData *,struct cv::UMatData *)
??0UMatDataAutoLock@cv@@QEAA@PEAUUMatData@1@@Z;cv::UMatDataAutoLock::UMatDataAutoLock(struct cv::UMatData *)
??0UsacParams@cv@@QEAA@XZ;cv::UsacParams::UsacParams(void)
??0UserContext@Context@ocl@cv@@QEAA@AEBV0123@@Z;cv::ocl::Context::UserContext::UserContext(class cv::ocl::Context::UserContext const &)
??0UserContext@Context@ocl@cv@@QEAA@XZ;cv::ocl::Context::UserContext::UserContext(void)
??0VariationalRefinement@cv@@QEAA@$$QEAV01@@Z;cv::VariationalRefinement::VariationalRefinement(class cv::VariationalRefinement &&)
??0VariationalRefinement@cv@@QEAA@AEBV01@@Z;cv::VariationalRefinement::VariationalRefinement(class cv::VariationalRefinement const &)
??0VariationalRefinement@cv@@QEAA@XZ;cv::VariationalRefinement::VariationalRefinement(void)
??0Vertex@Subdiv2D@cv@@QEAA@V?$Point_@M@2@_NH@Z;cv::Subdiv2D::Vertex::Vertex(class cv::Point_<float>,bool,int)
??0Vertex@Subdiv2D@cv@@QEAA@XZ;cv::Subdiv2D::Vertex::Vertex(void)
??0VideoCapture@cv@@QEAA@AEBV01@@Z;cv::VideoCapture::VideoCapture(class cv::VideoCapture const &)
??0VideoCapture@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;cv::VideoCapture::VideoCapture(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
??0VideoCapture@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HAEBV?$vector@HV?$allocator@H@std@@@3@@Z;cv::VideoCapture::VideoCapture(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class std::vector<int,class std::allocator<int> > const &)
??0VideoCapture@cv@@QEAA@HH@Z;cv::VideoCapture::VideoCapture(int,int)
??0VideoCapture@cv@@QEAA@HHAEBV?$vector@HV?$allocator@H@std@@@std@@@Z;cv::VideoCapture::VideoCapture(int,int,class std::vector<int,class std::allocator<int> > const &)
??0VideoCapture@cv@@QEAA@XZ;cv::VideoCapture::VideoCapture(void)
??0VideoWriter@cv@@QEAA@AEBV01@@Z;cv::VideoWriter::VideoWriter(class cv::VideoWriter const &)
??0VideoWriter@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHNAEBV?$Size_@H@1@AEBV?$vector@HV?$allocator@H@std@@@3@@Z;cv::VideoWriter::VideoWriter(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int,double,class cv::Size_<int> const &,class std::vector<int,class std::allocator<int> > const &)
??0VideoWriter@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHNV?$Size_@H@1@_N@Z;cv::VideoWriter::VideoWriter(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int,double,class cv::Size_<int>,bool)
??0VideoWriter@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HNAEBV?$Size_@H@1@AEBV?$vector@HV?$allocator@H@std@@@3@@Z;cv::VideoWriter::VideoWriter(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,double,class cv::Size_<int> const &,class std::vector<int,class std::allocator<int> > const &)
??0VideoWriter@cv@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HNV?$Size_@H@1@_N@Z;cv::VideoWriter::VideoWriter(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,double,class cv::Size_<int>,bool)
??0VideoWriter@cv@@QEAA@XZ;cv::VideoWriter::VideoWriter(void)
??0View@MediaFrame@cv@@QEAA@$$QEAV012@@Z;cv::MediaFrame::View::View(class cv::MediaFrame::View &&)
??0View@MediaFrame@cv@@QEAA@$$QEAV?$array@PEAX$03@std@@$$QEAV?$array@_K$03@4@$$QEAV?$function@$$A6AXXZ@4@@Z;cv::MediaFrame::View::View(class std::array<void *,4> &&,class std::array<unsigned __int64,4> &&,class std::function<void > &&)
??0View@RMat@cv@@QEAA@$$QEAV012@@Z;cv::RMat::View::View(class cv::RMat::View &&)
??0View@RMat@cv@@QEAA@AEBUGMatDesc@2@PEAEAEBV?$vector@_KV?$allocator@_K@std@@@std@@$$QEAV?$function@$$A6AXXZ@5@@Z;cv::RMat::View::View(struct cv::GMatDesc const &,unsigned char *,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > const &,class std::function<void > &&)
??0View@RMat@cv@@QEAA@AEBUGMatDesc@2@PEAE_K$$QEAV?$function@$$A6AXXZ@std@@@Z;cv::RMat::View::View(struct cv::GMatDesc const &,unsigned char *,unsigned __int64,class std::function<void > &&)
??0View@RMat@cv@@QEAA@XZ;cv::RMat::View::View(void)
??0View@fluid@gapi@cv@@QEAA@$$QEAV0123@@Z;cv::gapi::fluid::View::View(class cv::gapi::fluid::View &&)
??0View@fluid@gapi@cv@@QEAA@$$QEAV?$unique_ptr@VPriv@View@fluid@gapi@cv@@U?$default_delete@VPriv@View@fluid@gapi@cv@@@std@@@std@@@Z;cv::gapi::fluid::View::View(class std::unique_ptr<class cv::gapi::fluid::View::Priv,struct std::default_delete<class cv::gapi::fluid::View::Priv> > &&)
??0View@fluid@gapi@cv@@QEAA@XZ;cv::gapi::fluid::View::View(void)
??0VoronoiSeamFinder@detail@cv@@QEAA@$$QEAV012@@Z;cv::detail::VoronoiSeamFinder::VoronoiSeamFinder(class cv::detail::VoronoiSeamFinder &&)
??0VoronoiSeamFinder@detail@cv@@QEAA@AEBV012@@Z;cv::detail::VoronoiSeamFinder::VoronoiSeamFinder(class cv::detail::VoronoiSeamFinder const &)
??0VoronoiSeamFinder@detail@cv@@QEAA@XZ;cv::detail::VoronoiSeamFinder::VoronoiSeamFinder(void)
??0WarperCreator@cv@@QEAA@AEBV01@@Z;cv::WarperCreator::WarperCreator(class cv::WarperCreator const &)
??0WarperCreator@cv@@QEAA@XZ;cv::WarperCreator::WarperCreator(void)
??0WriteStructContext@internal@cv@@QEAA@AEAVFileStorage@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H1@Z;cv::internal::WriteStructContext::WriteStructContext(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??0_InputArray@cv@@QEAA@AEBN@Z;cv::_InputArray::_InputArray(double const &)
??0_InputArray@cv@@QEAA@AEBV?$vector@VGpuMat@cuda@cv@@V?$allocator@VGpuMat@cuda@cv@@@std@@@std@@@Z;cv::_InputArray::_InputArray(class std::vector<class cv::cuda::GpuMat,class std::allocator<class cv::cuda::GpuMat> > const &)
??0_InputArray@cv@@QEAA@AEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;cv::_InputArray::_InputArray(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
??0_InputArray@cv@@QEAA@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;cv::_InputArray::_InputArray(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
??0_InputArray@cv@@QEAA@AEBV?$vector@_NV?$allocator@_N@std@@@std@@@Z;cv::_InputArray::_InputArray(class std::vector<bool,class std::allocator<bool> > const &)
??0_InputArray@cv@@QEAA@AEBVBuffer@ogl@1@@Z;cv::_InputArray::_InputArray(class cv::ogl::Buffer const &)
??0_InputArray@cv@@QEAA@AEBVGpuMat@cuda@1@@Z;cv::_InputArray::_InputArray(class cv::cuda::GpuMat const &)
??0_InputArray@cv@@QEAA@AEBVHostMem@cuda@1@@Z;cv::_InputArray::_InputArray(class cv::cuda::HostMem const &)
??0_InputArray@cv@@QEAA@AEBVMat@1@@Z;cv::_InputArray::_InputArray(class cv::Mat const &)
??0_InputArray@cv@@QEAA@AEBVMatExpr@1@@Z;cv::_InputArray::_InputArray(class cv::MatExpr const &)
??0_InputArray@cv@@QEAA@AEBVUMat@1@@Z;cv::_InputArray::_InputArray(class cv::UMat const &)
??0_InputArray@cv@@QEAA@HPEAX@Z;cv::_InputArray::_InputArray(int,void *)
??0_InputArray@cv@@QEAA@XZ;cv::_InputArray::_InputArray(void)
??0_InputOutputArray@cv@@QEAA@AEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;cv::_InputOutputArray::_InputOutputArray(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
??0_InputOutputArray@cv@@QEAA@AEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;cv::_InputOutputArray::_InputOutputArray(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
??0_InputOutputArray@cv@@QEAA@AEAVBuffer@ogl@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::ogl::Buffer &)
??0_InputOutputArray@cv@@QEAA@AEAVGpuMat@cuda@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::cuda::GpuMat &)
??0_InputOutputArray@cv@@QEAA@AEAVHostMem@cuda@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::cuda::HostMem &)
??0_InputOutputArray@cv@@QEAA@AEAVMat@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::Mat &)
??0_InputOutputArray@cv@@QEAA@AEAVUMat@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::UMat &)
??0_InputOutputArray@cv@@QEAA@AEBV?$vector@VGpuMat@cuda@cv@@V?$allocator@VGpuMat@cuda@cv@@@std@@@std@@@Z;cv::_InputOutputArray::_InputOutputArray(class std::vector<class cv::cuda::GpuMat,class std::allocator<class cv::cuda::GpuMat> > const &)
??0_InputOutputArray@cv@@QEAA@AEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;cv::_InputOutputArray::_InputOutputArray(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
??0_InputOutputArray@cv@@QEAA@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;cv::_InputOutputArray::_InputOutputArray(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
??0_InputOutputArray@cv@@QEAA@AEBVBuffer@ogl@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::ogl::Buffer const &)
??0_InputOutputArray@cv@@QEAA@AEBVGpuMat@cuda@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::cuda::GpuMat const &)
??0_InputOutputArray@cv@@QEAA@AEBVHostMem@cuda@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::cuda::HostMem const &)
??0_InputOutputArray@cv@@QEAA@AEBVMat@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::Mat const &)
??0_InputOutputArray@cv@@QEAA@AEBVUMat@1@@Z;cv::_InputOutputArray::_InputOutputArray(class cv::UMat const &)
??0_InputOutputArray@cv@@QEAA@HPEAX@Z;cv::_InputOutputArray::_InputOutputArray(int,void *)
??0_InputOutputArray@cv@@QEAA@XZ;cv::_InputOutputArray::_InputOutputArray(void)
??0_OutputArray@cv@@QEAA@AEAV?$vector@VGpuMat@cuda@cv@@V?$allocator@VGpuMat@cuda@cv@@@std@@@std@@@Z;cv::_OutputArray::_OutputArray(class std::vector<class cv::cuda::GpuMat,class std::allocator<class cv::cuda::GpuMat> > &)
??0_OutputArray@cv@@QEAA@AEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;cv::_OutputArray::_OutputArray(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
??0_OutputArray@cv@@QEAA@AEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;cv::_OutputArray::_OutputArray(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
??0_OutputArray@cv@@QEAA@AEAVBuffer@ogl@1@@Z;cv::_OutputArray::_OutputArray(class cv::ogl::Buffer &)
??0_OutputArray@cv@@QEAA@AEAVGpuMat@cuda@1@@Z;cv::_OutputArray::_OutputArray(class cv::cuda::GpuMat &)
??0_OutputArray@cv@@QEAA@AEAVHostMem@cuda@1@@Z;cv::_OutputArray::_OutputArray(class cv::cuda::HostMem &)
??0_OutputArray@cv@@QEAA@AEAVMat@1@@Z;cv::_OutputArray::_OutputArray(class cv::Mat &)
??0_OutputArray@cv@@QEAA@AEAVUMat@1@@Z;cv::_OutputArray::_OutputArray(class cv::UMat &)
??0_OutputArray@cv@@QEAA@AEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;cv::_OutputArray::_OutputArray(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
??0_OutputArray@cv@@QEAA@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;cv::_OutputArray::_OutputArray(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
??0_OutputArray@cv@@QEAA@AEBVBuffer@ogl@1@@Z;cv::_OutputArray::_OutputArray(class cv::ogl::Buffer const &)
??0_OutputArray@cv@@QEAA@AEBVGpuMat@cuda@1@@Z;cv::_OutputArray::_OutputArray(class cv::cuda::GpuMat const &)
??0_OutputArray@cv@@QEAA@AEBVHostMem@cuda@1@@Z;cv::_OutputArray::_OutputArray(class cv::cuda::HostMem const &)
??0_OutputArray@cv@@QEAA@AEBVMat@1@@Z;cv::_OutputArray::_OutputArray(class cv::Mat const &)
??0_OutputArray@cv@@QEAA@AEBVUMat@1@@Z;cv::_OutputArray::_OutputArray(class cv::UMat const &)
??0_OutputArray@cv@@QEAA@HPEAX@Z;cv::_OutputArray::_OutputArray(int,void *)
??0_OutputArray@cv@@QEAA@XZ;cv::_OutputArray::_OutputArray(void)
??0queue_capacity@streaming@gapi@cv@@QEAA@_K@Z;cv::gapi::streaming::queue_capacity::queue_capacity(unsigned __int64)
??0softdouble@cv@@QEAA@AEBU01@@Z;cv::softdouble::softdouble(struct cv::softdouble const &)
??0softdouble@cv@@QEAA@H@Z;cv::softdouble::softdouble(int)
??0softdouble@cv@@QEAA@I@Z;cv::softdouble::softdouble(unsigned int)
??0softdouble@cv@@QEAA@N@Z;cv::softdouble::softdouble(double)
??0softdouble@cv@@QEAA@XZ;cv::softdouble::softdouble(void)
??0softdouble@cv@@QEAA@_J@Z;cv::softdouble::softdouble(__int64)
??0softdouble@cv@@QEAA@_K@Z;cv::softdouble::softdouble(unsigned __int64)
??0softfloat@cv@@QEAA@AEBU01@@Z;cv::softfloat::softfloat(struct cv::softfloat const &)
??0softfloat@cv@@QEAA@H@Z;cv::softfloat::softfloat(int)
??0softfloat@cv@@QEAA@I@Z;cv::softfloat::softfloat(unsigned int)
??0softfloat@cv@@QEAA@M@Z;cv::softfloat::softfloat(float)
??0softfloat@cv@@QEAA@XZ;cv::softfloat::softfloat(void)
??0softfloat@cv@@QEAA@_J@Z;cv::softfloat::softfloat(__int64)
??0softfloat@cv@@QEAA@_K@Z;cv::softfloat::softfloat(unsigned __int64)
??0use_only@gapi@cv@@QEAA@$$QEAU012@@Z;cv::gapi::use_only::use_only(struct cv::gapi::use_only &&)
??0use_only@gapi@cv@@QEAA@AEBU012@@Z;cv::gapi::use_only::use_only(struct cv::gapi::use_only const &)
??0use_only@gapi@cv@@QEAA@XZ;cv::gapi::use_only::use_only(void)
??1?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::~RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>(void)
??1?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::~RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>(void)
??1?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::~RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>(void)
??1?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::~RotationWarperBase<struct cv::detail::CylindricalProjector>(void)
??1?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::~RotationWarperBase<struct cv::detail::FisheyeProjector>(void)
??1?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::~RotationWarperBase<struct cv::detail::MercatorProjector>(void)
??1?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::~RotationWarperBase<struct cv::detail::PaniniPortraitProjector>(void)
??1?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::~RotationWarperBase<struct cv::detail::PaniniProjector>(void)
??1?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::~RotationWarperBase<struct cv::detail::PlanePortraitProjector>(void)
??1?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::~RotationWarperBase<struct cv::detail::PlaneProjector>(void)
??1?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::~RotationWarperBase<struct cv::detail::SphericalPortraitProjector>(void)
??1?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::~RotationWarperBase<struct cv::detail::SphericalProjector>(void)
??1?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::~RotationWarperBase<struct cv::detail::StereographicProjector>(void)
??1?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAA@XZ;cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::~RotationWarperBase<struct cv::detail::TransverseMercatorProjector>(void)
??1?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEAA@XZ;cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::~variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>(void)
??1AKAZE@cv@@UEAA@XZ;cv::AKAZE::~AKAZE(void)
??1ANN_MLP@ml@cv@@UEAA@XZ;cv::ml::ANN_MLP::~ANN_MLP(void)
??1AVIReadContainer@cv@@QEAA@XZ;cv::AVIReadContainer::~AVIReadContainer(void)
??1AVIWriteContainer@cv@@QEAA@XZ;cv::AVIWriteContainer::~AVIWriteContainer(void)
??1AbsLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::AbsLayer::~AbsLayer(void)
??1AccumLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::AccumLayer::~AccumLayer(void)
??1ActivationLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ActivationLayer::~ActivationLayer(void)
??1ActivationLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ActivationLayerInt8::~ActivationLayerInt8(void)
??1AffineBasedEstimator@detail@cv@@UEAA@XZ;cv::detail::AffineBasedEstimator::~AffineBasedEstimator(void)
??1AffineBestOf2NearestMatcher@detail@cv@@UEAA@XZ;cv::detail::AffineBestOf2NearestMatcher::~AffineBestOf2NearestMatcher(void)
??1AffineFeature@cv@@UEAA@XZ;cv::AffineFeature::~AffineFeature(void)
??1AffineWarper@cv@@UEAA@XZ;cv::AffineWarper::~AffineWarper(void)
??1AffineWarper@detail@cv@@UEAA@XZ;cv::detail::AffineWarper::~AffineWarper(void)
??1AgastFeatureDetector@cv@@UEAA@XZ;cv::AgastFeatureDetector::~AgastFeatureDetector(void)
??1Algorithm@cv@@UEAA@XZ;cv::Algorithm::~Algorithm(void)
??1AlignExposures@cv@@UEAA@XZ;cv::AlignExposures::~AlignExposures(void)
??1AlignMTB@cv@@UEAA@XZ;cv::AlignMTB::~AlignMTB(void)
??1Allocator@GpuMat@cuda@cv@@UEAA@XZ;cv::cuda::GpuMat::Allocator::~Allocator(void)
??1Arrays@ogl@cv@@QEAA@XZ;cv::ogl::Arrays::~Arrays(void)
??1AsyncArray@cv@@QEAA@XZ;cv::AsyncArray::~AsyncArray(void)
??1AsyncPromise@cv@@QEAA@XZ;cv::AsyncPromise::~AsyncPromise(void)
??1AutotunedIndexParams@flann@cv@@QEAA@XZ;cv::flann::AutotunedIndexParams::~AutotunedIndexParams(void)
??1BFMatcher@cv@@UEAA@XZ;cv::BFMatcher::~BFMatcher(void)
??1BNLLLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::BNLLLayer::~BNLLLayer(void)
??1BOWImgDescriptorExtractor@cv@@UEAA@XZ;cv::BOWImgDescriptorExtractor::~BOWImgDescriptorExtractor(void)
??1BOWKMeansTrainer@cv@@UEAA@XZ;cv::BOWKMeansTrainer::~BOWKMeansTrainer(void)
??1BOWTrainer@cv@@UEAA@XZ;cv::BOWTrainer::~BOWTrainer(void)
??1BRISK@cv@@UEAA@XZ;cv::BRISK::~BRISK(void)
??1BackgroundSubtractor@cv@@UEAA@XZ;cv::BackgroundSubtractor::~BackgroundSubtractor(void)
??1BackgroundSubtractorKNN@cv@@UEAA@XZ;cv::BackgroundSubtractorKNN::~BackgroundSubtractorKNN(void)
??1BackgroundSubtractorMOG2@cv@@UEAA@XZ;cv::BackgroundSubtractorMOG2::~BackgroundSubtractorMOG2(void)
??1BaseCascadeClassifier@cv@@UEAA@XZ;cv::BaseCascadeClassifier::~BaseCascadeClassifier(void)
??1BaseConvolutionLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::BaseConvolutionLayer::~BaseConvolutionLayer(void)
??1BatchNormLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::BatchNormLayer::~BatchNormLayer(void)
??1BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::BatchNormLayerInt8::~BatchNormLayerInt8(void)
??1BestOf2NearestMatcher@detail@cv@@UEAA@XZ;cv::detail::BestOf2NearestMatcher::~BestOf2NearestMatcher(void)
??1BestOf2NearestRangeMatcher@detail@cv@@UEAA@XZ;cv::detail::BestOf2NearestRangeMatcher::~BestOf2NearestRangeMatcher(void)
??1BlankLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::BlankLayer::~BlankLayer(void)
??1Blender@detail@cv@@UEAA@XZ;cv::detail::Blender::~Blender(void)
??1BlocksChannelsCompensator@detail@cv@@UEAA@XZ;cv::detail::BlocksChannelsCompensator::~BlocksChannelsCompensator(void)
??1BlocksCompensator@detail@cv@@UEAA@XZ;cv::detail::BlocksCompensator::~BlocksCompensator(void)
??1BlocksGainCompensator@detail@cv@@UEAA@XZ;cv::detail::BlocksGainCompensator::~BlocksGainCompensator(void)
??1Boost@ml@cv@@UEAA@XZ;cv::ml::Boost::~Boost(void)
??1Buffer@fluid@gapi@cv@@QEAA@XZ;cv::gapi::fluid::Buffer::~Buffer(void)
??1Buffer@ogl@cv@@QEAA@XZ;cv::ogl::Buffer::~Buffer(void)
??1BufferArea@utils@cv@@QEAA@XZ;cv::utils::BufferArea::~BufferArea(void)
??1BufferPool@cuda@cv@@QEAA@XZ;cv::cuda::BufferPool::~BufferPool(void)
??1BundleAdjusterAffine@detail@cv@@UEAA@XZ;cv::detail::BundleAdjusterAffine::~BundleAdjusterAffine(void)
??1BundleAdjusterAffinePartial@detail@cv@@UEAA@XZ;cv::detail::BundleAdjusterAffinePartial::~BundleAdjusterAffinePartial(void)
??1BundleAdjusterBase@detail@cv@@UEAA@XZ;cv::detail::BundleAdjusterBase::~BundleAdjusterBase(void)
??1BundleAdjusterRay@detail@cv@@UEAA@XZ;cv::detail::BundleAdjusterRay::~BundleAdjusterRay(void)
??1BundleAdjusterReproj@detail@cv@@UEAA@XZ;cv::detail::BundleAdjusterReproj::~BundleAdjusterReproj(void)
??1ByteMemoryInStream@s11n@gapi@cv@@UEAA@XZ;cv::gapi::s11n::ByteMemoryInStream::~ByteMemoryInStream(void)
??1ByteMemoryOutStream@s11n@gapi@cv@@UEAA@XZ;cv::gapi::s11n::ByteMemoryOutStream::~ByteMemoryOutStream(void)
??1CLAHE@cv@@UEAA@XZ;cv::CLAHE::~CLAHE(void)
??1CalibrateCRF@cv@@UEAA@XZ;cv::CalibrateCRF::~CalibrateCRF(void)
??1CalibrateDebevec@cv@@UEAA@XZ;cv::CalibrateDebevec::~CalibrateDebevec(void)
??1CalibrateRobertson@cv@@UEAA@XZ;cv::CalibrateRobertson::~CalibrateRobertson(void)
??1Callback@LMSolver@cv@@UEAA@XZ;cv::LMSolver::Callback::~Callback(void)
??1Callback@PointSetRegistrator@cv@@UEAA@XZ;cv::PointSetRegistrator::Callback::~Callback(void)
??1CameraParams@detail@cv@@QEAA@XZ;cv::detail::CameraParams::~CameraParams(void)
??1CascadeClassifier@cv@@QEAA@XZ;cv::CascadeClassifier::~CascadeClassifier(void)
??1CfgParam@onevpl@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::onevpl::CfgParam::~CfgParam(void)
??1ChannelsCompensator@detail@cv@@UEAA@XZ;cv::detail::ChannelsCompensator::~ChannelsCompensator(void)
??1ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ChannelsPReLULayer::~ChannelsPReLULayer(void)
??1ClassificationModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::ClassificationModel::~ClassificationModel(void)
??1ClfMilBoost@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::ClfMilBoost::~ClfMilBoost(void)
??1CommandLineParser@cv@@QEAA@XZ;cv::CommandLineParser::~CommandLineParser(void)
??1CompositeIndexParams@flann@cv@@QEAA@XZ;cv::flann::CompositeIndexParams::~CompositeIndexParams(void)
??1CompressedRectilinearPortraitWarper@cv@@UEAA@XZ;cv::CompressedRectilinearPortraitWarper::~CompressedRectilinearPortraitWarper(void)
??1CompressedRectilinearPortraitWarper@detail@cv@@UEAA@XZ;cv::detail::CompressedRectilinearPortraitWarper::~CompressedRectilinearPortraitWarper(void)
??1CompressedRectilinearWarper@cv@@UEAA@XZ;cv::CompressedRectilinearWarper::~CompressedRectilinearWarper(void)
??1CompressedRectilinearWarper@detail@cv@@UEAA@XZ;cv::detail::CompressedRectilinearWarper::~CompressedRectilinearWarper(void)
??1ConcatLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ConcatLayer::~ConcatLayer(void)
??1ConjGradSolver@cv@@UEAA@XZ;cv::ConjGradSolver::~ConjGradSolver(void)
??1ConstLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ConstLayer::~ConstLayer(void)
??1Context@ocl@cv@@QEAA@XZ;cv::ocl::Context::~Context(void)
??1ConvolutionLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ConvolutionLayer::~ConvolutionLayer(void)
??1ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::~ConvolutionLayerInt8(void)
??1CorrelationLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::CorrelationLayer::~CorrelationLayer(void)
??1CropAndResizeLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::CropAndResizeLayer::~CropAndResizeLayer(void)
??1CropLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::CropLayer::~CropLayer(void)
??1CumSumLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::CumSumLayer::~CumSumLayer(void)
??1CvLevMarq@@QEAA@XZ;CvLevMarq::~CvLevMarq(void)
??1CylindricalPortraitWarper@detail@cv@@UEAA@XZ;cv::detail::CylindricalPortraitWarper::~CylindricalPortraitWarper(void)
??1CylindricalWarper@cv@@UEAA@XZ;cv::CylindricalWarper::~CylindricalWarper(void)
??1CylindricalWarper@detail@cv@@UEAA@XZ;cv::detail::CylindricalWarper::~CylindricalWarper(void)
??1CylindricalWarperGpu@detail@cv@@UEAA@XZ;cv::detail::CylindricalWarperGpu::~CylindricalWarperGpu(void)
??1DCT2D@hal@cv@@UEAA@XZ;cv::hal::DCT2D::~DCT2D(void)
??1DFT1D@hal@cv@@UEAA@XZ;cv::hal::DFT1D::~DFT1D(void)
??1DFT2D@hal@cv@@UEAA@XZ;cv::hal::DFT2D::~DFT2D(void)
??1DISOpticalFlow@cv@@UEAA@XZ;cv::DISOpticalFlow::~DISOpticalFlow(void)
??1DTrees@ml@cv@@UEAA@XZ;cv::ml::DTrees::~DTrees(void)
??1Data@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::Data::~Data(void)
??1DataAugmentationLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::DataAugmentationLayer::~DataAugmentationLayer(void)
??1DataProviderException@onevpl@wip@gapi@cv@@UEAA@XZ;cv::gapi::wip::onevpl::DataProviderException::~DataProviderException(void)
??1DataProviderSystemErrorException@onevpl@wip@gapi@cv@@UEAA@XZ;cv::gapi::wip::onevpl::DataProviderSystemErrorException::~DataProviderSystemErrorException(void)
??1DeconvolutionLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::DeconvolutionLayer::~DeconvolutionLayer(void)
??1DenseOpticalFlow@cv@@UEAA@XZ;cv::DenseOpticalFlow::~DenseOpticalFlow(void)
??1DequantizeLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::DequantizeLayer::~DequantizeLayer(void)
??1DescriptorCollection@DescriptorMatcher@cv@@UEAA@XZ;cv::DescriptorMatcher::DescriptorCollection::~DescriptorCollection(void)
??1DescriptorMatcher@cv@@UEAA@XZ;cv::DescriptorMatcher::~DescriptorMatcher(void)
??1DetectionBasedTracker@cv@@UEAA@XZ;cv::DetectionBasedTracker::~DetectionBasedTracker(void)
??1DetectionModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::DetectionModel::~DetectionModel(void)
??1DetectionOutputLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::DetectionOutputLayer::~DetectionOutputLayer(void)
??1Device@ocl@cv@@QEAA@XZ;cv::ocl::Device::~Device(void)
??1Dict@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::Dict::~Dict(void)
??1DictValue@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::DictValue::~DictValue(void)
??1DisjointSets@detail@cv@@QEAA@XZ;cv::detail::DisjointSets::~DisjointSets(void)
??1DownhillSolver@cv@@UEAA@XZ;cv::DownhillSolver::~DownhillSolver(void)
??1DpSeamFinder@detail@cv@@UEAA@XZ;cv::detail::DpSeamFinder::~DpSeamFinder(void)
??1DynamicLib@impl@plugin@cv@@QEAA@XZ;cv::plugin::impl::DynamicLib::~DynamicLib(void)
??1ELULayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ELULayer::~ELULayer(void)
??1EM@ml@cv@@UEAA@XZ;cv::ml::EM::~EM(void)
??1EMImpl@ml@cv@@UEAA@XZ;cv::ml::EMImpl::~EMImpl(void)
??1EltwiseLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::EltwiseLayer::~EltwiseLayer(void)
??1EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::EltwiseLayerInt8::~EltwiseLayerInt8(void)
??1Estimator@detail@cv@@UEAA@XZ;cv::detail::Estimator::~Estimator(void)
??1Event@cuda@cv@@QEAA@XZ;cv::cuda::Event::~Event(void)
??1Exception@cv@@UEAA@XZ;cv::Exception::~Exception(void)
??1ExpLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ExpLayer::~ExpLayer(void)
??1ExposureCompensator@detail@cv@@UEAA@XZ;cv::detail::ExposureCompensator::~ExposureCompensator(void)
??1FTTextRender@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::FTTextRender::~FTTextRender(void)
??1FaceDetectorYN@cv@@UEAA@XZ;cv::FaceDetectorYN::~FaceDetectorYN(void)
??1FaceRecognizerSF@cv@@UEAA@XZ;cv::FaceRecognizerSF::~FaceRecognizerSF(void)
??1FarnebackOpticalFlow@cv@@UEAA@XZ;cv::FarnebackOpticalFlow::~FarnebackOpticalFlow(void)
??1FastFeatureDetector@cv@@UEAA@XZ;cv::FastFeatureDetector::~FastFeatureDetector(void)
??1FeatherBlender@detail@cv@@UEAA@XZ;cv::detail::FeatherBlender::~FeatherBlender(void)
??1Feature2D@cv@@UEAA@XZ;cv::Feature2D::~Feature2D(void)
??1FeaturesMatcher@detail@cv@@UEAA@XZ;cv::detail::FeaturesMatcher::~FeaturesMatcher(void)
??1FileLock@fs@utils@cv@@QEAA@XZ;cv::utils::fs::FileLock::~FileLock(void)
??1FileStorage@cv@@UEAA@XZ;cv::FileStorage::~FileStorage(void)
??1Filter2D@hal@cv@@UEAA@XZ;cv::hal::Filter2D::~Filter2D(void)
??1FisheyeWarper@cv@@UEAA@XZ;cv::FisheyeWarper::~FisheyeWarper(void)
??1FisheyeWarper@detail@cv@@UEAA@XZ;cv::detail::FisheyeWarper::~FisheyeWarper(void)
??1FlannBasedMatcher@cv@@UEAA@XZ;cv::FlannBasedMatcher::~FlannBasedMatcher(void)
??1FlattenLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::FlattenLayer::~FlattenLayer(void)
??1FlowWarpLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::FlowWarpLayer::~FlowWarpLayer(void)
??1Formatted@cv@@UEAA@XZ;cv::Formatted::~Formatted(void)
??1Formatter@cv@@UEAA@XZ;cv::Formatter::~Formatter(void)
??1Function@MinProblemSolver@cv@@UEAA@XZ;cv::MinProblemSolver::Function::~Function(void)
??1GArg@cv@@QEAA@XZ;cv::GArg::~GArg(void)
??1GArrayU@detail@cv@@QEAA@XZ;cv::detail::GArrayU::~GArrayU(void)
??1GAsyncCanceled@wip@gapi@cv@@UEAA@XZ;cv::gapi::wip::GAsyncCanceled::~GAsyncCanceled(void)
??1GBackend@gapi@cv@@QEAA@XZ;cv::gapi::GBackend::~GBackend(void)
??1GCPUContext@cv@@QEAA@XZ;cv::GCPUContext::~GCPUContext(void)
??1GCPUKernel@cv@@QEAA@XZ;cv::GCPUKernel::~GCPUKernel(void)
??1GCall@cv@@QEAA@XZ;cv::GCall::~GCall(void)
??1GCompiled@cv@@QEAA@XZ;cv::GCompiled::~GCompiled(void)
??1GCompiler@gimpl@cv@@QEAA@XZ;cv::gimpl::GCompiler::~GCompiler(void)
??1GCompoundKernel@detail@cv@@QEAA@XZ;cv::detail::GCompoundKernel::~GCompoundKernel(void)
??1GComputation@cv@@QEAA@XZ;cv::GComputation::~GComputation(void)
??1GFTTDetector@cv@@UEAA@XZ;cv::GFTTDetector::~GFTTDetector(void)
??1GFluidKernel@cv@@QEAA@XZ;cv::GFluidKernel::~GFluidKernel(void)
??1GFrame@cv@@QEAA@XZ;cv::GFrame::~GFrame(void)
??1GIsland@gimpl@cv@@QEAA@XZ;cv::gimpl::GIsland::~GIsland(void)
??1GIslandExecutable@gimpl@cv@@UEAA@XZ;cv::gimpl::GIslandExecutable::~GIslandExecutable(void)
??1GKernel@cv@@QEAA@XZ;cv::GKernel::~GKernel(void)
??1GKernelImpl@cv@@QEAA@XZ;cv::GKernelImpl::~GKernelImpl(void)
??1GKernelPackage@gapi@cv@@QEAA@XZ;cv::gapi::GKernelPackage::~GKernelPackage(void)
??1GMat@cv@@QEAA@XZ;cv::GMat::~GMat(void)
??1GMatDesc@cv@@QEAA@XZ;cv::GMatDesc::~GMatDesc(void)
??1GMatP@cv@@QEAA@XZ;cv::GMatP::~GMatP(void)
??1GModelBuilder@gimpl@cv@@QEAA@XZ;cv::gimpl::GModelBuilder::~GModelBuilder(void)
??1GNetPackage@gapi@cv@@QEAA@XZ;cv::gapi::GNetPackage::~GNetPackage(void)
??1GNetParam@gapi@cv@@QEAA@XZ;cv::gapi::GNetParam::~GNetParam(void)
??1GOCLContext@cv@@QEAA@XZ;cv::GOCLContext::~GOCLContext(void)
??1GOCLKernel@cv@@QEAA@XZ;cv::GOCLKernel::~GOCLKernel(void)
??1GOpaqueU@detail@cv@@QEAA@XZ;cv::detail::GOpaqueU::~GOpaqueU(void)
??1GPythonFunctor@python@gapi@cv@@UEAA@XZ;cv::gapi::python::GPythonFunctor::~GPythonFunctor(void)
??1GPythonKernel@python@gapi@cv@@QEAA@XZ;cv::gapi::python::GPythonKernel::~GPythonKernel(void)
??1GRULayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::GRULayer::~GRULayer(void)
??1GRunArg@cv@@QEAA@XZ;cv::GRunArg::~GRunArg(void)
??1GScalar@cv@@QEAA@XZ;cv::GScalar::~GScalar(void)
??1GSource@onevpl@wip@gapi@cv@@UEAA@XZ;cv::gapi::wip::onevpl::GSource::~GSource(void)
??1GStreamingCompiled@cv@@QEAA@XZ;cv::GStreamingCompiled::~GStreamingCompiled(void)
??1GTransform@cv@@QEAA@XZ;cv::GTransform::~GTransform(void)
??1GainCompensator@detail@cv@@UEAA@XZ;cv::detail::GainCompensator::~GainCompensator(void)
??1GeneralizedHough@cv@@UEAA@XZ;cv::GeneralizedHough::~GeneralizedHough(void)
??1GeneralizedHoughBallard@cv@@UEAA@XZ;cv::GeneralizedHoughBallard::~GeneralizedHoughBallard(void)
??1GeneralizedHoughGuil@cv@@UEAA@XZ;cv::GeneralizedHoughGuil::~GeneralizedHoughGuil(void)
??1GpuData@cuda@cv@@QEAA@XZ;cv::cuda::GpuData::~GpuData(void)
??1GpuMat@cuda@cv@@QEAA@XZ;cv::cuda::GpuMat::~GpuMat(void)
??1GpuMatND@cuda@cv@@QEAA@XZ;cv::cuda::GpuMatND::~GpuMatND(void)
??1Graph@detail@cv@@QEAA@XZ;cv::detail::Graph::~Graph(void)
??1GraphCutSeamFinder@detail@cv@@UEAA@XZ;cv::detail::GraphCutSeamFinder::~GraphCutSeamFinder(void)
??1HOGDescriptor@cv@@UEAA@XZ;cv::HOGDescriptor::~HOGDescriptor(void)
??1Hdr@SparseMat@cv@@QEAA@XZ;cv::SparseMat::Hdr::~Hdr(void)
??1HierarchicalClusteringIndexParams@flann@cv@@QEAA@XZ;cv::flann::HierarchicalClusteringIndexParams::~HierarchicalClusteringIndexParams(void)
??1HomographyBasedEstimator@detail@cv@@UEAA@XZ;cv::detail::HomographyBasedEstimator::~HomographyBasedEstimator(void)
??1HostMem@cuda@cv@@QEAA@XZ;cv::cuda::HostMem::~HostMem(void)
??1IAdapter@MediaFrame@cv@@UEAA@XZ;cv::MediaFrame::IAdapter::~IAdapter(void)
??1IDataProvider@onevpl@wip@gapi@cv@@UEAA@XZ;cv::gapi::wip::onevpl::IDataProvider::~IDataProvider(void)
??1IIStream@s11n@gapi@cv@@UEAA@XZ;cv::gapi::s11n::IIStream::~IIStream(void)
??1IOStream@s11n@gapi@cv@@UEAA@XZ;cv::gapi::s11n::IOStream::~IOStream(void)
??1Image2D@ocl@cv@@QEAA@XZ;cv::ocl::Image2D::~Image2D(void)
??1Image@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Image::~Image(void)
??1ImageFeatures@detail@cv@@QEAA@XZ;cv::detail::ImageFeatures::~ImageFeatures(void)
??1Index@flann@cv@@UEAA@XZ;cv::flann::Index::~Index(void)
??1IndexParams@flann@cv@@QEAA@XZ;cv::flann::IndexParams::~IndexParams(void)
??1InnerProductLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::InnerProductLayer::~InnerProductLayer(void)
??1InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::InnerProductLayerInt8::~InnerProductLayerInt8(void)
??1IntelligentScissorsMB@segmentation@cv@@QEAA@XZ;cv::segmentation::IntelligentScissorsMB::~IntelligentScissorsMB(void)
??1InterpLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::InterpLayer::~InterpLayer(void)
??1IntrinsicParams@internal@cv@@QEAA@XZ;cv::internal::IntrinsicParams::~IntrinsicParams(void)
??1KAZE@cv@@UEAA@XZ;cv::KAZE::~KAZE(void)
??1KDTree@ml@cv@@QEAA@XZ;cv::ml::KDTree::~KDTree(void)
??1KDTreeIndexParams@flann@cv@@QEAA@XZ;cv::flann::KDTreeIndexParams::~KDTreeIndexParams(void)
??1KMeansIndexParams@flann@cv@@QEAA@XZ;cv::flann::KMeansIndexParams::~KMeansIndexParams(void)
??1KNearest@ml@cv@@UEAA@XZ;cv::ml::KNearest::~KNearest(void)
??1KalmanFilter@cv@@QEAA@XZ;cv::KalmanFilter::~KalmanFilter(void)
??1KalmanParams@gapi@cv@@QEAA@XZ;cv::gapi::KalmanParams::~KalmanParams(void)
??1Kernel@SVM@ml@cv@@UEAA@XZ;cv::ml::SVM::Kernel::~Kernel(void)
??1Kernel@ocl@cv@@QEAA@XZ;cv::ocl::Kernel::~Kernel(void)
??1KeypointsModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::KeypointsModel::~KeypointsModel(void)
??1LDA@cv@@QEAA@XZ;cv::LDA::~LDA(void)
??1LMSolver@cv@@UEAA@XZ;cv::LMSolver::~LMSolver(void)
??1LRNLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::LRNLayer::~LRNLayer(void)
??1LSTMLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::LSTMLayer::~LSTMLayer(void)
??1Layer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::Layer::~Layer(void)
??1LayerParams@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::LayerParams::~LayerParams(void)
??1LineSegmentDetector@cv@@UEAA@XZ;cv::LineSegmentDetector::~LineSegmentDetector(void)
??1LinearIndexParams@flann@cv@@QEAA@XZ;cv::flann::LinearIndexParams::~LinearIndexParams(void)
??1LogisticRegression@ml@cv@@UEAA@XZ;cv::ml::LogisticRegression::~LogisticRegression(void)
??1LshIndexParams@flann@cv@@QEAA@XZ;cv::flann::LshIndexParams::~LshIndexParams(void)
??1MSER@cv@@UEAA@XZ;cv::MSER::~MSER(void)
??1MVNLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::MVNLayer::~MVNLayer(void)
??1MaskGenerator@BaseCascadeClassifier@cv@@UEAA@XZ;cv::BaseCascadeClassifier::MaskGenerator::~MaskGenerator(void)
??1Mat@cv@@QEAA@XZ;cv::Mat::~Mat(void)
??1MatAllocator@cv@@UEAA@XZ;cv::MatAllocator::~MatAllocator(void)
??1MatExpr@cv@@QEAA@XZ;cv::MatExpr::~MatExpr(void)
??1MatOp@cv@@UEAA@XZ;cv::MatOp::~MatOp(void)
??1MatchesInfo@detail@cv@@QEAA@XZ;cv::detail::MatchesInfo::~MatchesInfo(void)
??1MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::MaxUnpoolLayer::~MaxUnpoolLayer(void)
??1MediaFrame@cv@@QEAA@XZ;cv::MediaFrame::~MediaFrame(void)
??1MercatorWarper@cv@@UEAA@XZ;cv::MercatorWarper::~MercatorWarper(void)
??1MercatorWarper@detail@cv@@UEAA@XZ;cv::detail::MercatorWarper::~MercatorWarper(void)
??1MergeDebevec@cv@@UEAA@XZ;cv::MergeDebevec::~MergeDebevec(void)
??1MergeExposures@cv@@UEAA@XZ;cv::MergeExposures::~MergeExposures(void)
??1MergeMertens@cv@@UEAA@XZ;cv::MergeMertens::~MergeMertens(void)
??1MergeRobertson@cv@@UEAA@XZ;cv::MergeRobertson::~MergeRobertson(void)
??1MinProblemSolver@cv@@UEAA@XZ;cv::MinProblemSolver::~MinProblemSolver(void)
??1MishLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::MishLayer::~MishLayer(void)
??1Model@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::Model::~Model(void)
??1Morph@hal@cv@@UEAA@XZ;cv::hal::Morph::~Morph(void)
??1MultiBandBlender@detail@cv@@UEAA@XZ;cv::detail::MultiBandBlender::~MultiBandBlender(void)
??1Net@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::Net::~Net(void)
??1NoBundleAdjuster@detail@cv@@UEAA@XZ;cv::detail::NoBundleAdjuster::~NoBundleAdjuster(void)
??1NoExposureCompensator@detail@cv@@UEAA@XZ;cv::detail::NoExposureCompensator::~NoExposureCompensator(void)
??1NoSeamFinder@detail@cv@@UEAA@XZ;cv::detail::NoSeamFinder::~NoSeamFinder(void)
??1NodeData@instr@cv@@QEAA@XZ;cv::instr::NodeData::~NodeData(void)
??1NormalBayesClassifier@ml@cv@@UEAA@XZ;cv::ml::NormalBayesClassifier::~NormalBayesClassifier(void)
??1NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::~NormalizeBBoxLayer(void)
??1ORB@cv@@UEAA@XZ;cv::ORB::~ORB(void)
??1OpenCLExecutionContext@ocl@cv@@QEAA@XZ;cv::ocl::OpenCLExecutionContext::~OpenCLExecutionContext(void)
??1PCA@cv@@QEAA@XZ;cv::PCA::~PCA(void)
??1PaddingLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::PaddingLayer::~PaddingLayer(void)
??1PairwiseSeamFinder@detail@cv@@UEAA@XZ;cv::detail::PairwiseSeamFinder::~PairwiseSeamFinder(void)
??1PaniniPortraitWarper@cv@@UEAA@XZ;cv::PaniniPortraitWarper::~PaniniPortraitWarper(void)
??1PaniniPortraitWarper@detail@cv@@UEAA@XZ;cv::detail::PaniniPortraitWarper::~PaniniPortraitWarper(void)
??1PaniniWarper@cv@@UEAA@XZ;cv::PaniniWarper::~PaniniWarper(void)
??1PaniniWarper@detail@cv@@UEAA@XZ;cv::detail::PaniniWarper::~PaniniWarper(void)
??1ParallelForAPI@parallel@cv@@UEAA@XZ;cv::parallel::ParallelForAPI::~ParallelForAPI(void)
??1ParallelLoopBody@cv@@UEAA@XZ;cv::ParallelLoopBody::~ParallelLoopBody(void)
??1Params@TrackerDaSiamRPN@cv@@QEAA@XZ;cv::TrackerDaSiamRPN::Params::~Params(void)
??1Params@TrackerGOTURN@cv@@QEAA@XZ;cv::TrackerGOTURN::Params::~Params(void)
??1PermuteLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::PermuteLayer::~PermuteLayer(void)
??1PlanePortraitWarper@detail@cv@@UEAA@XZ;cv::detail::PlanePortraitWarper::~PlanePortraitWarper(void)
??1PlaneWarper@cv@@UEAA@XZ;cv::PlaneWarper::~PlaneWarper(void)
??1PlaneWarper@detail@cv@@UEAA@XZ;cv::detail::PlaneWarper::~PlaneWarper(void)
??1PlaneWarperGpu@detail@cv@@UEAA@XZ;cv::detail::PlaneWarperGpu::~PlaneWarperGpu(void)
??1Platform@ocl@cv@@QEAA@XZ;cv::ocl::Platform::~Platform(void)
??1PlatformInfo@ocl@cv@@QEAA@XZ;cv::ocl::PlatformInfo::~PlatformInfo(void)
??1PointSetRegistrator@cv@@UEAA@XZ;cv::PointSetRegistrator::~PointSetRegistrator(void)
??1Poly@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Poly::~Poly(void)
??1PoolingLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::PoolingLayer::~PoolingLayer(void)
??1PoolingLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::PoolingLayerInt8::~PoolingLayerInt8(void)
??1PowerLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::PowerLayer::~PowerLayer(void)
??1PriorBoxLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::PriorBoxLayer::~PriorBoxLayer(void)
??1Priv@Buffer@fluid@gapi@cv@@QEAA@XZ;cv::gapi::fluid::Buffer::Priv::~Priv(void)
??1Priv@GBackend@gapi@cv@@UEAA@XZ;cv::gapi::GBackend::Priv::~Priv(void)
??1Priv@GCompiled@cv@@QEAA@XZ;cv::GCompiled::Priv::~Priv(void)
??1Priv@GStreamingCompiled@cv@@QEAA@XZ;cv::GStreamingCompiled::Priv::~Priv(void)
??1Priv@View@fluid@gapi@cv@@UEAA@XZ;cv::gapi::fluid::View::Priv::~Priv(void)
??1Program@ocl@cv@@QEAA@XZ;cv::ocl::Program::~Program(void)
??1ProgramSource@ocl@cv@@QEAA@XZ;cv::ocl::ProgramSource::~ProgramSource(void)
??1ProposalLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ProposalLayer::~ProposalLayer(void)
??1PyParams@ie@gapi@cv@@QEAA@XZ;cv::gapi::ie::PyParams::~PyParams(void)
??1PyRotationWarper@cv@@QEAA@XZ;cv::PyRotationWarper::~PyRotationWarper(void)
??1QRCodeDetector@cv@@QEAA@XZ;cv::QRCodeDetector::~QRCodeDetector(void)
??1QuantizeLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::QuantizeLayer::~QuantizeLayer(void)
??1Queue@ocl@cv@@QEAA@XZ;cv::ocl::Queue::~Queue(void)
??1RMat@cv@@QEAA@XZ;cv::RMat::~RMat(void)
??1RMatMediaFrameAdapter@gimpl@cv@@UEAA@XZ;cv::gimpl::RMatMediaFrameAdapter::~RMatMediaFrameAdapter(void)
??1RNNLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::RNNLayer::~RNNLayer(void)
??1RTrees@ml@cv@@UEAA@XZ;cv::ml::RTrees::~RTrees(void)
??1ReLU6Layer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ReLU6Layer::~ReLU6Layer(void)
??1ReLULayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ReLULayer::~ReLULayer(void)
??1Region@details@trace@utils@cv@@QEAA@XZ;cv::utils::trace::details::Region::~Region(void)
??1RegionLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::RegionLayer::~RegionLayer(void)
??1ReorgLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ReorgLayer::~ReorgLayer(void)
??1RequantizeLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::RequantizeLayer::~RequantizeLayer(void)
??1ReshapeLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ReshapeLayer::~ReshapeLayer(void)
??1ResizeLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ResizeLayer::~ResizeLayer(void)
??1RotationWarper@detail@cv@@UEAA@XZ;cv::detail::RotationWarper::~RotationWarper(void)
??1SIFT@cv@@UEAA@XZ;cv::SIFT::~SIFT(void)
??1SVD@cv@@QEAA@XZ;cv::SVD::~SVD(void)
??1SVM@ml@cv@@UEAA@XZ;cv::ml::SVM::~SVM(void)
??1SVMSGD@ml@cv@@UEAA@XZ;cv::ml::SVMSGD::~SVMSGD(void)
??1SavedIndexParams@flann@cv@@QEAA@XZ;cv::flann::SavedIndexParams::~SavedIndexParams(void)
??1ScaleLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ScaleLayer::~ScaleLayer(void)
??1ScaleLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ScaleLayerInt8::~ScaleLayerInt8(void)
??1SeamFinder@detail@cv@@UEAA@XZ;cv::detail::SeamFinder::~SeamFinder(void)
??1SearchParams@flann@cv@@QEAA@XZ;cv::flann::SearchParams::~SearchParams(void)
??1SegmentationModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::SegmentationModel::~SegmentationModel(void)
??1SepFilter2D@hal@cv@@UEAA@XZ;cv::hal::SepFilter2D::~SepFilter2D(void)
??1ShiftLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ShiftLayer::~ShiftLayer(void)
??1ShiftLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ShiftLayerInt8::~ShiftLayerInt8(void)
??1ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::ShuffleChannelLayer::~ShuffleChannelLayer(void)
??1SigmoidLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::SigmoidLayer::~SigmoidLayer(void)
??1SimpleBlobDetector@cv@@UEAA@XZ;cv::SimpleBlobDetector::~SimpleBlobDetector(void)
??1SimpleBlobDetectorImpl@cv@@UEAA@XZ;cv::SimpleBlobDetectorImpl::~SimpleBlobDetectorImpl(void)
??1SliceLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::SliceLayer::~SliceLayer(void)
??1SoftmaxLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::SoftmaxLayer::~SoftmaxLayer(void)
??1SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::~SoftmaxLayerInt8(void)
??1SparseMat@cv@@QEAA@XZ;cv::SparseMat::~SparseMat(void)
??1SparseOpticalFlow@cv@@UEAA@XZ;cv::SparseOpticalFlow::~SparseOpticalFlow(void)
??1SparsePyrLKOpticalFlow@cv@@UEAA@XZ;cv::SparsePyrLKOpticalFlow::~SparsePyrLKOpticalFlow(void)
??1SphericalPortraitWarper@detail@cv@@UEAA@XZ;cv::detail::SphericalPortraitWarper::~SphericalPortraitWarper(void)
??1SphericalWarper@cv@@UEAA@XZ;cv::SphericalWarper::~SphericalWarper(void)
??1SphericalWarper@detail@cv@@UEAA@XZ;cv::detail::SphericalWarper::~SphericalWarper(void)
??1SphericalWarperGpu@detail@cv@@UEAA@XZ;cv::detail::SphericalWarperGpu::~SphericalWarperGpu(void)
??1SplitLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::SplitLayer::~SplitLayer(void)
??1StatModel@ml@cv@@UEAA@XZ;cv::ml::StatModel::~StatModel(void)
??1StereoBM@cv@@UEAA@XZ;cv::StereoBM::~StereoBM(void)
??1StereoMatcher@cv@@UEAA@XZ;cv::StereoMatcher::~StereoMatcher(void)
??1StereoSGBM@cv@@UEAA@XZ;cv::StereoSGBM::~StereoSGBM(void)
??1StereoSetup@@QEAA@XZ;StereoSetup::~StereoSetup(void)
??1StereographicWarper@cv@@UEAA@XZ;cv::StereographicWarper::~StereographicWarper(void)
??1StereographicWarper@detail@cv@@UEAA@XZ;cv::detail::StereographicWarper::~StereographicWarper(void)
??1Stitcher@cv@@QEAA@XZ;cv::Stitcher::~Stitcher(void)
??1Stream@cuda@cv@@QEAA@XZ;cv::cuda::Stream::~Stream(void)
??1Subdiv2D@cv@@QEAA@XZ;cv::Subdiv2D::~Subdiv2D(void)
??1SwishLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::SwishLayer::~SwishLayer(void)
??1TLSDataContainer@cv@@MEAA@XZ;cv::TLSDataContainer::~TLSDataContainer(void)
??1TanHLayer@dnn4_v20211004@dnn@cv@@UEAA@XZ;cv::dnn::dnn4_v20211004::TanHLayer::~TanHLayer(void)
??1Text@draw@wip@gapi@cv@@QEAA@XZ;cv::gapi::wip::draw::Text::~Text(void)
??1TextDetectionModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TextDetectionModel::~TextDetectionModel(void)
??1TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TextDetectionModel_DB::~TextDetectionModel_DB(void)
??1TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::~TextDetectionModel_EAST(void)
??1TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAA@XZ;cv::dnn::dnn4_v20211004::TextRecognitionModel::~TextRecognitionModel(void)
??1Texture2D@ogl@cv@@QEAA@XZ;cv::ogl::Texture2D::~Texture2D(void)
??1Timelapser@detail@cv@@UEAA@XZ;cv::detail::Timelapser::~Timelapser(void)
??1TimelapserCrop@detail@cv@@UEAA@XZ;cv::detail::TimelapserCrop::~TimelapserCrop(void)
??1Timer@ocl@cv@@QEAA@XZ;cv::ocl::Timer::~Timer(void)
??1Tonemap@cv@@UEAA@XZ;cv::Tonemap::~Tonemap(void)
??1TonemapDrago@cv@@UEAA@XZ;cv::TonemapDrago::~TonemapDrago(void)
??1TonemapMantiuk@cv@@UEAA@XZ;cv::TonemapMantiuk::~TonemapMantiuk(void)
??1TonemapReinhard@cv@@UEAA@XZ;cv::TonemapReinhard::~TonemapReinhard(void)
??1TraceManager@details@trace@utils@cv@@QEAA@XZ;cv::utils::trace::details::TraceManager::~TraceManager(void)
??1Tracker@cv@@UEAA@XZ;cv::Tracker::~Tracker(void)
??1TrackerDaSiamRPN@cv@@UEAA@XZ;cv::TrackerDaSiamRPN::~TrackerDaSiamRPN(void)
??1TrackerFeature@tracking@detail@cv@@UEAA@XZ;cv::detail::tracking::TrackerFeature::~TrackerFeature(void)
??1TrackerFeatureSet@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerFeatureSet::~TrackerFeatureSet(void)
??1TrackerGOTURN@cv@@UEAA@XZ;cv::TrackerGOTURN::~TrackerGOTURN(void)
??1TrackerMIL@cv@@UEAA@XZ;cv::TrackerMIL::~TrackerMIL(void)
??1TrackerModel@tracking@detail@cv@@UEAA@XZ;cv::detail::tracking::TrackerModel::~TrackerModel(void)
??1TrackerSampler@tracking@detail@cv@@QEAA@XZ;cv::detail::tracking::TrackerSampler::~TrackerSampler(void)
??1TrackerSamplerAlgorithm@tracking@detail@cv@@UEAA@XZ;cv::detail::tracking::TrackerSamplerAlgorithm::~TrackerSamplerAlgorithm(void)
??1TrackerSamplerCSC@tracking@detail@cv@@UEAA@XZ;cv::detail::tracking::TrackerSamplerCSC::~TrackerSamplerCSC(void)
??1TrackerStateEstimator@tracking@detail@cv@@UEAA@XZ;cv::detail::tracking::TrackerStateEstimator::~TrackerStateEstimator(void)
??1TrackerStateEstimatorMILBoosting@tracking@detail@cv@@UEAA@XZ;cv::detail::tracking::TrackerStateEstimatorMILBoosting::~TrackerStateEstimatorMILBoosting(void)
??1TrackerTargetState@tracking@detail@cv@@UEAA@XZ;cv::detail::tracking::TrackerTargetState::~TrackerTargetState(void)
??1TrainData@ml@cv@@UEAA@XZ;cv::ml::TrainData::~TrainData(void)
??1TransverseMercatorWarper@cv@@UEAA@XZ;cv::TransverseMercatorWarper::~TransverseMercatorWarper(void)
??1TransverseMercatorWarper@detail@cv@@UEAA@XZ;cv::detail::TransverseMercatorWarper::~TransverseMercatorWarper(void)
??1UIBackend@highgui_backend@cv@@UEAA@XZ;cv::highgui_backend::UIBackend::~UIBackend(void)
??1UITrackbar@highgui_backend@cv@@UEAA@XZ;cv::highgui_backend::UITrackbar::~UITrackbar(void)
??1UIWindow@highgui_backend@cv@@UEAA@XZ;cv::highgui_backend::UIWindow::~UIWindow(void)
??1UIWindowBase@highgui_backend@cv@@UEAA@XZ;cv::highgui_backend::UIWindowBase::~UIWindowBase(void)
??1UMat@cv@@QEAA@XZ;cv::UMat::~UMat(void)
??1UMatData@cv@@QEAA@XZ;cv::UMatData::~UMatData(void)
??1UMatDataAutoLock@cv@@QEAA@XZ;cv::UMatDataAutoLock::~UMatDataAutoLock(void)
??1UserContext@Context@ocl@cv@@UEAA@XZ;cv::ocl::Context::UserContext::~UserContext(void)
??1VariationalRefinement@cv@@UEAA@XZ;cv::VariationalRefinement::~VariationalRefinement(void)
??1VideoCapture@cv@@UEAA@XZ;cv::VideoCapture::~VideoCapture(void)
??1VideoWriter@cv@@UEAA@XZ;cv::VideoWriter::~VideoWriter(void)
??1View@MediaFrame@cv@@QEAA@XZ;cv::MediaFrame::View::~View(void)
??1View@RMat@cv@@QEAA@XZ;cv::RMat::View::~View(void)
??1View@fluid@gapi@cv@@QEAA@XZ;cv::gapi::fluid::View::~View(void)
??1VoronoiSeamFinder@detail@cv@@UEAA@XZ;cv::detail::VoronoiSeamFinder::~VoronoiSeamFinder(void)
??1WarperCreator@cv@@UEAA@XZ;cv::WarperCreator::~WarperCreator(void)
??1WriteStructContext@internal@cv@@QEAA@XZ;cv::internal::WriteStructContext::~WriteStructContext(void)
??1_InputArray@cv@@QEAA@XZ;cv::_InputArray::~_InputArray(void)
??1_InputOutputArray@cv@@QEAA@XZ;cv::_InputOutputArray::~_InputOutputArray(void)
??1_OutputArray@cv@@QEAA@XZ;cv::_OutputArray::~_OutputArray(void)
??1use_only@gapi@cv@@QEAA@XZ;cv::gapi::use_only::~use_only(void)
??4?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector> &&)
??4?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector> const &)
??4?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector> & cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector> &&)
??4?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector> & cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector> const &)
??4?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector> &&)
??4?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector> const &)
??4?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector> & cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector> &&)
??4?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector> & cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector> const &)
??4?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector> & cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector> &&)
??4?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector> & cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector> const &)
??4?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector> & cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector> &&)
??4?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector> & cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector> const &)
??4?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector> &&)
??4?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector> const &)
??4?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector> & cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector> &&)
??4?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector> & cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector> const &)
??4?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector> &&)
??4?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector> const &)
??4?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector> & cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector> &&)
??4?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector> & cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector> const &)
??4?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector> &&)
??4?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector> & cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector> const &)
??4?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector> & cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector> &&)
??4?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector> & cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector> const &)
??4?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector> & cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector> &&)
??4?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector> & cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector> const &)
??4?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector> & cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector> &&)
??4?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector> & cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::operator=(class cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector> const &)
??4?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame> & cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::operator=(class cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame> &&)
??4?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEAAAEAV012@AEBV012@@Z;class cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame> & cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::operator=(class cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame> const &)
??4AKAZE@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AKAZE & cv::AKAZE::operator=(class cv::AKAZE &&)
??4AKAZE@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AKAZE & cv::AKAZE::operator=(class cv::AKAZE const &)
??4ANN_MLP@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::ANN_MLP & cv::ml::ANN_MLP::operator=(class cv::ml::ANN_MLP &&)
??4ANN_MLP@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::ANN_MLP & cv::ml::ANN_MLP::operator=(class cv::ml::ANN_MLP const &)
??4AVIReadContainer@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AVIReadContainer & cv::AVIReadContainer::operator=(class cv::AVIReadContainer &&)
??4AVIReadContainer@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AVIReadContainer & cv::AVIReadContainer::operator=(class cv::AVIReadContainer const &)
??4AVIWriteContainer@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AVIWriteContainer & cv::AVIWriteContainer::operator=(class cv::AVIWriteContainer const &)
??4AbsLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::AbsLayer & cv::dnn::dnn4_v20211004::AbsLayer::operator=(class cv::dnn::dnn4_v20211004::AbsLayer &&)
??4AbsLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::AbsLayer & cv::dnn::dnn4_v20211004::AbsLayer::operator=(class cv::dnn::dnn4_v20211004::AbsLayer const &)
??4AccumLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::AccumLayer & cv::dnn::dnn4_v20211004::AccumLayer::operator=(class cv::dnn::dnn4_v20211004::AccumLayer &&)
??4AccumLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::AccumLayer & cv::dnn::dnn4_v20211004::AccumLayer::operator=(class cv::dnn::dnn4_v20211004::AccumLayer const &)
??4ActivationLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ActivationLayer & cv::dnn::dnn4_v20211004::ActivationLayer::operator=(class cv::dnn::dnn4_v20211004::ActivationLayer &&)
??4ActivationLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ActivationLayer & cv::dnn::dnn4_v20211004::ActivationLayer::operator=(class cv::dnn::dnn4_v20211004::ActivationLayer const &)
??4ActivationLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ActivationLayerInt8 & cv::dnn::dnn4_v20211004::ActivationLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ActivationLayerInt8 &&)
??4ActivationLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ActivationLayerInt8 & cv::dnn::dnn4_v20211004::ActivationLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ActivationLayerInt8 const &)
??4AffineBasedEstimator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::AffineBasedEstimator & cv::detail::AffineBasedEstimator::operator=(class cv::detail::AffineBasedEstimator &&)
??4AffineBasedEstimator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::AffineBasedEstimator & cv::detail::AffineBasedEstimator::operator=(class cv::detail::AffineBasedEstimator const &)
??4AffineBestOf2NearestMatcher@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::AffineBestOf2NearestMatcher & cv::detail::AffineBestOf2NearestMatcher::operator=(class cv::detail::AffineBestOf2NearestMatcher &&)
??4AffineBestOf2NearestMatcher@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::AffineBestOf2NearestMatcher & cv::detail::AffineBestOf2NearestMatcher::operator=(class cv::detail::AffineBestOf2NearestMatcher const &)
??4AffineFeature@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AffineFeature & cv::AffineFeature::operator=(class cv::AffineFeature &&)
??4AffineFeature@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AffineFeature & cv::AffineFeature::operator=(class cv::AffineFeature const &)
??4AffineWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AffineWarper & cv::AffineWarper::operator=(class cv::AffineWarper &&)
??4AffineWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AffineWarper & cv::AffineWarper::operator=(class cv::AffineWarper const &)
??4AffineWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::AffineWarper & cv::detail::AffineWarper::operator=(class cv::detail::AffineWarper &&)
??4AffineWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::AffineWarper & cv::detail::AffineWarper::operator=(class cv::detail::AffineWarper const &)
??4AgastFeatureDetector@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AgastFeatureDetector & cv::AgastFeatureDetector::operator=(class cv::AgastFeatureDetector &&)
??4AgastFeatureDetector@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AgastFeatureDetector & cv::AgastFeatureDetector::operator=(class cv::AgastFeatureDetector const &)
??4Algorithm@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Algorithm & cv::Algorithm::operator=(class cv::Algorithm const &)
??4AlignExposures@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AlignExposures & cv::AlignExposures::operator=(class cv::AlignExposures &&)
??4AlignExposures@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AlignExposures & cv::AlignExposures::operator=(class cv::AlignExposures const &)
??4AlignMTB@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AlignMTB & cv::AlignMTB::operator=(class cv::AlignMTB &&)
??4AlignMTB@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AlignMTB & cv::AlignMTB::operator=(class cv::AlignMTB const &)
??4Allocator@GpuMat@cuda@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::cuda::GpuMat::Allocator & cv::cuda::GpuMat::Allocator::operator=(class cv::cuda::GpuMat::Allocator const &)
??4Arrays@ogl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ogl::Arrays & cv::ogl::Arrays::operator=(class cv::ogl::Arrays &&)
??4Arrays@ogl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ogl::Arrays & cv::ogl::Arrays::operator=(class cv::ogl::Arrays const &)
??4AsyncArray@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AsyncArray & cv::AsyncArray::operator=(class cv::AsyncArray &&)
??4AsyncArray@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AsyncArray & cv::AsyncArray::operator=(class cv::AsyncArray const &)
??4AsyncPromise@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::AsyncPromise & cv::AsyncPromise::operator=(class cv::AsyncPromise &&)
??4AsyncPromise@cv@@QEAAAEAV01@AEBV01@@Z;class cv::AsyncPromise & cv::AsyncPromise::operator=(class cv::AsyncPromise const &)
??4BFMatcher@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BFMatcher & cv::BFMatcher::operator=(class cv::BFMatcher const &)
??4BNLLLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::BNLLLayer & cv::dnn::dnn4_v20211004::BNLLLayer::operator=(class cv::dnn::dnn4_v20211004::BNLLLayer &&)
??4BNLLLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::BNLLLayer & cv::dnn::dnn4_v20211004::BNLLLayer::operator=(class cv::dnn::dnn4_v20211004::BNLLLayer const &)
??4BOWImgDescriptorExtractor@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BOWImgDescriptorExtractor & cv::BOWImgDescriptorExtractor::operator=(class cv::BOWImgDescriptorExtractor const &)
??4BOWKMeansTrainer@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BOWKMeansTrainer & cv::BOWKMeansTrainer::operator=(class cv::BOWKMeansTrainer const &)
??4BOWTrainer@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BOWTrainer & cv::BOWTrainer::operator=(class cv::BOWTrainer const &)
??4BRISK@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::BRISK & cv::BRISK::operator=(class cv::BRISK &&)
??4BRISK@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BRISK & cv::BRISK::operator=(class cv::BRISK const &)
??4BackgroundSubtractor@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::BackgroundSubtractor & cv::BackgroundSubtractor::operator=(class cv::BackgroundSubtractor &&)
??4BackgroundSubtractor@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BackgroundSubtractor & cv::BackgroundSubtractor::operator=(class cv::BackgroundSubtractor const &)
??4BackgroundSubtractorKNN@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::BackgroundSubtractorKNN & cv::BackgroundSubtractorKNN::operator=(class cv::BackgroundSubtractorKNN &&)
??4BackgroundSubtractorKNN@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BackgroundSubtractorKNN & cv::BackgroundSubtractorKNN::operator=(class cv::BackgroundSubtractorKNN const &)
??4BackgroundSubtractorMOG2@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::BackgroundSubtractorMOG2 & cv::BackgroundSubtractorMOG2::operator=(class cv::BackgroundSubtractorMOG2 &&)
??4BackgroundSubtractorMOG2@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BackgroundSubtractorMOG2 & cv::BackgroundSubtractorMOG2::operator=(class cv::BackgroundSubtractorMOG2 const &)
??4BaseCascadeClassifier@cv@@QEAAAEAV01@AEBV01@@Z;class cv::BaseCascadeClassifier & cv::BaseCascadeClassifier::operator=(class cv::BaseCascadeClassifier const &)
??4BaseConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::BaseConvolutionLayer & cv::dnn::dnn4_v20211004::BaseConvolutionLayer::operator=(class cv::dnn::dnn4_v20211004::BaseConvolutionLayer &&)
??4BaseConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::BaseConvolutionLayer & cv::dnn::dnn4_v20211004::BaseConvolutionLayer::operator=(class cv::dnn::dnn4_v20211004::BaseConvolutionLayer const &)
??4BatchNormLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::BatchNormLayer & cv::dnn::dnn4_v20211004::BatchNormLayer::operator=(class cv::dnn::dnn4_v20211004::BatchNormLayer &&)
??4BatchNormLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::BatchNormLayer & cv::dnn::dnn4_v20211004::BatchNormLayer::operator=(class cv::dnn::dnn4_v20211004::BatchNormLayer const &)
??4BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::BatchNormLayerInt8 & cv::dnn::dnn4_v20211004::BatchNormLayerInt8::operator=(class cv::dnn::dnn4_v20211004::BatchNormLayerInt8 &&)
??4BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::BatchNormLayerInt8 & cv::dnn::dnn4_v20211004::BatchNormLayerInt8::operator=(class cv::dnn::dnn4_v20211004::BatchNormLayerInt8 const &)
??4BestOf2NearestMatcher@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BestOf2NearestMatcher & cv::detail::BestOf2NearestMatcher::operator=(class cv::detail::BestOf2NearestMatcher &&)
??4BestOf2NearestMatcher@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BestOf2NearestMatcher & cv::detail::BestOf2NearestMatcher::operator=(class cv::detail::BestOf2NearestMatcher const &)
??4BestOf2NearestRangeMatcher@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BestOf2NearestRangeMatcher & cv::detail::BestOf2NearestRangeMatcher::operator=(class cv::detail::BestOf2NearestRangeMatcher &&)
??4BestOf2NearestRangeMatcher@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BestOf2NearestRangeMatcher & cv::detail::BestOf2NearestRangeMatcher::operator=(class cv::detail::BestOf2NearestRangeMatcher const &)
??4BlankLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::BlankLayer & cv::dnn::dnn4_v20211004::BlankLayer::operator=(class cv::dnn::dnn4_v20211004::BlankLayer &&)
??4BlankLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::BlankLayer & cv::dnn::dnn4_v20211004::BlankLayer::operator=(class cv::dnn::dnn4_v20211004::BlankLayer const &)
??4Blender@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::Blender & cv::detail::Blender::operator=(class cv::detail::Blender const &)
??4BlocksChannelsCompensator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BlocksChannelsCompensator & cv::detail::BlocksChannelsCompensator::operator=(class cv::detail::BlocksChannelsCompensator &&)
??4BlocksChannelsCompensator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BlocksChannelsCompensator & cv::detail::BlocksChannelsCompensator::operator=(class cv::detail::BlocksChannelsCompensator const &)
??4BlocksCompensator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BlocksCompensator & cv::detail::BlocksCompensator::operator=(class cv::detail::BlocksCompensator &&)
??4BlocksCompensator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BlocksCompensator & cv::detail::BlocksCompensator::operator=(class cv::detail::BlocksCompensator const &)
??4BlocksGainCompensator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BlocksGainCompensator & cv::detail::BlocksGainCompensator::operator=(class cv::detail::BlocksGainCompensator &&)
??4BlocksGainCompensator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BlocksGainCompensator & cv::detail::BlocksGainCompensator::operator=(class cv::detail::BlocksGainCompensator const &)
??4Boost@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::Boost & cv::ml::Boost::operator=(class cv::ml::Boost &&)
??4Boost@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::Boost & cv::ml::Boost::operator=(class cv::ml::Boost const &)
??4Buffer@fluid@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::fluid::Buffer & cv::gapi::fluid::Buffer::operator=(class cv::gapi::fluid::Buffer &&)
??4Buffer@ogl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ogl::Buffer & cv::ogl::Buffer::operator=(class cv::ogl::Buffer &&)
??4Buffer@ogl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ogl::Buffer & cv::ogl::Buffer::operator=(class cv::ogl::Buffer const &)
??4BufferPool@cuda@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::cuda::BufferPool & cv::cuda::BufferPool::operator=(class cv::cuda::BufferPool &&)
??4BufferPool@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::BufferPool & cv::cuda::BufferPool::operator=(class cv::cuda::BufferPool const &)
??4BundleAdjusterAffine@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BundleAdjusterAffine & cv::detail::BundleAdjusterAffine::operator=(class cv::detail::BundleAdjusterAffine &&)
??4BundleAdjusterAffine@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BundleAdjusterAffine & cv::detail::BundleAdjusterAffine::operator=(class cv::detail::BundleAdjusterAffine const &)
??4BundleAdjusterAffinePartial@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BundleAdjusterAffinePartial & cv::detail::BundleAdjusterAffinePartial::operator=(class cv::detail::BundleAdjusterAffinePartial &&)
??4BundleAdjusterAffinePartial@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BundleAdjusterAffinePartial & cv::detail::BundleAdjusterAffinePartial::operator=(class cv::detail::BundleAdjusterAffinePartial const &)
??4BundleAdjusterBase@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BundleAdjusterBase & cv::detail::BundleAdjusterBase::operator=(class cv::detail::BundleAdjusterBase &&)
??4BundleAdjusterBase@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BundleAdjusterBase & cv::detail::BundleAdjusterBase::operator=(class cv::detail::BundleAdjusterBase const &)
??4BundleAdjusterRay@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BundleAdjusterRay & cv::detail::BundleAdjusterRay::operator=(class cv::detail::BundleAdjusterRay &&)
??4BundleAdjusterRay@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BundleAdjusterRay & cv::detail::BundleAdjusterRay::operator=(class cv::detail::BundleAdjusterRay const &)
??4BundleAdjusterReproj@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::BundleAdjusterReproj & cv::detail::BundleAdjusterReproj::operator=(class cv::detail::BundleAdjusterReproj &&)
??4BundleAdjusterReproj@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::BundleAdjusterReproj & cv::detail::BundleAdjusterReproj::operator=(class cv::detail::BundleAdjusterReproj const &)
??4ByteMemoryOutStream@s11n@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::s11n::ByteMemoryOutStream & cv::gapi::s11n::ByteMemoryOutStream::operator=(class cv::gapi::s11n::ByteMemoryOutStream &&)
??4ByteMemoryOutStream@s11n@gapi@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::gapi::s11n::ByteMemoryOutStream & cv::gapi::s11n::ByteMemoryOutStream::operator=(class cv::gapi::s11n::ByteMemoryOutStream const &)
??4CLAHE@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::CLAHE & cv::CLAHE::operator=(class cv::CLAHE &&)
??4CLAHE@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CLAHE & cv::CLAHE::operator=(class cv::CLAHE const &)
??4CalibrateCRF@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::CalibrateCRF & cv::CalibrateCRF::operator=(class cv::CalibrateCRF &&)
??4CalibrateCRF@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CalibrateCRF & cv::CalibrateCRF::operator=(class cv::CalibrateCRF const &)
??4CalibrateDebevec@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::CalibrateDebevec & cv::CalibrateDebevec::operator=(class cv::CalibrateDebevec &&)
??4CalibrateDebevec@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CalibrateDebevec & cv::CalibrateDebevec::operator=(class cv::CalibrateDebevec const &)
??4CalibrateRobertson@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::CalibrateRobertson & cv::CalibrateRobertson::operator=(class cv::CalibrateRobertson &&)
??4CalibrateRobertson@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CalibrateRobertson & cv::CalibrateRobertson::operator=(class cv::CalibrateRobertson const &)
??4Callback@LMSolver@cv@@QEAAAEAV012@AEBV012@@Z;class cv::LMSolver::Callback & cv::LMSolver::Callback::operator=(class cv::LMSolver::Callback const &)
??4Callback@PointSetRegistrator@cv@@QEAAAEAV012@AEBV012@@Z;class cv::PointSetRegistrator::Callback & cv::PointSetRegistrator::Callback::operator=(class cv::PointSetRegistrator::Callback const &)
??4CameraParams@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::CameraParams & cv::detail::CameraParams::operator=(struct cv::detail::CameraParams const &)
??4CascadeClassifier@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CascadeClassifier & cv::CascadeClassifier::operator=(class cv::CascadeClassifier const &)
??4Center@SimpleBlobDetectorImpl@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::SimpleBlobDetectorImpl::Center & cv::SimpleBlobDetectorImpl::Center::operator=(struct cv::SimpleBlobDetectorImpl::Center &&)
??4Center@SimpleBlobDetectorImpl@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::SimpleBlobDetectorImpl::Center & cv::SimpleBlobDetectorImpl::Center::operator=(struct cv::SimpleBlobDetectorImpl::Center const &)
??4CfgParam@onevpl@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::onevpl::CfgParam & cv::gapi::wip::onevpl::CfgParam::operator=(struct cv::gapi::wip::onevpl::CfgParam &&)
??4CfgParam@onevpl@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::onevpl::CfgParam & cv::gapi::wip::onevpl::CfgParam::operator=(struct cv::gapi::wip::onevpl::CfgParam const &)
??4ChannelsCompensator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::ChannelsCompensator & cv::detail::ChannelsCompensator::operator=(class cv::detail::ChannelsCompensator &&)
??4ChannelsCompensator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::ChannelsCompensator & cv::detail::ChannelsCompensator::operator=(class cv::detail::ChannelsCompensator const &)
??4ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ChannelsPReLULayer & cv::dnn::dnn4_v20211004::ChannelsPReLULayer::operator=(class cv::dnn::dnn4_v20211004::ChannelsPReLULayer &&)
??4ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ChannelsPReLULayer & cv::dnn::dnn4_v20211004::ChannelsPReLULayer::operator=(class cv::dnn::dnn4_v20211004::ChannelsPReLULayer const &)
??4Circle@draw@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::draw::Circle & cv::gapi::wip::draw::Circle::operator=(struct cv::gapi::wip::draw::Circle &&)
??4Circle@draw@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::draw::Circle & cv::gapi::wip::draw::Circle::operator=(struct cv::gapi::wip::draw::Circle const &)
??4CirclesGridFinderParameters@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::CirclesGridFinderParameters & cv::CirclesGridFinderParameters::operator=(struct cv::CirclesGridFinderParameters &&)
??4CirclesGridFinderParameters@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::CirclesGridFinderParameters & cv::CirclesGridFinderParameters::operator=(struct cv::CirclesGridFinderParameters const &)
??4ClassificationModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ClassificationModel & cv::dnn::dnn4_v20211004::ClassificationModel::operator=(class cv::dnn::dnn4_v20211004::ClassificationModel &&)
??4ClassificationModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ClassificationModel & cv::dnn::dnn4_v20211004::ClassificationModel::operator=(class cv::dnn::dnn4_v20211004::ClassificationModel const &)
??4ClfMilBoost@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::ClfMilBoost & cv::detail::tracking::ClfMilBoost::operator=(class cv::detail::tracking::ClfMilBoost const &)
??4CommandLineParser@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CommandLineParser & cv::CommandLineParser::operator=(class cv::CommandLineParser const &)
??4CompressedRectilinearPortraitProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::CompressedRectilinearPortraitProjector & cv::detail::CompressedRectilinearPortraitProjector::operator=(struct cv::detail::CompressedRectilinearPortraitProjector &&)
??4CompressedRectilinearPortraitProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::CompressedRectilinearPortraitProjector & cv::detail::CompressedRectilinearPortraitProjector::operator=(struct cv::detail::CompressedRectilinearPortraitProjector const &)
??4CompressedRectilinearPortraitWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::CompressedRectilinearPortraitWarper & cv::CompressedRectilinearPortraitWarper::operator=(class cv::CompressedRectilinearPortraitWarper &&)
??4CompressedRectilinearPortraitWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CompressedRectilinearPortraitWarper & cv::CompressedRectilinearPortraitWarper::operator=(class cv::CompressedRectilinearPortraitWarper const &)
??4CompressedRectilinearPortraitWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::CompressedRectilinearPortraitWarper & cv::detail::CompressedRectilinearPortraitWarper::operator=(class cv::detail::CompressedRectilinearPortraitWarper &&)
??4CompressedRectilinearPortraitWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::CompressedRectilinearPortraitWarper & cv::detail::CompressedRectilinearPortraitWarper::operator=(class cv::detail::CompressedRectilinearPortraitWarper const &)
??4CompressedRectilinearProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::CompressedRectilinearProjector & cv::detail::CompressedRectilinearProjector::operator=(struct cv::detail::CompressedRectilinearProjector &&)
??4CompressedRectilinearProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::CompressedRectilinearProjector & cv::detail::CompressedRectilinearProjector::operator=(struct cv::detail::CompressedRectilinearProjector const &)
??4CompressedRectilinearWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::CompressedRectilinearWarper & cv::CompressedRectilinearWarper::operator=(class cv::CompressedRectilinearWarper &&)
??4CompressedRectilinearWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CompressedRectilinearWarper & cv::CompressedRectilinearWarper::operator=(class cv::CompressedRectilinearWarper const &)
??4CompressedRectilinearWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::CompressedRectilinearWarper & cv::detail::CompressedRectilinearWarper::operator=(class cv::detail::CompressedRectilinearWarper &&)
??4CompressedRectilinearWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::CompressedRectilinearWarper & cv::detail::CompressedRectilinearWarper::operator=(class cv::detail::CompressedRectilinearWarper const &)
??4ConcatLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ConcatLayer & cv::dnn::dnn4_v20211004::ConcatLayer::operator=(class cv::dnn::dnn4_v20211004::ConcatLayer &&)
??4ConcatLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ConcatLayer & cv::dnn::dnn4_v20211004::ConcatLayer::operator=(class cv::dnn::dnn4_v20211004::ConcatLayer const &)
??4ConjGradSolver@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::ConjGradSolver & cv::ConjGradSolver::operator=(class cv::ConjGradSolver &&)
??4ConjGradSolver@cv@@QEAAAEAV01@AEBV01@@Z;class cv::ConjGradSolver & cv::ConjGradSolver::operator=(class cv::ConjGradSolver const &)
??4ConstLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ConstLayer & cv::dnn::dnn4_v20211004::ConstLayer::operator=(class cv::dnn::dnn4_v20211004::ConstLayer &&)
??4ConstLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ConstLayer & cv::dnn::dnn4_v20211004::ConstLayer::operator=(class cv::dnn::dnn4_v20211004::ConstLayer const &)
??4Context@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::Context & cv::ocl::Context::operator=(class cv::ocl::Context &&)
??4Context@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::Context & cv::ocl::Context::operator=(class cv::ocl::Context const &)
??4ConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ConvolutionLayer & cv::dnn::dnn4_v20211004::ConvolutionLayer::operator=(class cv::dnn::dnn4_v20211004::ConvolutionLayer &&)
??4ConvolutionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ConvolutionLayer & cv::dnn::dnn4_v20211004::ConvolutionLayer::operator=(class cv::dnn::dnn4_v20211004::ConvolutionLayer const &)
??4ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ConvolutionLayerInt8 & cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ConvolutionLayerInt8 &&)
??4ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ConvolutionLayerInt8 & cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ConvolutionLayerInt8 const &)
??4CorrelationLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::CorrelationLayer & cv::dnn::dnn4_v20211004::CorrelationLayer::operator=(class cv::dnn::dnn4_v20211004::CorrelationLayer &&)
??4CorrelationLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::CorrelationLayer & cv::dnn::dnn4_v20211004::CorrelationLayer::operator=(class cv::dnn::dnn4_v20211004::CorrelationLayer const &)
??4CropAndResizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::CropAndResizeLayer & cv::dnn::dnn4_v20211004::CropAndResizeLayer::operator=(class cv::dnn::dnn4_v20211004::CropAndResizeLayer &&)
??4CropAndResizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::CropAndResizeLayer & cv::dnn::dnn4_v20211004::CropAndResizeLayer::operator=(class cv::dnn::dnn4_v20211004::CropAndResizeLayer const &)
??4CropLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::CropLayer & cv::dnn::dnn4_v20211004::CropLayer::operator=(class cv::dnn::dnn4_v20211004::CropLayer &&)
??4CropLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::CropLayer & cv::dnn::dnn4_v20211004::CropLayer::operator=(class cv::dnn::dnn4_v20211004::CropLayer const &)
??4CumSumLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::CumSumLayer & cv::dnn::dnn4_v20211004::CumSumLayer::operator=(class cv::dnn::dnn4_v20211004::CumSumLayer &&)
??4CumSumLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::CumSumLayer & cv::dnn::dnn4_v20211004::CumSumLayer::operator=(class cv::dnn::dnn4_v20211004::CumSumLayer const &)
??4CvLevMarq@@QEAAAEAV0@AEBV0@@Z;class CvLevMarq & CvLevMarq::operator=(class CvLevMarq const &)
??4CylindricalPortraitProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::CylindricalPortraitProjector & cv::detail::CylindricalPortraitProjector::operator=(struct cv::detail::CylindricalPortraitProjector &&)
??4CylindricalPortraitProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::CylindricalPortraitProjector & cv::detail::CylindricalPortraitProjector::operator=(struct cv::detail::CylindricalPortraitProjector const &)
??4CylindricalPortraitWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::CylindricalPortraitWarper & cv::detail::CylindricalPortraitWarper::operator=(class cv::detail::CylindricalPortraitWarper &&)
??4CylindricalPortraitWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::CylindricalPortraitWarper & cv::detail::CylindricalPortraitWarper::operator=(class cv::detail::CylindricalPortraitWarper const &)
??4CylindricalProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::CylindricalProjector & cv::detail::CylindricalProjector::operator=(struct cv::detail::CylindricalProjector &&)
??4CylindricalProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::CylindricalProjector & cv::detail::CylindricalProjector::operator=(struct cv::detail::CylindricalProjector const &)
??4CylindricalWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::CylindricalWarper & cv::CylindricalWarper::operator=(class cv::CylindricalWarper &&)
??4CylindricalWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::CylindricalWarper & cv::CylindricalWarper::operator=(class cv::CylindricalWarper const &)
??4CylindricalWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::CylindricalWarper & cv::detail::CylindricalWarper::operator=(class cv::detail::CylindricalWarper &&)
??4CylindricalWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::CylindricalWarper & cv::detail::CylindricalWarper::operator=(class cv::detail::CylindricalWarper const &)
??4CylindricalWarperGpu@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::CylindricalWarperGpu & cv::detail::CylindricalWarperGpu::operator=(class cv::detail::CylindricalWarperGpu &&)
??4CylindricalWarperGpu@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::CylindricalWarperGpu & cv::detail::CylindricalWarperGpu::operator=(class cv::detail::CylindricalWarperGpu const &)
??4DCT2D@hal@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::hal::DCT2D & cv::hal::DCT2D::operator=(struct cv::hal::DCT2D const &)
??4DFT1D@hal@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::hal::DFT1D & cv::hal::DFT1D::operator=(struct cv::hal::DFT1D const &)
??4DFT2D@hal@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::hal::DFT2D & cv::hal::DFT2D::operator=(struct cv::hal::DFT2D const &)
??4DISOpticalFlow@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::DISOpticalFlow & cv::DISOpticalFlow::operator=(class cv::DISOpticalFlow &&)
??4DISOpticalFlow@cv@@QEAAAEAV01@AEBV01@@Z;class cv::DISOpticalFlow & cv::DISOpticalFlow::operator=(class cv::DISOpticalFlow const &)
??4DMatch@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::DMatch & cv::DMatch::operator=(class cv::DMatch &&)
??4DMatch@cv@@QEAAAEAV01@AEBV01@@Z;class cv::DMatch & cv::DMatch::operator=(class cv::DMatch const &)
??4DTrees@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::DTrees & cv::ml::DTrees::operator=(class cv::ml::DTrees &&)
??4DTrees@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::DTrees & cv::ml::DTrees::operator=(class cv::ml::DTrees const &)
??4Data@wip@gapi@cv@@QEAAAEAU0123@$$QEAU0123@@Z;struct cv::gapi::wip::Data & cv::gapi::wip::Data::operator=(struct cv::gapi::wip::Data &&)
??4Data@wip@gapi@cv@@QEAAAEAU0123@AEBU0123@@Z;struct cv::gapi::wip::Data & cv::gapi::wip::Data::operator=(struct cv::gapi::wip::Data const &)
??4DataAugmentationLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::DataAugmentationLayer & cv::dnn::dnn4_v20211004::DataAugmentationLayer::operator=(class cv::dnn::dnn4_v20211004::DataAugmentationLayer &&)
??4DataAugmentationLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::DataAugmentationLayer & cv::dnn::dnn4_v20211004::DataAugmentationLayer::operator=(class cv::dnn::dnn4_v20211004::DataAugmentationLayer const &)
??4DataProviderException@onevpl@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::onevpl::DataProviderException & cv::gapi::wip::onevpl::DataProviderException::operator=(struct cv::gapi::wip::onevpl::DataProviderException const &)
??4DataProviderSystemErrorException@onevpl@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::onevpl::DataProviderSystemErrorException & cv::gapi::wip::onevpl::DataProviderSystemErrorException::operator=(struct cv::gapi::wip::onevpl::DataProviderSystemErrorException const &)
??4DeconvolutionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::DeconvolutionLayer & cv::dnn::dnn4_v20211004::DeconvolutionLayer::operator=(class cv::dnn::dnn4_v20211004::DeconvolutionLayer &&)
??4DeconvolutionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::DeconvolutionLayer & cv::dnn::dnn4_v20211004::DeconvolutionLayer::operator=(class cv::dnn::dnn4_v20211004::DeconvolutionLayer const &)
??4DenseOpticalFlow@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::DenseOpticalFlow & cv::DenseOpticalFlow::operator=(class cv::DenseOpticalFlow &&)
??4DenseOpticalFlow@cv@@QEAAAEAV01@AEBV01@@Z;class cv::DenseOpticalFlow & cv::DenseOpticalFlow::operator=(class cv::DenseOpticalFlow const &)
??4DequantizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::DequantizeLayer & cv::dnn::dnn4_v20211004::DequantizeLayer::operator=(class cv::dnn::dnn4_v20211004::DequantizeLayer &&)
??4DequantizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::DequantizeLayer & cv::dnn::dnn4_v20211004::DequantizeLayer::operator=(class cv::dnn::dnn4_v20211004::DequantizeLayer const &)
??4DescriptorCollection@DescriptorMatcher@cv@@QEAAAEAV012@AEBV012@@Z;class cv::DescriptorMatcher::DescriptorCollection & cv::DescriptorMatcher::DescriptorCollection::operator=(class cv::DescriptorMatcher::DescriptorCollection const &)
??4DescriptorMatcher@cv@@QEAAAEAV01@AEBV01@@Z;class cv::DescriptorMatcher & cv::DescriptorMatcher::operator=(class cv::DescriptorMatcher const &)
??4DetectionBasedTracker@cv@@QEAAAEAV01@AEBV01@@Z;class cv::DetectionBasedTracker & cv::DetectionBasedTracker::operator=(class cv::DetectionBasedTracker const &)
??4DetectionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::DetectionModel & cv::dnn::dnn4_v20211004::DetectionModel::operator=(class cv::dnn::dnn4_v20211004::DetectionModel &&)
??4DetectionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::DetectionModel & cv::dnn::dnn4_v20211004::DetectionModel::operator=(class cv::dnn::dnn4_v20211004::DetectionModel const &)
??4DetectionOutputLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::DetectionOutputLayer & cv::dnn::dnn4_v20211004::DetectionOutputLayer::operator=(class cv::dnn::dnn4_v20211004::DetectionOutputLayer &&)
??4DetectionOutputLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::DetectionOutputLayer & cv::dnn::dnn4_v20211004::DetectionOutputLayer::operator=(class cv::dnn::dnn4_v20211004::DetectionOutputLayer const &)
??4Device@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::Device & cv::ocl::Device::operator=(class cv::ocl::Device &&)
??4Device@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::Device & cv::ocl::Device::operator=(class cv::ocl::Device const &)
??4DeviceInfo@cuda@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::cuda::DeviceInfo & cv::cuda::DeviceInfo::operator=(class cv::cuda::DeviceInfo &&)
??4DeviceInfo@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::DeviceInfo & cv::cuda::DeviceInfo::operator=(class cv::cuda::DeviceInfo const &)
??4Dict@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::Dict & cv::dnn::dnn4_v20211004::Dict::operator=(class cv::dnn::dnn4_v20211004::Dict &&)
??4Dict@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::Dict & cv::dnn::dnn4_v20211004::Dict::operator=(class cv::dnn::dnn4_v20211004::Dict const &)
??4DictValue@dnn4_v20211004@dnn@cv@@QEAAAEAU0123@AEBU0123@@Z;struct cv::dnn::dnn4_v20211004::DictValue & cv::dnn::dnn4_v20211004::DictValue::operator=(struct cv::dnn::dnn4_v20211004::DictValue const &)
??4DisjointSets@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::DisjointSets & cv::detail::DisjointSets::operator=(class cv::detail::DisjointSets &&)
??4DisjointSets@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::DisjointSets & cv::detail::DisjointSets::operator=(class cv::detail::DisjointSets const &)
??4DownhillSolver@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::DownhillSolver & cv::DownhillSolver::operator=(class cv::DownhillSolver &&)
??4DownhillSolver@cv@@QEAAAEAV01@AEBV01@@Z;class cv::DownhillSolver & cv::DownhillSolver::operator=(class cv::DownhillSolver const &)
??4DpSeamFinder@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::DpSeamFinder & cv::detail::DpSeamFinder::operator=(class cv::detail::DpSeamFinder &&)
??4DpSeamFinder@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::DpSeamFinder & cv::detail::DpSeamFinder::operator=(class cv::detail::DpSeamFinder const &)
??4ELULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ELULayer & cv::dnn::dnn4_v20211004::ELULayer::operator=(class cv::dnn::dnn4_v20211004::ELULayer &&)
??4ELULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ELULayer & cv::dnn::dnn4_v20211004::ELULayer::operator=(class cv::dnn::dnn4_v20211004::ELULayer const &)
??4EM@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::EM & cv::ml::EM::operator=(class cv::ml::EM &&)
??4EM@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::EM & cv::ml::EM::operator=(class cv::ml::EM const &)
??4EMImpl@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::EMImpl & cv::ml::EMImpl::operator=(class cv::ml::EMImpl const &)
??4EltwiseLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::EltwiseLayer & cv::dnn::dnn4_v20211004::EltwiseLayer::operator=(class cv::dnn::dnn4_v20211004::EltwiseLayer &&)
??4EltwiseLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::EltwiseLayer & cv::dnn::dnn4_v20211004::EltwiseLayer::operator=(class cv::dnn::dnn4_v20211004::EltwiseLayer const &)
??4EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::EltwiseLayerInt8 & cv::dnn::dnn4_v20211004::EltwiseLayerInt8::operator=(class cv::dnn::dnn4_v20211004::EltwiseLayerInt8 &&)
??4EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::EltwiseLayerInt8 & cv::dnn::dnn4_v20211004::EltwiseLayerInt8::operator=(class cv::dnn::dnn4_v20211004::EltwiseLayerInt8 const &)
??4Estimator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::Estimator & cv::detail::Estimator::operator=(class cv::detail::Estimator const &)
??4Event@cuda@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::cuda::Event & cv::cuda::Event::operator=(class cv::cuda::Event &&)
??4Event@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::Event & cv::cuda::Event::operator=(class cv::cuda::Event const &)
??4Exception@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Exception & cv::Exception::operator=(class cv::Exception const &)
??4ExpLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ExpLayer & cv::dnn::dnn4_v20211004::ExpLayer::operator=(class cv::dnn::dnn4_v20211004::ExpLayer &&)
??4ExpLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ExpLayer & cv::dnn::dnn4_v20211004::ExpLayer::operator=(class cv::dnn::dnn4_v20211004::ExpLayer const &)
??4ExposureCompensator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::ExposureCompensator & cv::detail::ExposureCompensator::operator=(class cv::detail::ExposureCompensator const &)
??4FTTextRender@draw@wip@gapi@cv@@QEAAAEAV01234@$$QEAV01234@@Z;class cv::gapi::wip::draw::FTTextRender & cv::gapi::wip::draw::FTTextRender::operator=(class cv::gapi::wip::draw::FTTextRender &&)
??4FTTextRender@draw@wip@gapi@cv@@QEAAAEAV01234@AEBV01234@@Z;class cv::gapi::wip::draw::FTTextRender & cv::gapi::wip::draw::FTTextRender::operator=(class cv::gapi::wip::draw::FTTextRender const &)
??4FaceDetectorYN@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FaceDetectorYN & cv::FaceDetectorYN::operator=(class cv::FaceDetectorYN const &)
??4FaceRecognizerSF@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FaceRecognizerSF & cv::FaceRecognizerSF::operator=(class cv::FaceRecognizerSF const &)
??4FarnebackOpticalFlow@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::FarnebackOpticalFlow & cv::FarnebackOpticalFlow::operator=(class cv::FarnebackOpticalFlow &&)
??4FarnebackOpticalFlow@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FarnebackOpticalFlow & cv::FarnebackOpticalFlow::operator=(class cv::FarnebackOpticalFlow const &)
??4FastFeatureDetector@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::FastFeatureDetector & cv::FastFeatureDetector::operator=(class cv::FastFeatureDetector &&)
??4FastFeatureDetector@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FastFeatureDetector & cv::FastFeatureDetector::operator=(class cv::FastFeatureDetector const &)
??4FeatherBlender@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::FeatherBlender & cv::detail::FeatherBlender::operator=(class cv::detail::FeatherBlender &&)
??4FeatherBlender@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::FeatherBlender & cv::detail::FeatherBlender::operator=(class cv::detail::FeatherBlender const &)
??4Feature2D@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Feature2D & cv::Feature2D::operator=(class cv::Feature2D const &)
??4FeaturesMatcher@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::FeaturesMatcher & cv::detail::FeaturesMatcher::operator=(class cv::detail::FeaturesMatcher const &)
??4FileNode@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FileNode & cv::FileNode::operator=(class cv::FileNode const &)
??4FileNodeIterator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FileNodeIterator & cv::FileNodeIterator::operator=(class cv::FileNodeIterator const &)
??4FileStorage@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FileStorage & cv::FileStorage::operator=(class cv::FileStorage const &)
??4Filter2D@hal@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::hal::Filter2D & cv::hal::Filter2D::operator=(struct cv::hal::Filter2D const &)
??4FisheyeProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::FisheyeProjector & cv::detail::FisheyeProjector::operator=(struct cv::detail::FisheyeProjector &&)
??4FisheyeProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::FisheyeProjector & cv::detail::FisheyeProjector::operator=(struct cv::detail::FisheyeProjector const &)
??4FisheyeWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::FisheyeWarper & cv::FisheyeWarper::operator=(class cv::FisheyeWarper &&)
??4FisheyeWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FisheyeWarper & cv::FisheyeWarper::operator=(class cv::FisheyeWarper const &)
??4FisheyeWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::FisheyeWarper & cv::detail::FisheyeWarper::operator=(class cv::detail::FisheyeWarper &&)
??4FisheyeWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::FisheyeWarper & cv::detail::FisheyeWarper::operator=(class cv::detail::FisheyeWarper const &)
??4FlannBasedMatcher@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::FlannBasedMatcher & cv::FlannBasedMatcher::operator=(class cv::FlannBasedMatcher &&)
??4FlannBasedMatcher@cv@@QEAAAEAV01@AEBV01@@Z;class cv::FlannBasedMatcher & cv::FlannBasedMatcher::operator=(class cv::FlannBasedMatcher const &)
??4FlattenLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::FlattenLayer & cv::dnn::dnn4_v20211004::FlattenLayer::operator=(class cv::dnn::dnn4_v20211004::FlattenLayer &&)
??4FlattenLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::FlattenLayer & cv::dnn::dnn4_v20211004::FlattenLayer::operator=(class cv::dnn::dnn4_v20211004::FlattenLayer const &)
??4FlowWarpLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::FlowWarpLayer & cv::dnn::dnn4_v20211004::FlowWarpLayer::operator=(class cv::dnn::dnn4_v20211004::FlowWarpLayer &&)
??4FlowWarpLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::FlowWarpLayer & cv::dnn::dnn4_v20211004::FlowWarpLayer::operator=(class cv::dnn::dnn4_v20211004::FlowWarpLayer const &)
??4Formatted@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Formatted & cv::Formatted::operator=(class cv::Formatted const &)
??4Formatter@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Formatter & cv::Formatter::operator=(class cv::Formatter const &)
??4Function@MinProblemSolver@cv@@QEAAAEAV012@AEBV012@@Z;class cv::MinProblemSolver::Function & cv::MinProblemSolver::Function::operator=(class cv::MinProblemSolver::Function const &)
??4GArg@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GArg & cv::GArg::operator=(class cv::GArg &&)
??4GArg@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GArg & cv::GArg::operator=(class cv::GArg const &)
??4GArrayDesc@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GArrayDesc & cv::GArrayDesc::operator=(struct cv::GArrayDesc &&)
??4GArrayDesc@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GArrayDesc & cv::GArrayDesc::operator=(struct cv::GArrayDesc const &)
??4GArrayU@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::GArrayU & cv::detail::GArrayU::operator=(class cv::detail::GArrayU &&)
??4GArrayU@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::GArrayU & cv::detail::GArrayU::operator=(class cv::detail::GArrayU const &)
??4GAsyncCanceled@wip@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::wip::GAsyncCanceled & cv::gapi::wip::GAsyncCanceled::operator=(class cv::gapi::wip::GAsyncCanceled &&)
??4GAsyncCanceled@wip@gapi@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::gapi::wip::GAsyncCanceled & cv::gapi::wip::GAsyncCanceled::operator=(class cv::gapi::wip::GAsyncCanceled const &)
??4GBackend@gapi@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::gapi::GBackend & cv::gapi::GBackend::operator=(class cv::gapi::GBackend &&)
??4GBackend@gapi@cv@@QEAAAEAV012@AEBV012@@Z;class cv::gapi::GBackend & cv::gapi::GBackend::operator=(class cv::gapi::GBackend const &)
??4GCPUContext@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GCPUContext & cv::GCPUContext::operator=(class cv::GCPUContext &&)
??4GCPUContext@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GCPUContext & cv::GCPUContext::operator=(class cv::GCPUContext const &)
??4GCPUKernel@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GCPUKernel & cv::GCPUKernel::operator=(class cv::GCPUKernel &&)
??4GCPUKernel@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GCPUKernel & cv::GCPUKernel::operator=(class cv::GCPUKernel const &)
??4GCall@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GCall & cv::GCall::operator=(class cv::GCall const &)
??4GCompiled@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GCompiled & cv::GCompiled::operator=(class cv::GCompiled &&)
??4GCompiled@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GCompiled & cv::GCompiled::operator=(class cv::GCompiled const &)
??4GCompoundKernel@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::GCompoundKernel & cv::detail::GCompoundKernel::operator=(class cv::detail::GCompoundKernel &&)
??4GCompoundKernel@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::GCompoundKernel & cv::detail::GCompoundKernel::operator=(class cv::detail::GCompoundKernel const &)
??4GComputation@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GComputation & cv::GComputation::operator=(class cv::GComputation &&)
??4GComputation@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GComputation & cv::GComputation::operator=(class cv::GComputation const &)
??4GFTTDetector@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GFTTDetector & cv::GFTTDetector::operator=(class cv::GFTTDetector &&)
??4GFTTDetector@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GFTTDetector & cv::GFTTDetector::operator=(class cv::GFTTDetector const &)
??4GFrame@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GFrame & cv::GFrame::operator=(class cv::GFrame &&)
??4GFrame@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GFrame & cv::GFrame::operator=(class cv::GFrame const &)
??4GFrameDesc@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GFrameDesc & cv::GFrameDesc::operator=(struct cv::GFrameDesc &&)
??4GFrameDesc@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GFrameDesc & cv::GFrameDesc::operator=(struct cv::GFrameDesc const &)
??4GIsland@gimpl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::gimpl::GIsland & cv::gimpl::GIsland::operator=(class cv::gimpl::GIsland &&)
??4GIsland@gimpl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::gimpl::GIsland & cv::gimpl::GIsland::operator=(class cv::gimpl::GIsland const &)
??4GIslandExecutable@gimpl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::gimpl::GIslandExecutable & cv::gimpl::GIslandExecutable::operator=(class cv::gimpl::GIslandExecutable const &)
??4GKernel@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GKernel & cv::GKernel::operator=(struct cv::GKernel &&)
??4GKernel@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GKernel & cv::GKernel::operator=(struct cv::GKernel const &)
??4GKernelImpl@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GKernelImpl & cv::GKernelImpl::operator=(struct cv::GKernelImpl &&)
??4GKernelImpl@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GKernelImpl & cv::GKernelImpl::operator=(struct cv::GKernelImpl const &)
??4GKernelPackage@gapi@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::gapi::GKernelPackage & cv::gapi::GKernelPackage::operator=(class cv::gapi::GKernelPackage &&)
??4GKernelPackage@gapi@cv@@QEAAAEAV012@AEBV012@@Z;class cv::gapi::GKernelPackage & cv::gapi::GKernelPackage::operator=(class cv::gapi::GKernelPackage const &)
??4GMat@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GMat & cv::GMat::operator=(class cv::GMat &&)
??4GMat@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GMat & cv::GMat::operator=(class cv::GMat const &)
??4GMatDesc@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GMatDesc & cv::GMatDesc::operator=(struct cv::GMatDesc &&)
??4GMatDesc@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GMatDesc & cv::GMatDesc::operator=(struct cv::GMatDesc const &)
??4GMatP@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GMatP & cv::GMatP::operator=(class cv::GMatP &&)
??4GMatP@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GMatP & cv::GMatP::operator=(class cv::GMatP const &)
??4GNetPackage@gapi@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::gapi::GNetPackage & cv::gapi::GNetPackage::operator=(struct cv::gapi::GNetPackage &&)
??4GNetPackage@gapi@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::gapi::GNetPackage & cv::gapi::GNetPackage::operator=(struct cv::gapi::GNetPackage const &)
??4GNetParam@gapi@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::gapi::GNetParam & cv::gapi::GNetParam::operator=(struct cv::gapi::GNetParam &&)
??4GNetParam@gapi@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::gapi::GNetParam & cv::gapi::GNetParam::operator=(struct cv::gapi::GNetParam const &)
??4GOCLContext@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GOCLContext & cv::GOCLContext::operator=(class cv::GOCLContext &&)
??4GOCLContext@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GOCLContext & cv::GOCLContext::operator=(class cv::GOCLContext const &)
??4GOCLKernel@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GOCLKernel & cv::GOCLKernel::operator=(class cv::GOCLKernel &&)
??4GOCLKernel@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GOCLKernel & cv::GOCLKernel::operator=(class cv::GOCLKernel const &)
??4GOpaqueDesc@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GOpaqueDesc & cv::GOpaqueDesc::operator=(struct cv::GOpaqueDesc &&)
??4GOpaqueDesc@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GOpaqueDesc & cv::GOpaqueDesc::operator=(struct cv::GOpaqueDesc const &)
??4GOpaqueU@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::GOpaqueU & cv::detail::GOpaqueU::operator=(class cv::detail::GOpaqueU &&)
??4GOpaqueU@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::GOpaqueU & cv::detail::GOpaqueU::operator=(class cv::detail::GOpaqueU const &)
??4GPythonFunctor@python@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::python::GPythonFunctor & cv::gapi::python::GPythonFunctor::operator=(class cv::gapi::python::GPythonFunctor &&)
??4GPythonFunctor@python@gapi@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::gapi::python::GPythonFunctor & cv::gapi::python::GPythonFunctor::operator=(class cv::gapi::python::GPythonFunctor const &)
??4GPythonKernel@python@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::python::GPythonKernel & cv::gapi::python::GPythonKernel::operator=(class cv::gapi::python::GPythonKernel &&)
??4GPythonKernel@python@gapi@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::gapi::python::GPythonKernel & cv::gapi::python::GPythonKernel::operator=(class cv::gapi::python::GPythonKernel const &)
??4GRULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::GRULayer & cv::dnn::dnn4_v20211004::GRULayer::operator=(class cv::dnn::dnn4_v20211004::GRULayer &&)
??4GRULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::GRULayer & cv::dnn::dnn4_v20211004::GRULayer::operator=(class cv::dnn::dnn4_v20211004::GRULayer const &)
??4GRunArg@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GRunArg & cv::GRunArg::operator=(struct cv::GRunArg &&)
??4GRunArg@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GRunArg & cv::GRunArg::operator=(struct cv::GRunArg const &)
??4GScalar@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GScalar & cv::GScalar::operator=(class cv::GScalar &&)
??4GScalar@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GScalar & cv::GScalar::operator=(class cv::GScalar const &)
??4GScalarDesc@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GScalarDesc & cv::GScalarDesc::operator=(struct cv::GScalarDesc &&)
??4GScalarDesc@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GScalarDesc & cv::GScalarDesc::operator=(struct cv::GScalarDesc const &)
??4GStreamingCompiled@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GStreamingCompiled & cv::GStreamingCompiled::operator=(class cv::GStreamingCompiled &&)
??4GStreamingCompiled@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GStreamingCompiled & cv::GStreamingCompiled::operator=(class cv::GStreamingCompiled const &)
??4GTransform@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::GTransform & cv::GTransform::operator=(struct cv::GTransform &&)
??4GTransform@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::GTransform & cv::GTransform::operator=(struct cv::GTransform const &)
??4GainCompensator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::GainCompensator & cv::detail::GainCompensator::operator=(class cv::detail::GainCompensator &&)
??4GainCompensator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::GainCompensator & cv::detail::GainCompensator::operator=(class cv::detail::GainCompensator const &)
??4GeneralizedHough@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GeneralizedHough & cv::GeneralizedHough::operator=(class cv::GeneralizedHough &&)
??4GeneralizedHough@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GeneralizedHough & cv::GeneralizedHough::operator=(class cv::GeneralizedHough const &)
??4GeneralizedHoughBallard@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GeneralizedHoughBallard & cv::GeneralizedHoughBallard::operator=(class cv::GeneralizedHoughBallard &&)
??4GeneralizedHoughBallard@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GeneralizedHoughBallard & cv::GeneralizedHoughBallard::operator=(class cv::GeneralizedHoughBallard const &)
??4GeneralizedHoughGuil@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::GeneralizedHoughGuil & cv::GeneralizedHoughGuil::operator=(class cv::GeneralizedHoughGuil &&)
??4GeneralizedHoughGuil@cv@@QEAAAEAV01@AEBV01@@Z;class cv::GeneralizedHoughGuil & cv::GeneralizedHoughGuil::operator=(class cv::GeneralizedHoughGuil const &)
??4GpuMat@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::GpuMat & cv::cuda::GpuMat::operator=(class cv::cuda::GpuMat const &)
??4GpuMatND@cuda@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::cuda::GpuMatND & cv::cuda::GpuMatND::operator=(class cv::cuda::GpuMatND &&)
??4GpuMatND@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::GpuMatND & cv::cuda::GpuMatND::operator=(class cv::cuda::GpuMatND const &)
??4Graph@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::Graph & cv::detail::Graph::operator=(class cv::detail::Graph &&)
??4Graph@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::Graph & cv::detail::Graph::operator=(class cv::detail::Graph const &)
??4GraphCutSeamFinder@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::GraphCutSeamFinder & cv::detail::GraphCutSeamFinder::operator=(class cv::detail::GraphCutSeamFinder const &)
??4GraphCutSeamFinderBase@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::GraphCutSeamFinderBase & cv::detail::GraphCutSeamFinderBase::operator=(class cv::detail::GraphCutSeamFinderBase &&)
??4GraphCutSeamFinderBase@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::GraphCutSeamFinderBase & cv::detail::GraphCutSeamFinderBase::operator=(class cv::detail::GraphCutSeamFinderBase const &)
??4GraphEdge@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::GraphEdge & cv::detail::GraphEdge::operator=(struct cv::detail::GraphEdge &&)
??4GraphEdge@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::GraphEdge & cv::detail::GraphEdge::operator=(struct cv::detail::GraphEdge const &)
??4HOGDescriptor@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::HOGDescriptor & cv::HOGDescriptor::operator=(struct cv::HOGDescriptor const &)
??4Hamming@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::Hamming & cv::Hamming::operator=(struct cv::Hamming &&)
??4Hamming@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Hamming & cv::Hamming::operator=(struct cv::Hamming const &)
??4Hdr@SparseMat@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::SparseMat::Hdr & cv::SparseMat::Hdr::operator=(struct cv::SparseMat::Hdr &&)
??4Hdr@SparseMat@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::SparseMat::Hdr & cv::SparseMat::Hdr::operator=(struct cv::SparseMat::Hdr const &)
??4HomographyBasedEstimator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::HomographyBasedEstimator & cv::detail::HomographyBasedEstimator::operator=(class cv::detail::HomographyBasedEstimator &&)
??4HomographyBasedEstimator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::HomographyBasedEstimator & cv::detail::HomographyBasedEstimator::operator=(class cv::detail::HomographyBasedEstimator const &)
??4HostMem@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::HostMem & cv::cuda::HostMem::operator=(class cv::cuda::HostMem const &)
??4IAdapter@MediaFrame@cv@@QEAAAEAV012@AEBV012@@Z;class cv::MediaFrame::IAdapter & cv::MediaFrame::IAdapter::operator=(class cv::MediaFrame::IAdapter const &)
??4IDataProvider@onevpl@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::onevpl::IDataProvider & cv::gapi::wip::onevpl::IDataProvider::operator=(struct cv::gapi::wip::onevpl::IDataProvider const &)
??4IIStream@s11n@gapi@cv@@QEAAAEAU0123@AEBU0123@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::IIStream::operator=(struct cv::gapi::s11n::IIStream const &)
??4IOStream@s11n@gapi@cv@@QEAAAEAU0123@AEBU0123@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::IOStream::operator=(struct cv::gapi::s11n::IOStream const &)
??4Image2D@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::Image2D & cv::ocl::Image2D::operator=(class cv::ocl::Image2D &&)
??4Image2D@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::Image2D & cv::ocl::Image2D::operator=(class cv::ocl::Image2D const &)
??4Image@draw@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::draw::Image & cv::gapi::wip::draw::Image::operator=(struct cv::gapi::wip::draw::Image &&)
??4Image@draw@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::draw::Image & cv::gapi::wip::draw::Image::operator=(struct cv::gapi::wip::draw::Image const &)
??4ImageFeatures@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::ImageFeatures & cv::detail::ImageFeatures::operator=(struct cv::detail::ImageFeatures &&)
??4ImageFeatures@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::ImageFeatures & cv::detail::ImageFeatures::operator=(struct cv::detail::ImageFeatures const &)
??4Index@flann@cv@@QEAAAEAV012@AEBV012@@Z;class cv::flann::Index & cv::flann::Index::operator=(class cv::flann::Index const &)
??4InnerProductLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::InnerProductLayer & cv::dnn::dnn4_v20211004::InnerProductLayer::operator=(class cv::dnn::dnn4_v20211004::InnerProductLayer &&)
??4InnerProductLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::InnerProductLayer & cv::dnn::dnn4_v20211004::InnerProductLayer::operator=(class cv::dnn::dnn4_v20211004::InnerProductLayer const &)
??4InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::InnerProductLayerInt8 & cv::dnn::dnn4_v20211004::InnerProductLayerInt8::operator=(class cv::dnn::dnn4_v20211004::InnerProductLayerInt8 &&)
??4InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::InnerProductLayerInt8 & cv::dnn::dnn4_v20211004::InnerProductLayerInt8::operator=(class cv::dnn::dnn4_v20211004::InnerProductLayerInt8 const &)
??4IntelligentScissorsMB@segmentation@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::operator=(class cv::segmentation::IntelligentScissorsMB &&)
??4IntelligentScissorsMB@segmentation@cv@@QEAAAEAV012@AEBV012@@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::operator=(class cv::segmentation::IntelligentScissorsMB const &)
??4InterpLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::InterpLayer & cv::dnn::dnn4_v20211004::InterpLayer::operator=(class cv::dnn::dnn4_v20211004::InterpLayer &&)
??4InterpLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::InterpLayer & cv::dnn::dnn4_v20211004::InterpLayer::operator=(class cv::dnn::dnn4_v20211004::InterpLayer const &)
??4IntrinsicParams@internal@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::internal::IntrinsicParams & cv::internal::IntrinsicParams::operator=(struct cv::internal::IntrinsicParams &&)
??4IntrinsicParams@internal@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::internal::IntrinsicParams & cv::internal::IntrinsicParams::operator=(struct cv::internal::IntrinsicParams const &)
??4IntrinsicParams@internal@cv@@QEAAAEAU012@AEBVMat@2@@Z;struct cv::internal::IntrinsicParams & cv::internal::IntrinsicParams::operator=(class cv::Mat const &)
??4KAZE@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::KAZE & cv::KAZE::operator=(class cv::KAZE &&)
??4KAZE@cv@@QEAAAEAV01@AEBV01@@Z;class cv::KAZE & cv::KAZE::operator=(class cv::KAZE const &)
??4KDTree@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::KDTree & cv::ml::KDTree::operator=(class cv::ml::KDTree &&)
??4KDTree@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::KDTree & cv::ml::KDTree::operator=(class cv::ml::KDTree const &)
??4KNearest@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::KNearest & cv::ml::KNearest::operator=(class cv::ml::KNearest &&)
??4KNearest@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::KNearest & cv::ml::KNearest::operator=(class cv::ml::KNearest const &)
??4KalmanFilter@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::KalmanFilter & cv::KalmanFilter::operator=(class cv::KalmanFilter &&)
??4KalmanFilter@cv@@QEAAAEAV01@AEBV01@@Z;class cv::KalmanFilter & cv::KalmanFilter::operator=(class cv::KalmanFilter const &)
??4KalmanParams@gapi@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::gapi::KalmanParams & cv::gapi::KalmanParams::operator=(struct cv::gapi::KalmanParams &&)
??4KalmanParams@gapi@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::gapi::KalmanParams & cv::gapi::KalmanParams::operator=(struct cv::gapi::KalmanParams const &)
??4Kernel@SVM@ml@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::ml::SVM::Kernel & cv::ml::SVM::Kernel::operator=(class cv::ml::SVM::Kernel &&)
??4Kernel@SVM@ml@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::ml::SVM::Kernel & cv::ml::SVM::Kernel::operator=(class cv::ml::SVM::Kernel const &)
??4Kernel@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::Kernel & cv::ocl::Kernel::operator=(class cv::ocl::Kernel &&)
??4Kernel@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::Kernel & cv::ocl::Kernel::operator=(class cv::ocl::Kernel const &)
??4KernelArg@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::KernelArg & cv::ocl::KernelArg::operator=(class cv::ocl::KernelArg &&)
??4KernelArg@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::KernelArg & cv::ocl::KernelArg::operator=(class cv::ocl::KernelArg const &)
??4KeyPoint@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::KeyPoint & cv::KeyPoint::operator=(class cv::KeyPoint &&)
??4KeyPoint@cv@@QEAAAEAV01@AEBV01@@Z;class cv::KeyPoint & cv::KeyPoint::operator=(class cv::KeyPoint const &)
??4KeyPointsFilter@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::KeyPointsFilter & cv::KeyPointsFilter::operator=(class cv::KeyPointsFilter &&)
??4KeyPointsFilter@cv@@QEAAAEAV01@AEBV01@@Z;class cv::KeyPointsFilter & cv::KeyPointsFilter::operator=(class cv::KeyPointsFilter const &)
??4KeypointsModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::KeypointsModel & cv::dnn::dnn4_v20211004::KeypointsModel::operator=(class cv::dnn::dnn4_v20211004::KeypointsModel &&)
??4KeypointsModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::KeypointsModel & cv::dnn::dnn4_v20211004::KeypointsModel::operator=(class cv::dnn::dnn4_v20211004::KeypointsModel const &)
??4LDA@cv@@QEAAAEAV01@AEBV01@@Z;class cv::LDA & cv::LDA::operator=(class cv::LDA const &)
??4LMSolver@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::LMSolver & cv::LMSolver::operator=(class cv::LMSolver &&)
??4LMSolver@cv@@QEAAAEAV01@AEBV01@@Z;class cv::LMSolver & cv::LMSolver::operator=(class cv::LMSolver const &)
??4LRNLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::LRNLayer & cv::dnn::dnn4_v20211004::LRNLayer::operator=(class cv::dnn::dnn4_v20211004::LRNLayer &&)
??4LRNLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::LRNLayer & cv::dnn::dnn4_v20211004::LRNLayer::operator=(class cv::dnn::dnn4_v20211004::LRNLayer const &)
??4LSTMLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::LSTMLayer & cv::dnn::dnn4_v20211004::LSTMLayer::operator=(class cv::dnn::dnn4_v20211004::LSTMLayer &&)
??4LSTMLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::LSTMLayer & cv::dnn::dnn4_v20211004::LSTMLayer::operator=(class cv::dnn::dnn4_v20211004::LSTMLayer const &)
??4Layer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::Layer & cv::dnn::dnn4_v20211004::Layer::operator=(class cv::dnn::dnn4_v20211004::Layer const &)
??4LayerFactory@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::LayerFactory & cv::dnn::dnn4_v20211004::LayerFactory::operator=(class cv::dnn::dnn4_v20211004::LayerFactory &&)
??4LayerFactory@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::LayerFactory & cv::dnn::dnn4_v20211004::LayerFactory::operator=(class cv::dnn::dnn4_v20211004::LayerFactory const &)
??4LayerParams@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::LayerParams & cv::dnn::dnn4_v20211004::LayerParams::operator=(class cv::dnn::dnn4_v20211004::LayerParams &&)
??4LayerParams@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::LayerParams & cv::dnn::dnn4_v20211004::LayerParams::operator=(class cv::dnn::dnn4_v20211004::LayerParams const &)
??4Line@draw@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::draw::Line & cv::gapi::wip::draw::Line::operator=(struct cv::gapi::wip::draw::Line &&)
??4Line@draw@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::draw::Line & cv::gapi::wip::draw::Line::operator=(struct cv::gapi::wip::draw::Line const &)
??4LineIterator@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::LineIterator & cv::LineIterator::operator=(class cv::LineIterator &&)
??4LineIterator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::LineIterator & cv::LineIterator::operator=(class cv::LineIterator const &)
??4LineSegmentDetector@cv@@QEAAAEAV01@AEBV01@@Z;class cv::LineSegmentDetector & cv::LineSegmentDetector::operator=(class cv::LineSegmentDetector const &)
??4LogisticRegression@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::LogisticRegression & cv::ml::LogisticRegression::operator=(class cv::ml::LogisticRegression &&)
??4LogisticRegression@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::LogisticRegression & cv::ml::LogisticRegression::operator=(class cv::ml::LogisticRegression const &)
??4MSER@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MSER & cv::MSER::operator=(class cv::MSER &&)
??4MSER@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MSER & cv::MSER::operator=(class cv::MSER const &)
??4MVNLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::MVNLayer & cv::dnn::dnn4_v20211004::MVNLayer::operator=(class cv::dnn::dnn4_v20211004::MVNLayer &&)
??4MVNLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::MVNLayer & cv::dnn::dnn4_v20211004::MVNLayer::operator=(class cv::dnn::dnn4_v20211004::MVNLayer const &)
??4MaskGenerator@BaseCascadeClassifier@cv@@QEAAAEAV012@AEBV012@@Z;class cv::BaseCascadeClassifier::MaskGenerator & cv::BaseCascadeClassifier::MaskGenerator::operator=(class cv::BaseCascadeClassifier::MaskGenerator const &)
??4Mat@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::Mat & cv::Mat::operator=(class cv::Mat &&)
??4Mat@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Mat & cv::Mat::operator=(class cv::Mat const &)
??4Mat@cv@@QEAAAEAV01@AEBV?$Scalar_@N@1@@Z;class cv::Mat & cv::Mat::operator=(class cv::Scalar_<double> const &)
??4Mat@cv@@QEAAAEAV01@AEBVMatExpr@1@@Z;class cv::Mat & cv::Mat::operator=(class cv::MatExpr const &)
??4MatAllocator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MatAllocator & cv::MatAllocator::operator=(class cv::MatAllocator const &)
??4MatConstIterator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MatConstIterator & cv::MatConstIterator::operator=(class cv::MatConstIterator const &)
??4MatExpr@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MatExpr & cv::MatExpr::operator=(class cv::MatExpr &&)
??4MatExpr@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MatExpr & cv::MatExpr::operator=(class cv::MatExpr const &)
??4MatOp@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MatOp & cv::MatOp::operator=(class cv::MatOp const &)
??4MatSize@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::MatSize & cv::MatSize::operator=(struct cv::MatSize &&)
??4MatSize@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::MatSize & cv::MatSize::operator=(struct cv::MatSize const &)
??4MatStep@cv@@QEAAAEAU01@_K@Z;struct cv::MatStep & cv::MatStep::operator=(unsigned __int64)
??4MatchesInfo@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::MatchesInfo & cv::detail::MatchesInfo::operator=(struct cv::detail::MatchesInfo const &)
??4Matx_AddOp@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Matx_AddOp & cv::Matx_AddOp::operator=(struct cv::Matx_AddOp const &)
??4Matx_DivOp@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Matx_DivOp & cv::Matx_DivOp::operator=(struct cv::Matx_DivOp const &)
??4Matx_MatMulOp@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Matx_MatMulOp & cv::Matx_MatMulOp::operator=(struct cv::Matx_MatMulOp const &)
??4Matx_MulOp@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Matx_MulOp & cv::Matx_MulOp::operator=(struct cv::Matx_MulOp const &)
??4Matx_ScaleOp@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Matx_ScaleOp & cv::Matx_ScaleOp::operator=(struct cv::Matx_ScaleOp const &)
??4Matx_SubOp@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Matx_SubOp & cv::Matx_SubOp::operator=(struct cv::Matx_SubOp const &)
??4Matx_TOp@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::Matx_TOp & cv::Matx_TOp::operator=(struct cv::Matx_TOp const &)
??4MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::MaxUnpoolLayer & cv::dnn::dnn4_v20211004::MaxUnpoolLayer::operator=(class cv::dnn::dnn4_v20211004::MaxUnpoolLayer &&)
??4MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::MaxUnpoolLayer & cv::dnn::dnn4_v20211004::MaxUnpoolLayer::operator=(class cv::dnn::dnn4_v20211004::MaxUnpoolLayer const &)
??4MediaFrame@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MediaFrame & cv::MediaFrame::operator=(class cv::MediaFrame &&)
??4MediaFrame@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MediaFrame & cv::MediaFrame::operator=(class cv::MediaFrame const &)
??4MercatorProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::MercatorProjector & cv::detail::MercatorProjector::operator=(struct cv::detail::MercatorProjector &&)
??4MercatorProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::MercatorProjector & cv::detail::MercatorProjector::operator=(struct cv::detail::MercatorProjector const &)
??4MercatorWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MercatorWarper & cv::MercatorWarper::operator=(class cv::MercatorWarper &&)
??4MercatorWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MercatorWarper & cv::MercatorWarper::operator=(class cv::MercatorWarper const &)
??4MercatorWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::MercatorWarper & cv::detail::MercatorWarper::operator=(class cv::detail::MercatorWarper &&)
??4MercatorWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::MercatorWarper & cv::detail::MercatorWarper::operator=(class cv::detail::MercatorWarper const &)
??4MergeDebevec@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MergeDebevec & cv::MergeDebevec::operator=(class cv::MergeDebevec &&)
??4MergeDebevec@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MergeDebevec & cv::MergeDebevec::operator=(class cv::MergeDebevec const &)
??4MergeExposures@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MergeExposures & cv::MergeExposures::operator=(class cv::MergeExposures &&)
??4MergeExposures@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MergeExposures & cv::MergeExposures::operator=(class cv::MergeExposures const &)
??4MergeMertens@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MergeMertens & cv::MergeMertens::operator=(class cv::MergeMertens &&)
??4MergeMertens@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MergeMertens & cv::MergeMertens::operator=(class cv::MergeMertens const &)
??4MergeRobertson@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MergeRobertson & cv::MergeRobertson::operator=(class cv::MergeRobertson &&)
??4MergeRobertson@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MergeRobertson & cv::MergeRobertson::operator=(class cv::MergeRobertson const &)
??4MinProblemSolver@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::MinProblemSolver & cv::MinProblemSolver::operator=(class cv::MinProblemSolver &&)
??4MinProblemSolver@cv@@QEAAAEAV01@AEBV01@@Z;class cv::MinProblemSolver & cv::MinProblemSolver::operator=(class cv::MinProblemSolver const &)
??4MishLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::MishLayer & cv::dnn::dnn4_v20211004::MishLayer::operator=(class cv::dnn::dnn4_v20211004::MishLayer &&)
??4MishLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::MishLayer & cv::dnn::dnn4_v20211004::MishLayer::operator=(class cv::dnn::dnn4_v20211004::MishLayer const &)
??4Model@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::operator=(class cv::dnn::dnn4_v20211004::Model &&)
??4Model@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::operator=(class cv::dnn::dnn4_v20211004::Model const &)
??4Moments@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::Moments & cv::Moments::operator=(class cv::Moments &&)
??4Moments@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Moments & cv::Moments::operator=(class cv::Moments const &)
??4Morph@hal@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::hal::Morph & cv::hal::Morph::operator=(struct cv::hal::Morph const &)
??4Mosaic@draw@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::draw::Mosaic & cv::gapi::wip::draw::Mosaic::operator=(struct cv::gapi::wip::draw::Mosaic &&)
??4Mosaic@draw@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::draw::Mosaic & cv::gapi::wip::draw::Mosaic::operator=(struct cv::gapi::wip::draw::Mosaic const &)
??4MultiBandBlender@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::MultiBandBlender & cv::detail::MultiBandBlender::operator=(class cv::detail::MultiBandBlender &&)
??4MultiBandBlender@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::MultiBandBlender & cv::detail::MultiBandBlender::operator=(class cv::detail::MultiBandBlender const &)
??4NAryMatIterator@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::NAryMatIterator & cv::NAryMatIterator::operator=(class cv::NAryMatIterator &&)
??4NAryMatIterator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::NAryMatIterator & cv::NAryMatIterator::operator=(class cv::NAryMatIterator const &)
??4Net@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::Net & cv::dnn::dnn4_v20211004::Net::operator=(class cv::dnn::dnn4_v20211004::Net const &)
??4NoBundleAdjuster@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::NoBundleAdjuster & cv::detail::NoBundleAdjuster::operator=(class cv::detail::NoBundleAdjuster &&)
??4NoBundleAdjuster@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::NoBundleAdjuster & cv::detail::NoBundleAdjuster::operator=(class cv::detail::NoBundleAdjuster const &)
??4NoExposureCompensator@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::NoExposureCompensator & cv::detail::NoExposureCompensator::operator=(class cv::detail::NoExposureCompensator &&)
??4NoExposureCompensator@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::NoExposureCompensator & cv::detail::NoExposureCompensator::operator=(class cv::detail::NoExposureCompensator const &)
??4NoSeamFinder@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::NoSeamFinder & cv::detail::NoSeamFinder::operator=(class cv::detail::NoSeamFinder &&)
??4NoSeamFinder@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::NoSeamFinder & cv::detail::NoSeamFinder::operator=(class cv::detail::NoSeamFinder const &)
??4Node@DTrees@ml@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::ml::DTrees::Node & cv::ml::DTrees::Node::operator=(class cv::ml::DTrees::Node &&)
??4Node@DTrees@ml@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::ml::DTrees::Node & cv::ml::DTrees::Node::operator=(class cv::ml::DTrees::Node const &)
??4Node@SparseMat@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::SparseMat::Node & cv::SparseMat::Node::operator=(struct cv::SparseMat::Node &&)
??4Node@SparseMat@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::SparseMat::Node & cv::SparseMat::Node::operator=(struct cv::SparseMat::Node const &)
??4NodeData@instr@cv@@QEAAAEAV012@AEBV012@@Z;class cv::instr::NodeData & cv::instr::NodeData::operator=(class cv::instr::NodeData const &)
??4NormalBayesClassifier@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::NormalBayesClassifier & cv::ml::NormalBayesClassifier::operator=(class cv::ml::NormalBayesClassifier &&)
??4NormalBayesClassifier@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::NormalBayesClassifier & cv::ml::NormalBayesClassifier::operator=(class cv::ml::NormalBayesClassifier const &)
??4NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::NormalizeBBoxLayer & cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::operator=(class cv::dnn::dnn4_v20211004::NormalizeBBoxLayer &&)
??4NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::NormalizeBBoxLayer & cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::operator=(class cv::dnn::dnn4_v20211004::NormalizeBBoxLayer const &)
??4ORB@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::ORB & cv::ORB::operator=(class cv::ORB &&)
??4ORB@cv@@QEAAAEAV01@AEBV01@@Z;class cv::ORB & cv::ORB::operator=(class cv::ORB const &)
??4OpenCLExecutionContext@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::OpenCLExecutionContext & cv::ocl::OpenCLExecutionContext::operator=(class cv::ocl::OpenCLExecutionContext &&)
??4OpenCLExecutionContext@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::OpenCLExecutionContext & cv::ocl::OpenCLExecutionContext::operator=(class cv::ocl::OpenCLExecutionContext const &)
??4PCA@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::PCA & cv::PCA::operator=(class cv::PCA &&)
??4PCA@cv@@QEAAAEAV01@AEBV01@@Z;class cv::PCA & cv::PCA::operator=(class cv::PCA const &)
??4PaddingLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::PaddingLayer & cv::dnn::dnn4_v20211004::PaddingLayer::operator=(class cv::dnn::dnn4_v20211004::PaddingLayer &&)
??4PaddingLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::PaddingLayer & cv::dnn::dnn4_v20211004::PaddingLayer::operator=(class cv::dnn::dnn4_v20211004::PaddingLayer const &)
??4PairwiseSeamFinder@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::PairwiseSeamFinder & cv::detail::PairwiseSeamFinder::operator=(class cv::detail::PairwiseSeamFinder &&)
??4PairwiseSeamFinder@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::PairwiseSeamFinder & cv::detail::PairwiseSeamFinder::operator=(class cv::detail::PairwiseSeamFinder const &)
??4PaniniPortraitProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::PaniniPortraitProjector & cv::detail::PaniniPortraitProjector::operator=(struct cv::detail::PaniniPortraitProjector &&)
??4PaniniPortraitProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::PaniniPortraitProjector & cv::detail::PaniniPortraitProjector::operator=(struct cv::detail::PaniniPortraitProjector const &)
??4PaniniPortraitWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::PaniniPortraitWarper & cv::PaniniPortraitWarper::operator=(class cv::PaniniPortraitWarper &&)
??4PaniniPortraitWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::PaniniPortraitWarper & cv::PaniniPortraitWarper::operator=(class cv::PaniniPortraitWarper const &)
??4PaniniPortraitWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::PaniniPortraitWarper & cv::detail::PaniniPortraitWarper::operator=(class cv::detail::PaniniPortraitWarper &&)
??4PaniniPortraitWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::PaniniPortraitWarper & cv::detail::PaniniPortraitWarper::operator=(class cv::detail::PaniniPortraitWarper const &)
??4PaniniProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::PaniniProjector & cv::detail::PaniniProjector::operator=(struct cv::detail::PaniniProjector &&)
??4PaniniProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::PaniniProjector & cv::detail::PaniniProjector::operator=(struct cv::detail::PaniniProjector const &)
??4PaniniWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::PaniniWarper & cv::PaniniWarper::operator=(class cv::PaniniWarper &&)
??4PaniniWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::PaniniWarper & cv::PaniniWarper::operator=(class cv::PaniniWarper const &)
??4PaniniWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::PaniniWarper & cv::detail::PaniniWarper::operator=(class cv::detail::PaniniWarper &&)
??4PaniniWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::PaniniWarper & cv::detail::PaniniWarper::operator=(class cv::detail::PaniniWarper const &)
??4ParallelForAPI@parallel@cv@@QEAAAEAV012@AEBV012@@Z;class cv::parallel::ParallelForAPI & cv::parallel::ParallelForAPI::operator=(class cv::parallel::ParallelForAPI const &)
??4ParallelLoopBody@cv@@QEAAAEAV01@AEBV01@@Z;class cv::ParallelLoopBody & cv::ParallelLoopBody::operator=(class cv::ParallelLoopBody const &)
??4ParamGrid@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::ParamGrid & cv::ml::ParamGrid::operator=(class cv::ml::ParamGrid &&)
??4ParamGrid@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::ParamGrid & cv::ml::ParamGrid::operator=(class cv::ml::ParamGrid const &)
??4Parameters@DetectionBasedTracker@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::DetectionBasedTracker::Parameters & cv::DetectionBasedTracker::Parameters::operator=(struct cv::DetectionBasedTracker::Parameters &&)
??4Parameters@DetectionBasedTracker@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::DetectionBasedTracker::Parameters & cv::DetectionBasedTracker::Parameters::operator=(struct cv::DetectionBasedTracker::Parameters const &)
??4Params@ClfMilBoost@tracking@detail@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::detail::tracking::ClfMilBoost::Params & cv::detail::tracking::ClfMilBoost::Params::operator=(struct cv::detail::tracking::ClfMilBoost::Params &&)
??4Params@ClfMilBoost@tracking@detail@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::detail::tracking::ClfMilBoost::Params & cv::detail::tracking::ClfMilBoost::Params::operator=(struct cv::detail::tracking::ClfMilBoost::Params const &)
??4Params@SimpleBlobDetector@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::SimpleBlobDetector::Params & cv::SimpleBlobDetector::Params::operator=(struct cv::SimpleBlobDetector::Params &&)
??4Params@SimpleBlobDetector@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::SimpleBlobDetector::Params & cv::SimpleBlobDetector::Params::operator=(struct cv::SimpleBlobDetector::Params const &)
??4Params@TrackerDaSiamRPN@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::TrackerDaSiamRPN::Params & cv::TrackerDaSiamRPN::Params::operator=(struct cv::TrackerDaSiamRPN::Params &&)
??4Params@TrackerDaSiamRPN@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::TrackerDaSiamRPN::Params & cv::TrackerDaSiamRPN::Params::operator=(struct cv::TrackerDaSiamRPN::Params const &)
??4Params@TrackerGOTURN@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::TrackerGOTURN::Params & cv::TrackerGOTURN::Params::operator=(struct cv::TrackerGOTURN::Params &&)
??4Params@TrackerGOTURN@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::TrackerGOTURN::Params & cv::TrackerGOTURN::Params::operator=(struct cv::TrackerGOTURN::Params const &)
??4Params@TrackerMIL@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::TrackerMIL::Params & cv::TrackerMIL::Params::operator=(struct cv::TrackerMIL::Params &&)
??4Params@TrackerMIL@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::TrackerMIL::Params & cv::TrackerMIL::Params::operator=(struct cv::TrackerMIL::Params const &)
??4Params@TrackerSamplerCSC@tracking@detail@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::detail::tracking::TrackerSamplerCSC::Params & cv::detail::tracking::TrackerSamplerCSC::Params::operator=(struct cv::detail::tracking::TrackerSamplerCSC::Params &&)
??4Params@TrackerSamplerCSC@tracking@detail@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::detail::tracking::TrackerSamplerCSC::Params & cv::detail::tracking::TrackerSamplerCSC::Params::operator=(struct cv::detail::tracking::TrackerSamplerCSC::Params const &)
??4PermuteLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::PermuteLayer & cv::dnn::dnn4_v20211004::PermuteLayer::operator=(class cv::dnn::dnn4_v20211004::PermuteLayer &&)
??4PermuteLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::PermuteLayer & cv::dnn::dnn4_v20211004::PermuteLayer::operator=(class cv::dnn::dnn4_v20211004::PermuteLayer const &)
??4PlanePortraitProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::PlanePortraitProjector & cv::detail::PlanePortraitProjector::operator=(struct cv::detail::PlanePortraitProjector &&)
??4PlanePortraitProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::PlanePortraitProjector & cv::detail::PlanePortraitProjector::operator=(struct cv::detail::PlanePortraitProjector const &)
??4PlanePortraitWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::PlanePortraitWarper & cv::detail::PlanePortraitWarper::operator=(class cv::detail::PlanePortraitWarper &&)
??4PlanePortraitWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::PlanePortraitWarper & cv::detail::PlanePortraitWarper::operator=(class cv::detail::PlanePortraitWarper const &)
??4PlaneProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::PlaneProjector & cv::detail::PlaneProjector::operator=(struct cv::detail::PlaneProjector &&)
??4PlaneProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::PlaneProjector & cv::detail::PlaneProjector::operator=(struct cv::detail::PlaneProjector const &)
??4PlaneWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::PlaneWarper & cv::PlaneWarper::operator=(class cv::PlaneWarper &&)
??4PlaneWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::PlaneWarper & cv::PlaneWarper::operator=(class cv::PlaneWarper const &)
??4PlaneWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::PlaneWarper & cv::detail::PlaneWarper::operator=(class cv::detail::PlaneWarper &&)
??4PlaneWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::PlaneWarper & cv::detail::PlaneWarper::operator=(class cv::detail::PlaneWarper const &)
??4PlaneWarperGpu@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::PlaneWarperGpu & cv::detail::PlaneWarperGpu::operator=(class cv::detail::PlaneWarperGpu &&)
??4PlaneWarperGpu@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::PlaneWarperGpu & cv::detail::PlaneWarperGpu::operator=(class cv::detail::PlaneWarperGpu const &)
??4Platform@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::Platform & cv::ocl::Platform::operator=(class cv::ocl::Platform &&)
??4Platform@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::Platform & cv::ocl::Platform::operator=(class cv::ocl::Platform const &)
??4PlatformInfo@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::PlatformInfo & cv::ocl::PlatformInfo::operator=(class cv::ocl::PlatformInfo &&)
??4PlatformInfo@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::PlatformInfo & cv::ocl::PlatformInfo::operator=(class cv::ocl::PlatformInfo const &)
??4PointSetRegistrator@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::PointSetRegistrator & cv::PointSetRegistrator::operator=(class cv::PointSetRegistrator &&)
??4PointSetRegistrator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::PointSetRegistrator & cv::PointSetRegistrator::operator=(class cv::PointSetRegistrator const &)
??4Poly@draw@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::draw::Poly & cv::gapi::wip::draw::Poly::operator=(struct cv::gapi::wip::draw::Poly &&)
??4Poly@draw@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::draw::Poly & cv::gapi::wip::draw::Poly::operator=(struct cv::gapi::wip::draw::Poly const &)
??4PoolingLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::PoolingLayer & cv::dnn::dnn4_v20211004::PoolingLayer::operator=(class cv::dnn::dnn4_v20211004::PoolingLayer &&)
??4PoolingLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::PoolingLayer & cv::dnn::dnn4_v20211004::PoolingLayer::operator=(class cv::dnn::dnn4_v20211004::PoolingLayer const &)
??4PoolingLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::PoolingLayerInt8 & cv::dnn::dnn4_v20211004::PoolingLayerInt8::operator=(class cv::dnn::dnn4_v20211004::PoolingLayerInt8 &&)
??4PoolingLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::PoolingLayerInt8 & cv::dnn::dnn4_v20211004::PoolingLayerInt8::operator=(class cv::dnn::dnn4_v20211004::PoolingLayerInt8 const &)
??4PowerLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::PowerLayer & cv::dnn::dnn4_v20211004::PowerLayer::operator=(class cv::dnn::dnn4_v20211004::PowerLayer &&)
??4PowerLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::PowerLayer & cv::dnn::dnn4_v20211004::PowerLayer::operator=(class cv::dnn::dnn4_v20211004::PowerLayer const &)
??4PriorBoxLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::PriorBoxLayer & cv::dnn::dnn4_v20211004::PriorBoxLayer::operator=(class cv::dnn::dnn4_v20211004::PriorBoxLayer &&)
??4PriorBoxLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::PriorBoxLayer & cv::dnn::dnn4_v20211004::PriorBoxLayer::operator=(class cv::dnn::dnn4_v20211004::PriorBoxLayer const &)
??4Priv@Buffer@fluid@gapi@cv@@QEAAAEAV01234@$$QEAV01234@@Z;class cv::gapi::fluid::Buffer::Priv & cv::gapi::fluid::Buffer::Priv::operator=(class cv::gapi::fluid::Buffer::Priv &&)
??4Priv@GBackend@gapi@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::gapi::GBackend::Priv & cv::gapi::GBackend::Priv::operator=(class cv::gapi::GBackend::Priv const &)
??4Priv@GCompiled@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::GCompiled::Priv & cv::GCompiled::Priv::operator=(class cv::GCompiled::Priv &&)
??4Priv@GStreamingCompiled@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::GStreamingCompiled::Priv & cv::GStreamingCompiled::Priv::operator=(class cv::GStreamingCompiled::Priv &&)
??4Priv@View@fluid@gapi@cv@@QEAAAEAV01234@AEBV01234@@Z;class cv::gapi::fluid::View::Priv & cv::gapi::fluid::View::Priv::operator=(class cv::gapi::fluid::View::Priv const &)
??4Program@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::Program & cv::ocl::Program::operator=(class cv::ocl::Program &&)
??4Program@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::Program & cv::ocl::Program::operator=(class cv::ocl::Program const &)
??4ProgramEntry@internal@ocl@cv@@QEAAAEAU0123@$$QEAU0123@@Z;struct cv::ocl::internal::ProgramEntry & cv::ocl::internal::ProgramEntry::operator=(struct cv::ocl::internal::ProgramEntry &&)
??4ProgramEntry@internal@ocl@cv@@QEAAAEAU0123@AEBU0123@@Z;struct cv::ocl::internal::ProgramEntry & cv::ocl::internal::ProgramEntry::operator=(struct cv::ocl::internal::ProgramEntry const &)
??4ProgramSource@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::ProgramSource & cv::ocl::ProgramSource::operator=(class cv::ocl::ProgramSource &&)
??4ProgramSource@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::ProgramSource & cv::ocl::ProgramSource::operator=(class cv::ocl::ProgramSource const &)
??4ProjectorBase@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::ProjectorBase & cv::detail::ProjectorBase::operator=(struct cv::detail::ProjectorBase &&)
??4ProjectorBase@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::ProjectorBase & cv::detail::ProjectorBase::operator=(struct cv::detail::ProjectorBase const &)
??4ProposalLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ProposalLayer & cv::dnn::dnn4_v20211004::ProposalLayer::operator=(class cv::dnn::dnn4_v20211004::ProposalLayer &&)
??4ProposalLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ProposalLayer & cv::dnn::dnn4_v20211004::ProposalLayer::operator=(class cv::dnn::dnn4_v20211004::ProposalLayer const &)
??4PyParams@ie@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::ie::PyParams & cv::gapi::ie::PyParams::operator=(class cv::gapi::ie::PyParams &&)
??4PyParams@ie@gapi@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::gapi::ie::PyParams & cv::gapi::ie::PyParams::operator=(class cv::gapi::ie::PyParams const &)
??4PyRotationWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::PyRotationWarper & cv::PyRotationWarper::operator=(class cv::PyRotationWarper const &)
??4QRCodeDetector@cv@@QEAAAEAV01@AEBV01@@Z;class cv::QRCodeDetector & cv::QRCodeDetector::operator=(class cv::QRCodeDetector const &)
??4QuadEdge@Subdiv2D@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::Subdiv2D::QuadEdge & cv::Subdiv2D::QuadEdge::operator=(struct cv::Subdiv2D::QuadEdge &&)
??4QuadEdge@Subdiv2D@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::Subdiv2D::QuadEdge & cv::Subdiv2D::QuadEdge::operator=(struct cv::Subdiv2D::QuadEdge const &)
??4QuantizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::QuantizeLayer & cv::dnn::dnn4_v20211004::QuantizeLayer::operator=(class cv::dnn::dnn4_v20211004::QuantizeLayer &&)
??4QuantizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::QuantizeLayer & cv::dnn::dnn4_v20211004::QuantizeLayer::operator=(class cv::dnn::dnn4_v20211004::QuantizeLayer const &)
??4Queue@ocl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ocl::Queue & cv::ocl::Queue::operator=(class cv::ocl::Queue &&)
??4Queue@ocl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ocl::Queue & cv::ocl::Queue::operator=(class cv::ocl::Queue const &)
??4RMat@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::RMat & cv::RMat::operator=(class cv::RMat &&)
??4RMat@cv@@QEAAAEAV01@AEBV01@@Z;class cv::RMat & cv::RMat::operator=(class cv::RMat const &)
??4RMatMediaFrameAdapter@gimpl@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::gimpl::RMatMediaFrameAdapter & cv::gimpl::RMatMediaFrameAdapter::operator=(struct cv::gimpl::RMatMediaFrameAdapter &&)
??4RMatMediaFrameAdapter@gimpl@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::gimpl::RMatMediaFrameAdapter & cv::gimpl::RMatMediaFrameAdapter::operator=(struct cv::gimpl::RMatMediaFrameAdapter const &)
??4RNG@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::RNG & cv::RNG::operator=(class cv::RNG &&)
??4RNG@cv@@QEAAAEAV01@AEBV01@@Z;class cv::RNG & cv::RNG::operator=(class cv::RNG const &)
??4RNG_MT19937@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::RNG_MT19937 & cv::RNG_MT19937::operator=(class cv::RNG_MT19937 &&)
??4RNG_MT19937@cv@@QEAAAEAV01@AEBV01@@Z;class cv::RNG_MT19937 & cv::RNG_MT19937::operator=(class cv::RNG_MT19937 const &)
??4RNNLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::RNNLayer & cv::dnn::dnn4_v20211004::RNNLayer::operator=(class cv::dnn::dnn4_v20211004::RNNLayer &&)
??4RNNLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::RNNLayer & cv::dnn::dnn4_v20211004::RNNLayer::operator=(class cv::dnn::dnn4_v20211004::RNNLayer const &)
??4RTrees@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::RTrees & cv::ml::RTrees::operator=(class cv::ml::RTrees &&)
??4RTrees@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::RTrees & cv::ml::RTrees::operator=(class cv::ml::RTrees const &)
??4Range@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::Range & cv::Range::operator=(class cv::Range &&)
??4Range@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Range & cv::Range::operator=(class cv::Range const &)
??4ReLU6Layer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ReLU6Layer & cv::dnn::dnn4_v20211004::ReLU6Layer::operator=(class cv::dnn::dnn4_v20211004::ReLU6Layer &&)
??4ReLU6Layer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ReLU6Layer & cv::dnn::dnn4_v20211004::ReLU6Layer::operator=(class cv::dnn::dnn4_v20211004::ReLU6Layer const &)
??4ReLULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ReLULayer & cv::dnn::dnn4_v20211004::ReLULayer::operator=(class cv::dnn::dnn4_v20211004::ReLULayer &&)
??4ReLULayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ReLULayer & cv::dnn::dnn4_v20211004::ReLULayer::operator=(class cv::dnn::dnn4_v20211004::ReLULayer const &)
??4Rect@draw@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::draw::Rect & cv::gapi::wip::draw::Rect::operator=(struct cv::gapi::wip::draw::Rect &&)
??4Rect@draw@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::draw::Rect & cv::gapi::wip::draw::Rect::operator=(struct cv::gapi::wip::draw::Rect const &)
??4RegionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::RegionLayer & cv::dnn::dnn4_v20211004::RegionLayer::operator=(class cv::dnn::dnn4_v20211004::RegionLayer &&)
??4RegionLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::RegionLayer & cv::dnn::dnn4_v20211004::RegionLayer::operator=(class cv::dnn::dnn4_v20211004::RegionLayer const &)
??4ReorgLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ReorgLayer & cv::dnn::dnn4_v20211004::ReorgLayer::operator=(class cv::dnn::dnn4_v20211004::ReorgLayer &&)
??4ReorgLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ReorgLayer & cv::dnn::dnn4_v20211004::ReorgLayer::operator=(class cv::dnn::dnn4_v20211004::ReorgLayer const &)
??4RequantizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::RequantizeLayer & cv::dnn::dnn4_v20211004::RequantizeLayer::operator=(class cv::dnn::dnn4_v20211004::RequantizeLayer &&)
??4RequantizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::RequantizeLayer & cv::dnn::dnn4_v20211004::RequantizeLayer::operator=(class cv::dnn::dnn4_v20211004::RequantizeLayer const &)
??4ReshapeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ReshapeLayer & cv::dnn::dnn4_v20211004::ReshapeLayer::operator=(class cv::dnn::dnn4_v20211004::ReshapeLayer &&)
??4ReshapeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ReshapeLayer & cv::dnn::dnn4_v20211004::ReshapeLayer::operator=(class cv::dnn::dnn4_v20211004::ReshapeLayer const &)
??4ResizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ResizeLayer & cv::dnn::dnn4_v20211004::ResizeLayer::operator=(class cv::dnn::dnn4_v20211004::ResizeLayer &&)
??4ResizeLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ResizeLayer & cv::dnn::dnn4_v20211004::ResizeLayer::operator=(class cv::dnn::dnn4_v20211004::ResizeLayer const &)
??4RotatedRect@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::RotatedRect & cv::RotatedRect::operator=(class cv::RotatedRect &&)
??4RotatedRect@cv@@QEAAAEAV01@AEBV01@@Z;class cv::RotatedRect & cv::RotatedRect::operator=(class cv::RotatedRect const &)
??4RotationWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::RotationWarper & cv::detail::RotationWarper::operator=(class cv::detail::RotationWarper const &)
??4SIFT@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SIFT & cv::SIFT::operator=(class cv::SIFT &&)
??4SIFT@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SIFT & cv::SIFT::operator=(class cv::SIFT const &)
??4SVD@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SVD & cv::SVD::operator=(class cv::SVD &&)
??4SVD@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SVD & cv::SVD::operator=(class cv::SVD const &)
??4SVM@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::SVM & cv::ml::SVM::operator=(class cv::ml::SVM &&)
??4SVM@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::SVM & cv::ml::SVM::operator=(class cv::ml::SVM const &)
??4SVMSGD@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::SVMSGD & cv::ml::SVMSGD::operator=(class cv::ml::SVMSGD &&)
??4SVMSGD@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::SVMSGD & cv::ml::SVMSGD::operator=(class cv::ml::SVMSGD const &)
??4Scalar@own@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::own::Scalar & cv::gapi::own::Scalar::operator=(class cv::gapi::own::Scalar &&)
??4Scalar@own@gapi@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::gapi::own::Scalar & cv::gapi::own::Scalar::operator=(class cv::gapi::own::Scalar const &)
??4ScaleLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ScaleLayer & cv::dnn::dnn4_v20211004::ScaleLayer::operator=(class cv::dnn::dnn4_v20211004::ScaleLayer &&)
??4ScaleLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ScaleLayer & cv::dnn::dnn4_v20211004::ScaleLayer::operator=(class cv::dnn::dnn4_v20211004::ScaleLayer const &)
??4ScaleLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ScaleLayerInt8 & cv::dnn::dnn4_v20211004::ScaleLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ScaleLayerInt8 &&)
??4ScaleLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ScaleLayerInt8 & cv::dnn::dnn4_v20211004::ScaleLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ScaleLayerInt8 const &)
??4SeamFinder@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::SeamFinder & cv::detail::SeamFinder::operator=(class cv::detail::SeamFinder const &)
??4SegmentationModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::SegmentationModel & cv::dnn::dnn4_v20211004::SegmentationModel::operator=(class cv::dnn::dnn4_v20211004::SegmentationModel &&)
??4SegmentationModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::SegmentationModel & cv::dnn::dnn4_v20211004::SegmentationModel::operator=(class cv::dnn::dnn4_v20211004::SegmentationModel const &)
??4SepFilter2D@hal@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::hal::SepFilter2D & cv::hal::SepFilter2D::operator=(struct cv::hal::SepFilter2D const &)
??4ShiftLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ShiftLayer & cv::dnn::dnn4_v20211004::ShiftLayer::operator=(class cv::dnn::dnn4_v20211004::ShiftLayer &&)
??4ShiftLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ShiftLayer & cv::dnn::dnn4_v20211004::ShiftLayer::operator=(class cv::dnn::dnn4_v20211004::ShiftLayer const &)
??4ShiftLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ShiftLayerInt8 & cv::dnn::dnn4_v20211004::ShiftLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ShiftLayerInt8 &&)
??4ShiftLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ShiftLayerInt8 & cv::dnn::dnn4_v20211004::ShiftLayerInt8::operator=(class cv::dnn::dnn4_v20211004::ShiftLayerInt8 const &)
??4ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::ShuffleChannelLayer & cv::dnn::dnn4_v20211004::ShuffleChannelLayer::operator=(class cv::dnn::dnn4_v20211004::ShuffleChannelLayer &&)
??4ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::ShuffleChannelLayer & cv::dnn::dnn4_v20211004::ShuffleChannelLayer::operator=(class cv::dnn::dnn4_v20211004::ShuffleChannelLayer const &)
??4SigmoidLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::SigmoidLayer & cv::dnn::dnn4_v20211004::SigmoidLayer::operator=(class cv::dnn::dnn4_v20211004::SigmoidLayer &&)
??4SigmoidLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::SigmoidLayer & cv::dnn::dnn4_v20211004::SigmoidLayer::operator=(class cv::dnn::dnn4_v20211004::SigmoidLayer const &)
??4SimilarRects@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SimilarRects & cv::SimilarRects::operator=(class cv::SimilarRects &&)
??4SimilarRects@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SimilarRects & cv::SimilarRects::operator=(class cv::SimilarRects const &)
??4SimpleBlobDetector@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SimpleBlobDetector & cv::SimpleBlobDetector::operator=(class cv::SimpleBlobDetector &&)
??4SimpleBlobDetector@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SimpleBlobDetector & cv::SimpleBlobDetector::operator=(class cv::SimpleBlobDetector const &)
??4SimpleBlobDetectorImpl@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SimpleBlobDetectorImpl & cv::SimpleBlobDetectorImpl::operator=(class cv::SimpleBlobDetectorImpl &&)
??4SimpleBlobDetectorImpl@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SimpleBlobDetectorImpl & cv::SimpleBlobDetectorImpl::operator=(class cv::SimpleBlobDetectorImpl const &)
??4SliceLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::SliceLayer & cv::dnn::dnn4_v20211004::SliceLayer::operator=(class cv::dnn::dnn4_v20211004::SliceLayer &&)
??4SliceLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::SliceLayer & cv::dnn::dnn4_v20211004::SliceLayer::operator=(class cv::dnn::dnn4_v20211004::SliceLayer const &)
??4SoftmaxLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::SoftmaxLayer & cv::dnn::dnn4_v20211004::SoftmaxLayer::operator=(class cv::dnn::dnn4_v20211004::SoftmaxLayer &&)
??4SoftmaxLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::SoftmaxLayer & cv::dnn::dnn4_v20211004::SoftmaxLayer::operator=(class cv::dnn::dnn4_v20211004::SoftmaxLayer const &)
??4SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::SoftmaxLayerInt8 & cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::operator=(class cv::dnn::dnn4_v20211004::SoftmaxLayerInt8 &&)
??4SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::SoftmaxLayerInt8 & cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::operator=(class cv::dnn::dnn4_v20211004::SoftmaxLayerInt8 const &)
??4SparseMat@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SparseMat & cv::SparseMat::operator=(class cv::SparseMat const &)
??4SparseMat@cv@@QEAAAEAV01@AEBVMat@1@@Z;class cv::SparseMat & cv::SparseMat::operator=(class cv::Mat const &)
??4SparseMatConstIterator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SparseMatConstIterator & cv::SparseMatConstIterator::operator=(class cv::SparseMatConstIterator const &)
??4SparseMatIterator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SparseMatIterator & cv::SparseMatIterator::operator=(class cv::SparseMatIterator const &)
??4SparseOpticalFlow@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SparseOpticalFlow & cv::SparseOpticalFlow::operator=(class cv::SparseOpticalFlow &&)
??4SparseOpticalFlow@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SparseOpticalFlow & cv::SparseOpticalFlow::operator=(class cv::SparseOpticalFlow const &)
??4SparsePyrLKOpticalFlow@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SparsePyrLKOpticalFlow & cv::SparsePyrLKOpticalFlow::operator=(class cv::SparsePyrLKOpticalFlow &&)
??4SparsePyrLKOpticalFlow@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SparsePyrLKOpticalFlow & cv::SparsePyrLKOpticalFlow::operator=(class cv::SparsePyrLKOpticalFlow const &)
??4SphericalPortraitProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::SphericalPortraitProjector & cv::detail::SphericalPortraitProjector::operator=(struct cv::detail::SphericalPortraitProjector &&)
??4SphericalPortraitProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::SphericalPortraitProjector & cv::detail::SphericalPortraitProjector::operator=(struct cv::detail::SphericalPortraitProjector const &)
??4SphericalPortraitWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::SphericalPortraitWarper & cv::detail::SphericalPortraitWarper::operator=(class cv::detail::SphericalPortraitWarper &&)
??4SphericalPortraitWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::SphericalPortraitWarper & cv::detail::SphericalPortraitWarper::operator=(class cv::detail::SphericalPortraitWarper const &)
??4SphericalProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::SphericalProjector & cv::detail::SphericalProjector::operator=(struct cv::detail::SphericalProjector &&)
??4SphericalProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::SphericalProjector & cv::detail::SphericalProjector::operator=(struct cv::detail::SphericalProjector const &)
??4SphericalWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::SphericalWarper & cv::SphericalWarper::operator=(class cv::SphericalWarper &&)
??4SphericalWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::SphericalWarper & cv::SphericalWarper::operator=(class cv::SphericalWarper const &)
??4SphericalWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::SphericalWarper & cv::detail::SphericalWarper::operator=(class cv::detail::SphericalWarper &&)
??4SphericalWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::SphericalWarper & cv::detail::SphericalWarper::operator=(class cv::detail::SphericalWarper const &)
??4SphericalWarperGpu@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::SphericalWarperGpu & cv::detail::SphericalWarperGpu::operator=(class cv::detail::SphericalWarperGpu &&)
??4SphericalWarperGpu@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::SphericalWarperGpu & cv::detail::SphericalWarperGpu::operator=(class cv::detail::SphericalWarperGpu const &)
??4Split@DTrees@ml@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::ml::DTrees::Split & cv::ml::DTrees::Split::operator=(class cv::ml::DTrees::Split &&)
??4Split@DTrees@ml@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::ml::DTrees::Split & cv::ml::DTrees::Split::operator=(class cv::ml::DTrees::Split const &)
??4SplitLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::SplitLayer & cv::dnn::dnn4_v20211004::SplitLayer::operator=(class cv::dnn::dnn4_v20211004::SplitLayer &&)
??4SplitLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::SplitLayer & cv::dnn::dnn4_v20211004::SplitLayer::operator=(class cv::dnn::dnn4_v20211004::SplitLayer const &)
??4StatModel@ml@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ml::StatModel & cv::ml::StatModel::operator=(class cv::ml::StatModel &&)
??4StatModel@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::StatModel & cv::ml::StatModel::operator=(class cv::ml::StatModel const &)
??4StereoBM@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::StereoBM & cv::StereoBM::operator=(class cv::StereoBM &&)
??4StereoBM@cv@@QEAAAEAV01@AEBV01@@Z;class cv::StereoBM & cv::StereoBM::operator=(class cv::StereoBM const &)
??4StereoInitParam@cpu@calib3d@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::calib3d::cpu::StereoInitParam & cv::gapi::calib3d::cpu::StereoInitParam::operator=(struct cv::gapi::calib3d::cpu::StereoInitParam &&)
??4StereoInitParam@cpu@calib3d@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::calib3d::cpu::StereoInitParam & cv::gapi::calib3d::cpu::StereoInitParam::operator=(struct cv::gapi::calib3d::cpu::StereoInitParam const &)
??4StereoMatcher@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::StereoMatcher & cv::StereoMatcher::operator=(class cv::StereoMatcher &&)
??4StereoMatcher@cv@@QEAAAEAV01@AEBV01@@Z;class cv::StereoMatcher & cv::StereoMatcher::operator=(class cv::StereoMatcher const &)
??4StereoSGBM@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::StereoSGBM & cv::StereoSGBM::operator=(class cv::StereoSGBM &&)
??4StereoSGBM@cv@@QEAAAEAV01@AEBV01@@Z;class cv::StereoSGBM & cv::StereoSGBM::operator=(class cv::StereoSGBM const &)
??4StereoSetup@@QEAAAEAU0@$$QEAU0@@Z;struct StereoSetup & StereoSetup::operator=(struct StereoSetup &&)
??4StereoSetup@@QEAAAEAU0@AEBU0@@Z;struct StereoSetup & StereoSetup::operator=(struct StereoSetup const &)
??4StereographicProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::StereographicProjector & cv::detail::StereographicProjector::operator=(struct cv::detail::StereographicProjector &&)
??4StereographicProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::StereographicProjector & cv::detail::StereographicProjector::operator=(struct cv::detail::StereographicProjector const &)
??4StereographicWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::StereographicWarper & cv::StereographicWarper::operator=(class cv::StereographicWarper &&)
??4StereographicWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::StereographicWarper & cv::StereographicWarper::operator=(class cv::StereographicWarper const &)
??4StereographicWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::StereographicWarper & cv::detail::StereographicWarper::operator=(class cv::detail::StereographicWarper &&)
??4StereographicWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::StereographicWarper & cv::detail::StereographicWarper::operator=(class cv::detail::StereographicWarper const &)
??4Stitcher@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::Stitcher & cv::Stitcher::operator=(class cv::Stitcher &&)
??4Stitcher@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Stitcher & cv::Stitcher::operator=(class cv::Stitcher const &)
??4Stream@cuda@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::cuda::Stream & cv::cuda::Stream::operator=(class cv::cuda::Stream &&)
??4Stream@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::Stream & cv::cuda::Stream::operator=(class cv::cuda::Stream const &)
??4Subdiv2D@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::Subdiv2D & cv::Subdiv2D::operator=(class cv::Subdiv2D &&)
??4Subdiv2D@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Subdiv2D & cv::Subdiv2D::operator=(class cv::Subdiv2D const &)
??4SwishLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::SwishLayer & cv::dnn::dnn4_v20211004::SwishLayer::operator=(class cv::dnn::dnn4_v20211004::SwishLayer &&)
??4SwishLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::SwishLayer & cv::dnn::dnn4_v20211004::SwishLayer::operator=(class cv::dnn::dnn4_v20211004::SwishLayer const &)
??4TanHLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::TanHLayer & cv::dnn::dnn4_v20211004::TanHLayer::operator=(class cv::dnn::dnn4_v20211004::TanHLayer &&)
??4TanHLayer@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::TanHLayer & cv::dnn::dnn4_v20211004::TanHLayer::operator=(class cv::dnn::dnn4_v20211004::TanHLayer const &)
??4TargetArchs@cuda@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::cuda::TargetArchs & cv::cuda::TargetArchs::operator=(class cv::cuda::TargetArchs &&)
??4TargetArchs@cuda@cv@@QEAAAEAV012@AEBV012@@Z;class cv::cuda::TargetArchs & cv::cuda::TargetArchs::operator=(class cv::cuda::TargetArchs const &)
??4TermCriteria@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::TermCriteria & cv::TermCriteria::operator=(class cv::TermCriteria &&)
??4TermCriteria@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TermCriteria & cv::TermCriteria::operator=(class cv::TermCriteria const &)
??4Text@draw@wip@gapi@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::gapi::wip::draw::Text & cv::gapi::wip::draw::Text::operator=(struct cv::gapi::wip::draw::Text &&)
??4Text@draw@wip@gapi@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::gapi::wip::draw::Text & cv::gapi::wip::draw::Text::operator=(struct cv::gapi::wip::draw::Text const &)
??4TextDetectionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel & cv::dnn::dnn4_v20211004::TextDetectionModel::operator=(class cv::dnn::dnn4_v20211004::TextDetectionModel &&)
??4TextDetectionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel & cv::dnn::dnn4_v20211004::TextDetectionModel::operator=(class cv::dnn::dnn4_v20211004::TextDetectionModel const &)
??4TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_DB & cv::dnn::dnn4_v20211004::TextDetectionModel_DB::operator=(class cv::dnn::dnn4_v20211004::TextDetectionModel_DB &&)
??4TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_DB & cv::dnn::dnn4_v20211004::TextDetectionModel_DB::operator=(class cv::dnn::dnn4_v20211004::TextDetectionModel_DB const &)
??4TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST & cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::operator=(class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST &&)
??4TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST & cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::operator=(class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST const &)
??4TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::dnn::dnn4_v20211004::TextRecognitionModel & cv::dnn::dnn4_v20211004::TextRecognitionModel::operator=(class cv::dnn::dnn4_v20211004::TextRecognitionModel &&)
??4TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::dnn::dnn4_v20211004::TextRecognitionModel & cv::dnn::dnn4_v20211004::TextRecognitionModel::operator=(class cv::dnn::dnn4_v20211004::TextRecognitionModel const &)
??4Texture2D@ogl@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::ogl::Texture2D & cv::ogl::Texture2D::operator=(class cv::ogl::Texture2D &&)
??4Texture2D@ogl@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ogl::Texture2D & cv::ogl::Texture2D::operator=(class cv::ogl::Texture2D const &)
??4TickMeter@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::TickMeter & cv::TickMeter::operator=(class cv::TickMeter &&)
??4TickMeter@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TickMeter & cv::TickMeter::operator=(class cv::TickMeter const &)
??4Timelapser@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::Timelapser & cv::detail::Timelapser::operator=(class cv::detail::Timelapser const &)
??4TimelapserCrop@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::TimelapserCrop & cv::detail::TimelapserCrop::operator=(class cv::detail::TimelapserCrop &&)
??4TimelapserCrop@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::TimelapserCrop & cv::detail::TimelapserCrop::operator=(class cv::detail::TimelapserCrop const &)
??4Tonemap@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::Tonemap & cv::Tonemap::operator=(class cv::Tonemap &&)
??4Tonemap@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Tonemap & cv::Tonemap::operator=(class cv::Tonemap const &)
??4TonemapDrago@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::TonemapDrago & cv::TonemapDrago::operator=(class cv::TonemapDrago &&)
??4TonemapDrago@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TonemapDrago & cv::TonemapDrago::operator=(class cv::TonemapDrago const &)
??4TonemapMantiuk@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::TonemapMantiuk & cv::TonemapMantiuk::operator=(class cv::TonemapMantiuk &&)
??4TonemapMantiuk@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TonemapMantiuk & cv::TonemapMantiuk::operator=(class cv::TonemapMantiuk const &)
??4TonemapReinhard@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::TonemapReinhard & cv::TonemapReinhard::operator=(class cv::TonemapReinhard &&)
??4TonemapReinhard@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TonemapReinhard & cv::TonemapReinhard::operator=(class cv::TonemapReinhard const &)
??4TraceArg@details@trace@utils@cv@@QEAAAEAU01234@$$QEAU01234@@Z;struct cv::utils::trace::details::TraceArg & cv::utils::trace::details::TraceArg::operator=(struct cv::utils::trace::details::TraceArg &&)
??4TraceArg@details@trace@utils@cv@@QEAAAEAU01234@AEBU01234@@Z;struct cv::utils::trace::details::TraceArg & cv::utils::trace::details::TraceArg::operator=(struct cv::utils::trace::details::TraceArg const &)
??4Tracker@cv@@QEAAAEAV01@AEBV01@@Z;class cv::Tracker & cv::Tracker::operator=(class cv::Tracker const &)
??4TrackerDaSiamRPN@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TrackerDaSiamRPN & cv::TrackerDaSiamRPN::operator=(class cv::TrackerDaSiamRPN const &)
??4TrackerFeature@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerFeature & cv::detail::tracking::TrackerFeature::operator=(class cv::detail::tracking::TrackerFeature const &)
??4TrackerFeatureSet@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerFeatureSet & cv::detail::tracking::TrackerFeatureSet::operator=(class cv::detail::tracking::TrackerFeatureSet const &)
??4TrackerGOTURN@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TrackerGOTURN & cv::TrackerGOTURN::operator=(class cv::TrackerGOTURN const &)
??4TrackerMIL@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TrackerMIL & cv::TrackerMIL::operator=(class cv::TrackerMIL const &)
??4TrackerModel@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerModel & cv::detail::tracking::TrackerModel::operator=(class cv::detail::tracking::TrackerModel const &)
??4TrackerSampler@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerSampler & cv::detail::tracking::TrackerSampler::operator=(class cv::detail::tracking::TrackerSampler const &)
??4TrackerSamplerAlgorithm@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerSamplerAlgorithm & cv::detail::tracking::TrackerSamplerAlgorithm::operator=(class cv::detail::tracking::TrackerSamplerAlgorithm const &)
??4TrackerSamplerCSC@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerSamplerCSC & cv::detail::tracking::TrackerSamplerCSC::operator=(class cv::detail::tracking::TrackerSamplerCSC const &)
??4TrackerStateEstimator@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerStateEstimator & cv::detail::tracking::TrackerStateEstimator::operator=(class cv::detail::tracking::TrackerStateEstimator const &)
??4TrackerStateEstimatorMILBoosting@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerStateEstimatorMILBoosting & cv::detail::tracking::TrackerStateEstimatorMILBoosting::operator=(class cv::detail::tracking::TrackerStateEstimatorMILBoosting const &)
??4TrackerTargetState@tracking@detail@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::detail::tracking::TrackerTargetState & cv::detail::tracking::TrackerTargetState::operator=(class cv::detail::tracking::TrackerTargetState const &)
??4TrainData@ml@cv@@QEAAAEAV012@AEBV012@@Z;class cv::ml::TrainData & cv::ml::TrainData::operator=(class cv::ml::TrainData const &)
??4TransverseMercatorProjector@detail@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::detail::TransverseMercatorProjector & cv::detail::TransverseMercatorProjector::operator=(struct cv::detail::TransverseMercatorProjector &&)
??4TransverseMercatorProjector@detail@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::detail::TransverseMercatorProjector & cv::detail::TransverseMercatorProjector::operator=(struct cv::detail::TransverseMercatorProjector const &)
??4TransverseMercatorWarper@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::TransverseMercatorWarper & cv::TransverseMercatorWarper::operator=(class cv::TransverseMercatorWarper &&)
??4TransverseMercatorWarper@cv@@QEAAAEAV01@AEBV01@@Z;class cv::TransverseMercatorWarper & cv::TransverseMercatorWarper::operator=(class cv::TransverseMercatorWarper const &)
??4TransverseMercatorWarper@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::TransverseMercatorWarper & cv::detail::TransverseMercatorWarper::operator=(class cv::detail::TransverseMercatorWarper &&)
??4TransverseMercatorWarper@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::TransverseMercatorWarper & cv::detail::TransverseMercatorWarper::operator=(class cv::detail::TransverseMercatorWarper const &)
??4UIBackend@highgui_backend@cv@@QEAAAEAV012@AEBV012@@Z;class cv::highgui_backend::UIBackend & cv::highgui_backend::UIBackend::operator=(class cv::highgui_backend::UIBackend const &)
??4UITrackbar@highgui_backend@cv@@QEAAAEAV012@AEBV012@@Z;class cv::highgui_backend::UITrackbar & cv::highgui_backend::UITrackbar::operator=(class cv::highgui_backend::UITrackbar const &)
??4UIWindow@highgui_backend@cv@@QEAAAEAV012@AEBV012@@Z;class cv::highgui_backend::UIWindow & cv::highgui_backend::UIWindow::operator=(class cv::highgui_backend::UIWindow const &)
??4UIWindowBase@highgui_backend@cv@@QEAAAEAV012@AEBV012@@Z;class cv::highgui_backend::UIWindowBase & cv::highgui_backend::UIWindowBase::operator=(class cv::highgui_backend::UIWindowBase const &)
??4UMat@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::UMat & cv::UMat::operator=(class cv::UMat &&)
??4UMat@cv@@QEAAAEAV01@AEBV01@@Z;class cv::UMat & cv::UMat::operator=(class cv::UMat const &)
??4UMat@cv@@QEAAAEAV01@AEBV?$Scalar_@N@1@@Z;class cv::UMat & cv::UMat::operator=(class cv::Scalar_<double> const &)
??4UMatData@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::UMatData & cv::UMatData::operator=(struct cv::UMatData const &)
??4UMatDataAutoLock@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::UMatDataAutoLock & cv::UMatDataAutoLock::operator=(struct cv::UMatDataAutoLock const &)
??4UsacParams@cv@@QEAAAEAU01@$$QEAU01@@Z;struct cv::UsacParams & cv::UsacParams::operator=(struct cv::UsacParams &&)
??4UsacParams@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::UsacParams & cv::UsacParams::operator=(struct cv::UsacParams const &)
??4UserContext@Context@ocl@cv@@QEAAAEAV0123@AEBV0123@@Z;class cv::ocl::Context::UserContext & cv::ocl::Context::UserContext::operator=(class cv::ocl::Context::UserContext const &)
??4VariationalRefinement@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::VariationalRefinement & cv::VariationalRefinement::operator=(class cv::VariationalRefinement &&)
??4VariationalRefinement@cv@@QEAAAEAV01@AEBV01@@Z;class cv::VariationalRefinement & cv::VariationalRefinement::operator=(class cv::VariationalRefinement const &)
??4Vertex@Subdiv2D@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::Subdiv2D::Vertex & cv::Subdiv2D::Vertex::operator=(struct cv::Subdiv2D::Vertex &&)
??4Vertex@Subdiv2D@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::Subdiv2D::Vertex & cv::Subdiv2D::Vertex::operator=(struct cv::Subdiv2D::Vertex const &)
??4VideoCapture@cv@@QEAAAEAV01@AEBV01@@Z;class cv::VideoCapture & cv::VideoCapture::operator=(class cv::VideoCapture const &)
??4VideoWriter@cv@@QEAAAEAV01@AEBV01@@Z;class cv::VideoWriter & cv::VideoWriter::operator=(class cv::VideoWriter const &)
??4View@RMat@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::RMat::View & cv::RMat::View::operator=(class cv::RMat::View &&)
??4View@fluid@gapi@cv@@QEAAAEAV0123@$$QEAV0123@@Z;class cv::gapi::fluid::View & cv::gapi::fluid::View::operator=(class cv::gapi::fluid::View &&)
??4VoronoiSeamFinder@detail@cv@@QEAAAEAV012@$$QEAV012@@Z;class cv::detail::VoronoiSeamFinder & cv::detail::VoronoiSeamFinder::operator=(class cv::detail::VoronoiSeamFinder &&)
??4VoronoiSeamFinder@detail@cv@@QEAAAEAV012@AEBV012@@Z;class cv::detail::VoronoiSeamFinder & cv::detail::VoronoiSeamFinder::operator=(class cv::detail::VoronoiSeamFinder const &)
??4WarperCreator@cv@@QEAAAEAV01@AEBV01@@Z;class cv::WarperCreator & cv::WarperCreator::operator=(class cv::WarperCreator const &)
??4WriteStructContext@internal@cv@@QEAAAEAV012@AEBV012@@Z;class cv::internal::WriteStructContext & cv::internal::WriteStructContext::operator=(class cv::internal::WriteStructContext const &)
??4_InputArray@cv@@QEAAAEAV01@AEBV01@@Z;class cv::_InputArray & cv::_InputArray::operator=(class cv::_InputArray const &)
??4_InputOutputArray@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::_InputOutputArray & cv::_InputOutputArray::operator=(class cv::_InputOutputArray &&)
??4_InputOutputArray@cv@@QEAAAEAV01@AEBV01@@Z;class cv::_InputOutputArray & cv::_InputOutputArray::operator=(class cv::_InputOutputArray const &)
??4_OutputArray@cv@@QEAAAEAV01@$$QEAV01@@Z;class cv::_OutputArray & cv::_OutputArray::operator=(class cv::_OutputArray &&)
??4_OutputArray@cv@@QEAAAEAV01@AEBV01@@Z;class cv::_OutputArray & cv::_OutputArray::operator=(class cv::_OutputArray const &)
??4queue_capacity@streaming@gapi@cv@@QEAAAEAU0123@$$QEAU0123@@Z;struct cv::gapi::streaming::queue_capacity & cv::gapi::streaming::queue_capacity::operator=(struct cv::gapi::streaming::queue_capacity &&)
??4queue_capacity@streaming@gapi@cv@@QEAAAEAU0123@AEBU0123@@Z;struct cv::gapi::streaming::queue_capacity & cv::gapi::streaming::queue_capacity::operator=(struct cv::gapi::streaming::queue_capacity const &)
??4softdouble@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softdouble & cv::softdouble::operator=(struct cv::softdouble const &)
??4softfloat@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softfloat & cv::softfloat::operator=(struct cv::softfloat const &)
??4use_only@gapi@cv@@QEAAAEAU012@$$QEAU012@@Z;struct cv::gapi::use_only & cv::gapi::use_only::operator=(struct cv::gapi::use_only &&)
??4use_only@gapi@cv@@QEAAAEAU012@AEBU012@@Z;struct cv::gapi::use_only & cv::gapi::use_only::operator=(struct cv::gapi::use_only const &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAD@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(char &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAE@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(unsigned char &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAF@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(short &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAG@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(unsigned short &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAH@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(int &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAI@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(unsigned int &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAM@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(float &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAN@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(double &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEA_K@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(unsigned __int64 &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@AEA_N@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(bool &)
??5ByteMemoryInStream@s11n@gapi@cv@@UEAAAEAUIIStream@123@V?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::ByteMemoryInStream::operator>>(class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >)
??5VideoCapture@cv@@UEAAAEAV01@AEAVMat@1@@Z;class cv::VideoCapture & cv::VideoCapture::operator>>(class cv::Mat &)
??5VideoCapture@cv@@UEAAAEAV01@AEAVUMat@1@@Z;class cv::VideoCapture & cv::VideoCapture::operator>>(class cv::UMat &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUCircle@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::Circle &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUConstValue@gimpl@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gimpl::ConstValue &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUData@gimpl@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gimpl::Data &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUFText@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::FText &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUGArrayDesc@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::GArrayDesc &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUGFrameDesc@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::GFrameDesc &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUGKernel@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::GKernel &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUGMatDesc@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::GMatDesc &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUGOpaqueDesc@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::GOpaqueDesc &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUGScalarDesc@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::GScalarDesc &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUImage@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::Image &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAULine@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::Line &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUMosaic@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::Mosaic &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUOp@gimpl@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gimpl::Op &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUPoly@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::Poly &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUProtocol@gimpl@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gimpl::Protocol &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAURcDesc@gimpl@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gimpl::RcDesc &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAURect@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::Rect &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUText@draw@wip@12@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::gapi::wip::draw::Text &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAUmonostate@util@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,struct cv::util::monostate &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAV?$Point_@H@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::Point_<int> &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAV?$Point_@M@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::Point_<float> &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAV?$Rect_@H@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::Rect_<int> &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAV?$Scalar_@N@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::Scalar_<double> &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAV?$Size_@H@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::Size_<int> &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAV?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class std::shared_ptr<class cv::gapi::wip::IStreamSource> &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVDataObjectCounter@gimpl@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::gimpl::DataObjectCounter &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVGArg@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::GArg &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVMat@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::Mat &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVMediaFrame@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::MediaFrame &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVOpaqueRef@detail@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::detail::OpaqueRef &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVRMat@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::RMat &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVUMat@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::UMat &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAVVectorRef@detail@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,class cv::detail::VectorRef &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAW4ArgKind@detail@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,enum cv::detail::ArgKind &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAW4GShape@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,enum cv::GShape &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAW4OpaqueKind@detail@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,enum cv::detail::OpaqueKind &)
??5s11n@gapi@cv@@YAAEAUIIStream@012@AEAU3012@AEAW4Storage@Data@gimpl@2@@Z;struct cv::gapi::s11n::IIStream & cv::gapi::s11n::operator>>(struct cv::gapi::s11n::IIStream &,enum cv::gimpl::Data::Storage &)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@D@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(char)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@E@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(unsigned char)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@F@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(short)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@G@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(unsigned short)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@H@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(int)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@I@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(unsigned int)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@M@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(float)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@N@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(double)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@_K@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(unsigned __int64)
??6ByteMemoryOutStream@s11n@gapi@cv@@UEAAAEAUIOStream@123@_N@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::ByteMemoryOutStream::operator<<(bool)
??6VideoWriter@cv@@UEAAAEAV01@AEBVMat@1@@Z;class cv::VideoWriter & cv::VideoWriter::operator<<(class cv::Mat const &)
??6VideoWriter@cv@@UEAAAEAV01@AEBVUMat@1@@Z;class cv::VideoWriter & cv::VideoWriter::operator<<(class cv::UMat const &)
??6cv@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBUGFrameDesc@0@@Z;class std::basic_ostream<char,struct std::char_traits<char> > & cv::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,struct cv::GFrameDesc const &)
??6cv@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBUGMatDesc@0@@Z;class std::basic_ostream<char,struct std::char_traits<char> > & cv::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,struct cv::GMatDesc const &)
??6cv@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBV?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@0@@Z;class std::basic_ostream<char,struct std::char_traits<char> > & cv::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> const &)
??6cv@@YAAEAVFileStorage@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::FileStorage & cv::operator<<(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUCircle@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::Circle const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUConstValue@gimpl@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gimpl::ConstValue const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUData@gimpl@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gimpl::Data const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUFText@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::FText const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUGArrayDesc@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::GArrayDesc const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUGCompileArg@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::GCompileArg const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUGFrameDesc@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::GFrameDesc const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUGKernel@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::GKernel const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUGMatDesc@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::GMatDesc const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUGOpaqueDesc@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::GOpaqueDesc const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUGScalarDesc@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::GScalarDesc const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUImage@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::Image const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBULine@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::Line const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUMosaic@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::Mosaic const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUOp@gimpl@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gimpl::Op const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUPoly@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::Poly const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUProtocol@gimpl@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gimpl::Protocol const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBURcDesc@gimpl@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gimpl::RcDesc const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBURect@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::Rect const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBUText@draw@wip@12@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::gapi::wip::draw::Text const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBV?$Point_@H@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::Point_<int> const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBV?$Point_@M@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::Point_<float> const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBV?$Rect_@H@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::Rect_<int> const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBV?$Scalar_@N@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::Scalar_<double> const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBV?$Size_@H@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::Size_<int> const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBV?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class std::shared_ptr<class cv::gapi::wip::IStreamSource> const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVDataObjectCounter@gimpl@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::gimpl::DataObjectCounter const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVGArg@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::GArg const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVMat@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::Mat const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVMediaFrame@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::MediaFrame const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVOpaqueRef@detail@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::detail::OpaqueRef const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVRMat@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::RMat const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVUMat@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::UMat const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@AEBVVectorRef@detail@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,class cv::detail::VectorRef const &)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@Umonostate@util@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,struct cv::util::monostate)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@W4ArgKind@detail@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,enum cv::detail::ArgKind)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@W4GShape@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,enum cv::GShape)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@W4OpaqueKind@detail@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,enum cv::detail::OpaqueKind)
??6s11n@gapi@cv@@YAAEAUIOStream@012@AEAU3012@W4Storage@Data@gimpl@2@@Z;struct cv::gapi::s11n::IOStream & cv::gapi::s11n::operator<<(struct cv::gapi::s11n::IOStream &,enum cv::gimpl::Data::Storage)
??8CfgParam@onevpl@wip@gapi@cv@@QEBA_NAEBU01234@@Z;bool cv::gapi::wip::onevpl::CfgParam::operator==(struct cv::gapi::wip::onevpl::CfgParam const &)
??8GArrayDesc@cv@@QEBA_NAEBU01@@Z;bool cv::GArrayDesc::operator==(struct cv::GArrayDesc const &)
??8GBackend@gapi@cv@@QEBA_NAEBV012@@Z;bool cv::gapi::GBackend::operator==(class cv::gapi::GBackend const &)
??8GFrameDesc@cv@@QEBA_NAEBU01@@Z;bool cv::GFrameDesc::operator==(struct cv::GFrameDesc const &)
??8GMatDesc@cv@@QEBA_NAEBU01@@Z;bool cv::GMatDesc::operator==(struct cv::GMatDesc const &)
??8GOpaqueDesc@cv@@QEBA_NAEBU01@@Z;bool cv::GOpaqueDesc::operator==(struct cv::GOpaqueDesc const &)
??8GScalarDesc@cv@@QEBA_NAEBU01@@Z;bool cv::GScalarDesc::operator==(struct cv::GScalarDesc const &)
??8MatSize@cv@@QEBA_NAEBU01@@Z;bool cv::MatSize::operator==(struct cv::MatSize const &)
??8RNG@cv@@QEBA_NAEBV01@@Z;bool cv::RNG::operator==(class cv::RNG const &)
??8cv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator==(class cv::GMat const &,class cv::GMat const &)
??8cv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator==(class cv::GMat const &,class cv::GScalar const &)
??8cv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator==(class cv::GScalar const &,class cv::GMat const &)
??8cv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator==(class cv::Mat const &,class cv::Mat const &)
??8cv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator==(class cv::Mat const &,double)
??8cv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator==(double,class cv::Mat const &)
??8cv@@YA_NAEBVFileNodeIterator@0@0@Z;bool cv::operator==(class cv::FileNodeIterator const &,class cv::FileNodeIterator const &)
??8softdouble@cv@@QEBA_NAEBU01@@Z;bool cv::softdouble::operator==(struct cv::softdouble const &)
??8softfloat@cv@@QEBA_NAEBU01@@Z;bool cv::softfloat::operator==(struct cv::softfloat const &)
??9CfgParam@onevpl@wip@gapi@cv@@QEBA_NAEBU01234@@Z;bool cv::gapi::wip::onevpl::CfgParam::operator!=(struct cv::gapi::wip::onevpl::CfgParam const &)
??9GMatDesc@cv@@QEBA_NAEBU01@@Z;bool cv::GMatDesc::operator!=(struct cv::GMatDesc const &)
??9GScalarDesc@cv@@QEBA_NAEBU01@@Z;bool cv::GScalarDesc::operator!=(struct cv::GScalarDesc const &)
??9MatSize@cv@@QEBA_NAEBU01@@Z;bool cv::MatSize::operator!=(struct cv::MatSize const &)
??9cv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator!=(class cv::GMat const &,class cv::GMat const &)
??9cv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator!=(class cv::GMat const &,class cv::GScalar const &)
??9cv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator!=(class cv::GScalar const &,class cv::GMat const &)
??9cv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator!=(class cv::Mat const &,class cv::Mat const &)
??9cv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator!=(class cv::Mat const &,double)
??9cv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator!=(double,class cv::Mat const &)
??9cv@@YA_NAEBVFileNodeIterator@0@0@Z;bool cv::operator!=(class cv::FileNodeIterator const &,class cv::FileNodeIterator const &)
??9softdouble@cv@@QEBA_NAEBU01@@Z;bool cv::softdouble::operator!=(struct cv::softdouble const &)
??9softfloat@cv@@QEBA_NAEBU01@@Z;bool cv::softfloat::operator!=(struct cv::softfloat const &)
??AFileNode@cv@@QEBA?AV01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::FileNode cv::FileNode::operator[](class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??AFileNode@cv@@QEBA?AV01@H@Z;class cv::FileNode cv::FileNode::operator[](int)
??AFileNode@cv@@QEBA?AV01@PEBD@Z;class cv::FileNode cv::FileNode::operator[](char const *)
??AFileStorage@cv@@QEBA?AVFileNode@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::FileNode cv::FileStorage::operator[](class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
??AFileStorage@cv@@QEBA?AVFileNode@1@PEBD@Z;class cv::FileNode cv::FileStorage::operator[](char const *)
??AMatConstIterator@cv@@QEBAPEBE_J@Z;unsigned char const * cv::MatConstIterator::operator[](__int64)
??AMatSize@cv@@QEAAAEAHH@Z;int & cv::MatSize::operator[](int)
??AMatSize@cv@@QEBAAEBHH@Z;int const & cv::MatSize::operator[](int)
??AMatStep@cv@@QEAAAEA_KH@Z;unsigned __int64 & cv::MatStep::operator[](int)
??AMatStep@cv@@QEBAAEB_KH@Z;unsigned __int64 const & cv::MatStep::operator[](int)
??AScalar@own@gapi@cv@@QEAAAEANH@Z;double & cv::gapi::own::Scalar::operator[](int)
??AScalar@own@gapi@cv@@QEBAAEBNH@Z;double const & cv::gapi::own::Scalar::operator[](int)
??BFileNode@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;cv::FileNode::operator class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)
??BFileNode@cv@@QEBAHXZ;cv::FileNode::operator int(void)
??BFileNode@cv@@QEBAMXZ;cv::FileNode::operator float(void)
??BFileNode@cv@@QEBANXZ;cv::FileNode::operator double(void)
??BGCompiled@cv@@QEBA_NXZ;cv::GCompiled::operator bool(void)
??BGStreamingCompiled@cv@@QEBA_NXZ;cv::GStreamingCompiled::operator bool(void)
??BGpuMatND@cuda@cv@@QEBA?AVGpuMat@12@XZ;cv::cuda::GpuMatND::operator class cv::cuda::GpuMat(void)
??BMatExpr@cv@@QEBA?AVMat@1@XZ;cv::MatExpr::operator class cv::Mat(void)
??BMatSize@cv@@QEBAPEBHXZ;cv::MatSize::operator int const *(void)
??BMatStep@cv@@QEBA_KXZ;cv::MatStep::operator unsigned __int64(void)
??BModel@dnn4_v20211004@dnn@cv@@QEBAAEAVNet@123@XZ;cv::dnn::dnn4_v20211004::Model::operator class cv::dnn::dnn4_v20211004::Net &(void)
??BProgramEntry@internal@ocl@cv@@QEBAAEAVProgramSource@23@XZ;cv::ocl::internal::ProgramEntry::operator class cv::ocl::ProgramSource &(void)
??BRNG@cv@@QEAACXZ;cv::RNG::operator signed char(void)
??BRNG@cv@@QEAAEXZ;cv::RNG::operator unsigned char(void)
??BRNG@cv@@QEAAFXZ;cv::RNG::operator short(void)
??BRNG@cv@@QEAAGXZ;cv::RNG::operator unsigned short(void)
??BRNG@cv@@QEAAHXZ;cv::RNG::operator int(void)
??BRNG@cv@@QEAAIXZ;cv::RNG::operator unsigned int(void)
??BRNG@cv@@QEAAMXZ;cv::RNG::operator float(void)
??BRNG@cv@@QEAANXZ;cv::RNG::operator double(void)
??BRNG_MT19937@cv@@QEAAHXZ;cv::RNG_MT19937::operator int(void)
??BRNG_MT19937@cv@@QEAAIXZ;cv::RNG_MT19937::operator unsigned int(void)
??BRNG_MT19937@cv@@QEAAMXZ;cv::RNG_MT19937::operator float(void)
??BRNG_MT19937@cv@@QEAANXZ;cv::RNG_MT19937::operator double(void)
??BStream@cuda@cv@@QEBAP8012@EBAXXZXZ;cv::cuda::Stream::operator void ( cv::cuda::Stream::*)(void)(void)
??BView@fluid@gapi@cv@@QEBA_NXZ;cv::gapi::fluid::View::operator bool(void)
??Bsoftdouble@cv@@QEBA?AUsoftfloat@1@XZ;cv::softdouble::operator struct cv::softfloat(void)
??Bsoftdouble@cv@@QEBANXZ;cv::softdouble::operator double(void)
??Bsoftfloat@cv@@QEBA?AUsoftdouble@1@XZ;cv::softfloat::operator struct cv::softdouble(void)
??Bsoftfloat@cv@@QEBAMXZ;cv::softfloat::operator float(void)
??DFileNodeIterator@cv@@QEBA?AVFileNode@1@XZ;class cv::FileNode cv::FileNodeIterator::operator*(void)
??DLineIterator@cv@@QEAAPEAEXZ;unsigned char * cv::LineIterator::operator*(void)
??DMatConstIterator@cv@@QEBAPEBEXZ;unsigned char const * cv::MatConstIterator::operator*(void)
??Dcv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator*(class cv::GMat const &,class cv::GScalar const &)
??Dcv@@YA?AVGMat@0@AEBV10@M@Z;class cv::GMat cv::operator*(class cv::GMat const &,float)
??Dcv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator*(class cv::GScalar const &,class cv::GMat const &)
??Dcv@@YA?AVGMat@0@MAEBV10@@Z;class cv::GMat cv::operator*(float,class cv::GMat const &)
??Dcv@@YA?AVMatExpr@0@AEBV10@0@Z;class cv::MatExpr cv::operator*(class cv::MatExpr const &,class cv::MatExpr const &)
??Dcv@@YA?AVMatExpr@0@AEBV10@AEBVMat@0@@Z;class cv::MatExpr cv::operator*(class cv::MatExpr const &,class cv::Mat const &)
??Dcv@@YA?AVMatExpr@0@AEBV10@N@Z;class cv::MatExpr cv::operator*(class cv::MatExpr const &,double)
??Dcv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator*(class cv::Mat const &,class cv::Mat const &)
??Dcv@@YA?AVMatExpr@0@AEBVMat@0@AEBV10@@Z;class cv::MatExpr cv::operator*(class cv::Mat const &,class cv::MatExpr const &)
??Dcv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator*(class cv::Mat const &,double)
??Dcv@@YA?AVMatExpr@0@NAEBV10@@Z;class cv::MatExpr cv::operator*(double,class cv::MatExpr const &)
??Dcv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator*(double,class cv::Mat const &)
??Dsoftdouble@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softdouble cv::softdouble::operator*(struct cv::softdouble const &)
??Dsoftfloat@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softfloat cv::softfloat::operator*(struct cv::softfloat const &)
??EFileNodeIterator@cv@@QEAA?AV01@H@Z;class cv::FileNodeIterator cv::FileNodeIterator::operator++(int)
??EFileNodeIterator@cv@@QEAAAEAV01@XZ;class cv::FileNodeIterator & cv::FileNodeIterator::operator++(void)
??ELineIterator@cv@@QEAA?AV01@H@Z;class cv::LineIterator cv::LineIterator::operator++(int)
??ELineIterator@cv@@QEAAAEAV01@XZ;class cv::LineIterator & cv::LineIterator::operator++(void)
??EMatConstIterator@cv@@QEAA?AV01@H@Z;class cv::MatConstIterator cv::MatConstIterator::operator++(int)
??EMatConstIterator@cv@@QEAAAEAV01@XZ;class cv::MatConstIterator & cv::MatConstIterator::operator++(void)
??ENAryMatIterator@cv@@QEAA?AV01@H@Z;class cv::NAryMatIterator cv::NAryMatIterator::operator++(int)
??ENAryMatIterator@cv@@QEAAAEAV01@XZ;class cv::NAryMatIterator & cv::NAryMatIterator::operator++(void)
??ESparseMatConstIterator@cv@@QEAA?AV01@H@Z;class cv::SparseMatConstIterator cv::SparseMatConstIterator::operator++(int)
??ESparseMatConstIterator@cv@@QEAAAEAV01@XZ;class cv::SparseMatConstIterator & cv::SparseMatConstIterator::operator++(void)
??ESparseMatIterator@cv@@QEAA?AV01@H@Z;class cv::SparseMatIterator cv::SparseMatIterator::operator++(int)
??ESparseMatIterator@cv@@QEAAAEAV01@XZ;class cv::SparseMatIterator & cv::SparseMatIterator::operator++(void)
??FMatConstIterator@cv@@QEAA?AV01@H@Z;class cv::MatConstIterator cv::MatConstIterator::operator--(int)
??FMatConstIterator@cv@@QEAAAEAV01@XZ;class cv::MatConstIterator & cv::MatConstIterator::operator--(void)
??Gcv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator-(class cv::GMat const &,class cv::GMat const &)
??Gcv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator-(class cv::GMat const &,class cv::GScalar const &)
??Gcv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator-(class cv::GScalar const &,class cv::GMat const &)
??Gcv@@YA?AVMatExpr@0@AEBV10@0@Z;class cv::MatExpr cv::operator-(class cv::MatExpr const &,class cv::MatExpr const &)
??Gcv@@YA?AVMatExpr@0@AEBV10@@Z;class cv::MatExpr cv::operator-(class cv::MatExpr const &)
??Gcv@@YA?AVMatExpr@0@AEBV10@AEBV?$Scalar_@N@0@@Z;class cv::MatExpr cv::operator-(class cv::MatExpr const &,class cv::Scalar_<double> const &)
??Gcv@@YA?AVMatExpr@0@AEBV10@AEBVMat@0@@Z;class cv::MatExpr cv::operator-(class cv::MatExpr const &,class cv::Mat const &)
??Gcv@@YA?AVMatExpr@0@AEBV?$Scalar_@N@0@AEBV10@@Z;class cv::MatExpr cv::operator-(class cv::Scalar_<double> const &,class cv::MatExpr const &)
??Gcv@@YA?AVMatExpr@0@AEBV?$Scalar_@N@0@AEBVMat@0@@Z;class cv::MatExpr cv::operator-(class cv::Scalar_<double> const &,class cv::Mat const &)
??Gcv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator-(class cv::Mat const &,class cv::Mat const &)
??Gcv@@YA?AVMatExpr@0@AEBVMat@0@@Z;class cv::MatExpr cv::operator-(class cv::Mat const &)
??Gcv@@YA?AVMatExpr@0@AEBVMat@0@AEBV10@@Z;class cv::MatExpr cv::operator-(class cv::Mat const &,class cv::MatExpr const &)
??Gcv@@YA?AVMatExpr@0@AEBVMat@0@AEBV?$Scalar_@N@0@@Z;class cv::MatExpr cv::operator-(class cv::Mat const &,class cv::Scalar_<double> const &)
??Gsoftdouble@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softdouble cv::softdouble::operator-(struct cv::softdouble const &)
??Gsoftdouble@cv@@QEBA?AU01@XZ;struct cv::softdouble cv::softdouble::operator-(void)
??Gsoftfloat@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softfloat cv::softfloat::operator-(struct cv::softfloat const &)
??Gsoftfloat@cv@@QEBA?AU01@XZ;struct cv::softfloat cv::softfloat::operator-(void)
??HIntrinsicParams@internal@cv@@QEAA?AU012@AEBVMat@2@@Z;struct cv::internal::IntrinsicParams cv::internal::IntrinsicParams::operator+(class cv::Mat const &)
??Hcv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator+(class cv::GMat const &,class cv::GMat const &)
??Hcv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator+(class cv::GMat const &,class cv::GScalar const &)
??Hcv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator+(class cv::GScalar const &,class cv::GMat const &)
??Hcv@@YA?AVMatExpr@0@AEBV10@0@Z;class cv::MatExpr cv::operator+(class cv::MatExpr const &,class cv::MatExpr const &)
??Hcv@@YA?AVMatExpr@0@AEBV10@AEBV?$Scalar_@N@0@@Z;class cv::MatExpr cv::operator+(class cv::MatExpr const &,class cv::Scalar_<double> const &)
??Hcv@@YA?AVMatExpr@0@AEBV10@AEBVMat@0@@Z;class cv::MatExpr cv::operator+(class cv::MatExpr const &,class cv::Mat const &)
??Hcv@@YA?AVMatExpr@0@AEBV?$Scalar_@N@0@AEBV10@@Z;class cv::MatExpr cv::operator+(class cv::Scalar_<double> const &,class cv::MatExpr const &)
??Hcv@@YA?AVMatExpr@0@AEBV?$Scalar_@N@0@AEBVMat@0@@Z;class cv::MatExpr cv::operator+(class cv::Scalar_<double> const &,class cv::Mat const &)
??Hcv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator+(class cv::Mat const &,class cv::Mat const &)
??Hcv@@YA?AVMatExpr@0@AEBVMat@0@AEBV10@@Z;class cv::MatExpr cv::operator+(class cv::Mat const &,class cv::MatExpr const &)
??Hcv@@YA?AVMatExpr@0@AEBVMat@0@AEBV?$Scalar_@N@0@@Z;class cv::MatExpr cv::operator+(class cv::Mat const &,class cv::Scalar_<double> const &)
??Hsoftdouble@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softdouble cv::softdouble::operator+(struct cv::softdouble const &)
??Hsoftfloat@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softfloat cv::softfloat::operator+(struct cv::softfloat const &)
??Icv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator&(class cv::GMat const &,class cv::GMat const &)
??Icv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator&(class cv::GMat const &,class cv::GScalar const &)
??Icv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator&(class cv::GScalar const &,class cv::GMat const &)
??Icv@@YA?AVMatExpr@0@AEBV?$Scalar_@N@0@AEBVMat@0@@Z;class cv::MatExpr cv::operator&(class cv::Scalar_<double> const &,class cv::Mat const &)
??Icv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator&(class cv::Mat const &,class cv::Mat const &)
??Icv@@YA?AVMatExpr@0@AEBVMat@0@AEBV?$Scalar_@N@0@@Z;class cv::MatExpr cv::operator&(class cv::Mat const &,class cv::Scalar_<double> const &)
??Kcv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator/(class cv::GMat const &,class cv::GMat const &)
??Kcv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator/(class cv::GMat const &,class cv::GScalar const &)
??Kcv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator/(class cv::GScalar const &,class cv::GMat const &)
??Kcv@@YA?AVMatExpr@0@AEBV10@0@Z;class cv::MatExpr cv::operator/(class cv::MatExpr const &,class cv::MatExpr const &)
??Kcv@@YA?AVMatExpr@0@AEBV10@AEBVMat@0@@Z;class cv::MatExpr cv::operator/(class cv::MatExpr const &,class cv::Mat const &)
??Kcv@@YA?AVMatExpr@0@AEBV10@N@Z;class cv::MatExpr cv::operator/(class cv::MatExpr const &,double)
??Kcv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator/(class cv::Mat const &,class cv::Mat const &)
??Kcv@@YA?AVMatExpr@0@AEBVMat@0@AEBV10@@Z;class cv::MatExpr cv::operator/(class cv::Mat const &,class cv::MatExpr const &)
??Kcv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator/(class cv::Mat const &,double)
??Kcv@@YA?AVMatExpr@0@NAEBV10@@Z;class cv::MatExpr cv::operator/(double,class cv::MatExpr const &)
??Kcv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator/(double,class cv::Mat const &)
??Ksoftdouble@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softdouble cv::softdouble::operator/(struct cv::softdouble const &)
??Ksoftfloat@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softfloat cv::softfloat::operator/(struct cv::softfloat const &)
??Lsoftdouble@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softdouble cv::softdouble::operator%(struct cv::softdouble const &)
??Lsoftfloat@cv@@QEBA?AU01@AEBU01@@Z;struct cv::softfloat cv::softfloat::operator%(struct cv::softfloat const &)
??MCfgParam@onevpl@wip@gapi@cv@@QEBA_NAEBU01234@@Z;bool cv::gapi::wip::onevpl::CfgParam::operator<(struct cv::gapi::wip::onevpl::CfgParam const &)
??MDMatch@cv@@QEBA_NAEBV01@@Z;bool cv::DMatch::operator<(class cv::DMatch const &)
??MGraphEdge@detail@cv@@QEBA_NAEBU012@@Z;bool cv::detail::GraphEdge::operator<(struct cv::detail::GraphEdge const &)
??Mcv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator<(class cv::GMat const &,class cv::GMat const &)
??Mcv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator<(class cv::GMat const &,class cv::GScalar const &)
??Mcv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator<(class cv::GScalar const &,class cv::GMat const &)
??Mcv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator<(class cv::Mat const &,class cv::Mat const &)
??Mcv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator<(class cv::Mat const &,double)
??Mcv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator<(double,class cv::Mat const &)
??Msoftdouble@cv@@QEBA_NAEBU01@@Z;bool cv::softdouble::operator<(struct cv::softdouble const &)
??Msoftfloat@cv@@QEBA_NAEBU01@@Z;bool cv::softfloat::operator<(struct cv::softfloat const &)
??Ncv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator<=(class cv::GMat const &,class cv::GMat const &)
??Ncv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator<=(class cv::GMat const &,class cv::GScalar const &)
??Ncv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator<=(class cv::GScalar const &,class cv::GMat const &)
??Ncv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator<=(class cv::Mat const &,class cv::Mat const &)
??Ncv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator<=(class cv::Mat const &,double)
??Ncv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator<=(double,class cv::Mat const &)
??Nsoftdouble@cv@@QEBA_NAEBU01@@Z;bool cv::softdouble::operator<=(struct cv::softdouble const &)
??Nsoftfloat@cv@@QEBA_NAEBU01@@Z;bool cv::softfloat::operator<=(struct cv::softfloat const &)
??OGraphEdge@detail@cv@@QEBA_NAEBU012@@Z;bool cv::detail::GraphEdge::operator>(struct cv::detail::GraphEdge const &)
??Ocv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator>(class cv::GMat const &,class cv::GMat const &)
??Ocv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator>(class cv::GMat const &,class cv::GScalar const &)
??Ocv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator>(class cv::GScalar const &,class cv::GMat const &)
??Ocv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator>(class cv::Mat const &,class cv::Mat const &)
??Ocv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator>(class cv::Mat const &,double)
??Ocv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator>(double,class cv::Mat const &)
??Osoftdouble@cv@@QEBA_NAEBU01@@Z;bool cv::softdouble::operator>(struct cv::softdouble const &)
??Osoftfloat@cv@@QEBA_NAEBU01@@Z;bool cv::softfloat::operator>(struct cv::softfloat const &)
??Pcv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator>=(class cv::GMat const &,class cv::GMat const &)
??Pcv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator>=(class cv::GMat const &,class cv::GScalar const &)
??Pcv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator>=(class cv::GScalar const &,class cv::GMat const &)
??Pcv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator>=(class cv::Mat const &,class cv::Mat const &)
??Pcv@@YA?AVMatExpr@0@AEBVMat@0@N@Z;class cv::MatExpr cv::operator>=(class cv::Mat const &,double)
??Pcv@@YA?AVMatExpr@0@NAEBVMat@0@@Z;class cv::MatExpr cv::operator>=(double,class cv::Mat const &)
??Psoftdouble@cv@@QEBA_NAEBU01@@Z;bool cv::softdouble::operator>=(struct cv::softdouble const &)
??Psoftfloat@cv@@QEBA_NAEBU01@@Z;bool cv::softfloat::operator>=(struct cv::softfloat const &)
??R?$DefaultDeleter@UCvCapture@@@cv@@QEBAXPEAUCvCapture@@@Z;void cv::DefaultDeleter<struct CvCapture>::operator()(struct CvCapture *)
??R?$DefaultDeleter@UCvMat@@@cv@@QEBAXPEAUCvMat@@@Z;void cv::DefaultDeleter<struct CvMat>::operator()(struct CvMat *)
??R?$DefaultDeleter@UCvMatND@@@cv@@QEBAXPEAUCvMatND@@@Z;void cv::DefaultDeleter<struct CvMatND>::operator()(struct CvMatND *)
??R?$DefaultDeleter@UCvMemStorage@@@cv@@QEBAXPEAUCvMemStorage@@@Z;void cv::DefaultDeleter<struct CvMemStorage>::operator()(struct CvMemStorage *)
??R?$DefaultDeleter@UCvSparseMat@@@cv@@QEBAXPEAUCvSparseMat@@@Z;void cv::DefaultDeleter<struct CvSparseMat>::operator()(struct CvSparseMat *)
??R?$DefaultDeleter@UCvVideoWriter@@@cv@@QEBAXPEAUCvVideoWriter@@@Z;void cv::DefaultDeleter<struct CvVideoWriter>::operator()(struct CvVideoWriter *)
??R?$DefaultDeleter@U_IplImage@@@cv@@QEBAXPEAU_IplImage@@@Z;void cv::DefaultDeleter<struct _IplImage>::operator()(struct _IplImage *)
??RBestOf2NearestRangeMatcher@detail@cv@@QEAAXAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEAV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@4@AEBVUMat@2@@Z;void cv::detail::BestOf2NearestRangeMatcher::operator()(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > &,class cv::UMat const &)
??REstimator@detail@cv@@QEAA_NAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEBV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@4@AEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@4@@Z;bool cv::detail::Estimator::operator()(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > const &,class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
??RFeaturesMatcher@detail@cv@@QEAAXAEBUImageFeatures@12@0AEAUMatchesInfo@12@@Z;void cv::detail::FeaturesMatcher::operator()(struct cv::detail::ImageFeatures const &,struct cv::detail::ImageFeatures const &,struct cv::detail::MatchesInfo &)
??RFeaturesMatcher@detail@cv@@QEAAXAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEAV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@4@AEBVUMat@2@@Z;void cv::detail::FeaturesMatcher::operator()(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > &,class cv::UMat const &)
??RGCompiled@cv@@QEAAX$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@3@@Z;void cv::GCompiled::operator()(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&)
??RGCompiled@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@0@Z;void cv::GCompiled::operator()(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
??RGCompiled@cv@@QEAAXVMat@1@0AEAV21@@Z;void cv::GCompiled::operator()(class cv::Mat,class cv::Mat,class cv::Mat &)
??RGCompiled@cv@@QEAAXVMat@1@0AEAV?$Scalar_@N@1@@Z;void cv::GCompiled::operator()(class cv::Mat,class cv::Mat,class cv::Scalar_<double> &)
??RGCompiled@cv@@QEAAXVMat@1@AEAV21@@Z;void cv::GCompiled::operator()(class cv::Mat,class cv::Mat &)
??RGCompiled@cv@@QEAAXVMat@1@AEAV?$Scalar_@N@1@@Z;void cv::GCompiled::operator()(class cv::Mat,class cv::Scalar_<double> &)
??RGPythonKernel@python@gapi@cv@@QEAA?AV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@AEBUGPythonContext@123@@Z;class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > cv::gapi::python::GPythonKernel::operator()(struct cv::gapi::python::GPythonContext const &)
??RGpuMat@cuda@cv@@QEBA?AV012@V?$Rect_@H@2@@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::operator()(class cv::Rect_<int>)
??RGpuMat@cuda@cv@@QEBA?AV012@VRange@2@0@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::operator()(class cv::Range,class cv::Range)
??RGpuMatND@cuda@cv@@QEBA?AV012@AEBV?$vector@VRange@cv@@V?$allocator@VRange@cv@@@std@@@std@@@Z;class cv::cuda::GpuMatND cv::cuda::GpuMatND::operator()(class std::vector<class cv::Range,class std::allocator<class cv::Range> > const &)
??RGpuMatND@cuda@cv@@QEBA?AVGpuMat@12@V?$vector@HV?$allocator@H@std@@@std@@VRange@2@1@Z;class cv::cuda::GpuMat cv::cuda::GpuMatND::operator()(class std::vector<int,class std::allocator<int> >,class cv::Range,class cv::Range)
??RHamming@cv@@QEBAHPEBE0H@Z;int cv::Hamming::operator()(unsigned char const *,unsigned char const *,int)
??RMat@cv@@QEBA?AV01@AEBV?$Rect_@H@1@@Z;class cv::Mat cv::Mat::operator()(class cv::Rect_<int> const &)
??RMat@cv@@QEBA?AV01@AEBV?$vector@VRange@cv@@V?$allocator@VRange@cv@@@std@@@std@@@Z;class cv::Mat cv::Mat::operator()(class std::vector<class cv::Range,class std::allocator<class cv::Range> > const &)
??RMat@cv@@QEBA?AV01@PEBVRange@1@@Z;class cv::Mat cv::Mat::operator()(class cv::Range const *)
??RMat@cv@@QEBA?AV01@VRange@1@0@Z;class cv::Mat cv::Mat::operator()(class cv::Range,class cv::Range)
??RMatExpr@cv@@QEBA?AV01@AEBV?$Rect_@H@1@@Z;class cv::MatExpr cv::MatExpr::operator()(class cv::Rect_<int> const &)
??RMatExpr@cv@@QEBA?AV01@AEBVRange@1@0@Z;class cv::MatExpr cv::MatExpr::operator()(class cv::Range const &,class cv::Range const &)
??RMatSize@cv@@QEBA?AV?$Size_@H@1@XZ;class cv::Size_<int> cv::MatSize::operator()(void)
??RPCA@cv@@QEAAAEAV01@AEBV_InputArray@1@0HH@Z;class cv::PCA & cv::PCA::operator()(class cv::_InputArray const &,class cv::_InputArray const &,int,int)
??RPCA@cv@@QEAAAEAV01@AEBV_InputArray@1@0HN@Z;class cv::PCA & cv::PCA::operator()(class cv::_InputArray const &,class cv::_InputArray const &,int,double)
??RRNG@cv@@QEAAII@Z;unsigned int cv::RNG::operator()(unsigned int)
??RRNG@cv@@QEAAIXZ;unsigned int cv::RNG::operator()(void)
??RRNG_MT19937@cv@@QEAAII@Z;unsigned int cv::RNG_MT19937::operator()(unsigned int)
??RRNG_MT19937@cv@@QEAAIXZ;unsigned int cv::RNG_MT19937::operator()(void)
??RSVD@cv@@QEAAAEAV01@AEBV_InputArray@1@H@Z;class cv::SVD & cv::SVD::operator()(class cv::_InputArray const &,int)
??RSimilarRects@cv@@QEBA_NAEBV?$Rect_@H@1@0@Z;bool cv::SimilarRects::operator()(class cv::Rect_<int> const &,class cv::Rect_<int> const &)
??RUMat@cv@@QEBA?AV01@AEBV?$Rect_@H@1@@Z;class cv::UMat cv::UMat::operator()(class cv::Rect_<int> const &)
??RUMat@cv@@QEBA?AV01@AEBV?$vector@VRange@cv@@V?$allocator@VRange@cv@@@std@@@std@@@Z;class cv::UMat cv::UMat::operator()(class std::vector<class cv::Range,class std::allocator<class cv::Range> > const &)
??RUMat@cv@@QEBA?AV01@PEBVRange@1@@Z;class cv::UMat cv::UMat::operator()(class cv::Range const *)
??RUMat@cv@@QEBA?AV01@VRange@1@0@Z;class cv::UMat cv::UMat::operator()(class cv::Range,class cv::Range)
??Scv@@YA?AVGMat@0@AEBV10@@Z;class cv::GMat cv::operator~(class cv::GMat const &)
??Scv@@YA?AVMatExpr@0@AEBVMat@0@@Z;class cv::MatExpr cv::operator~(class cv::Mat const &)
??Tcv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator^(class cv::GMat const &,class cv::GMat const &)
??Tcv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator^(class cv::GMat const &,class cv::GScalar const &)
??Tcv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator^(class cv::GScalar const &,class cv::GMat const &)
??Tcv@@YA?AVMatExpr@0@AEBV?$Scalar_@N@0@AEBVMat@0@@Z;class cv::MatExpr cv::operator^(class cv::Scalar_<double> const &,class cv::Mat const &)
??Tcv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator^(class cv::Mat const &,class cv::Mat const &)
??Tcv@@YA?AVMatExpr@0@AEBVMat@0@AEBV?$Scalar_@N@0@@Z;class cv::MatExpr cv::operator^(class cv::Mat const &,class cv::Scalar_<double> const &)
??Ucv@@YA?AVGMat@0@AEBV10@0@Z;class cv::GMat cv::operator|(class cv::GMat const &,class cv::GMat const &)
??Ucv@@YA?AVGMat@0@AEBV10@AEBVGScalar@0@@Z;class cv::GMat cv::operator|(class cv::GMat const &,class cv::GScalar const &)
??Ucv@@YA?AVGMat@0@AEBVGScalar@0@AEBV10@@Z;class cv::GMat cv::operator|(class cv::GScalar const &,class cv::GMat const &)
??Ucv@@YA?AVMatExpr@0@AEBV?$Scalar_@N@0@AEBVMat@0@@Z;class cv::MatExpr cv::operator|(class cv::Scalar_<double> const &,class cv::Mat const &)
??Ucv@@YA?AVMatExpr@0@AEBVMat@0@0@Z;class cv::MatExpr cv::operator|(class cv::Mat const &,class cv::Mat const &)
??Ucv@@YA?AVMatExpr@0@AEBVMat@0@AEBV?$Scalar_@N@0@@Z;class cv::MatExpr cv::operator|(class cv::Mat const &,class cv::Scalar_<double> const &)
??Xsoftdouble@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softdouble & cv::softdouble::operator*=(struct cv::softdouble const &)
??Xsoftfloat@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softfloat & cv::softfloat::operator*=(struct cv::softfloat const &)
??YFileNodeIterator@cv@@QEAAAEAV01@H@Z;class cv::FileNodeIterator & cv::FileNodeIterator::operator+=(int)
??YMatConstIterator@cv@@QEAAAEAV01@_J@Z;class cv::MatConstIterator & cv::MatConstIterator::operator+=(__int64)
??Ysoftdouble@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softdouble & cv::softdouble::operator+=(struct cv::softdouble const &)
??Ysoftfloat@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softfloat & cv::softfloat::operator+=(struct cv::softfloat const &)
??ZMatConstIterator@cv@@QEAAAEAV01@_J@Z;class cv::MatConstIterator & cv::MatConstIterator::operator-=(__int64)
??Zsoftdouble@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softdouble & cv::softdouble::operator-=(struct cv::softdouble const &)
??Zsoftfloat@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softfloat & cv::softfloat::operator-=(struct cv::softfloat const &)
??_0softdouble@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softdouble & cv::softdouble::operator/=(struct cv::softdouble const &)
??_0softfloat@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softfloat & cv::softfloat::operator/=(struct cv::softfloat const &)
??_1softdouble@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softdouble & cv::softdouble::operator%=(struct cv::softdouble const &)
??_1softfloat@cv@@QEAAAEAU01@AEBU01@@Z;struct cv::softfloat & cv::softfloat::operator%=(struct cv::softfloat const &)
??_7?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::`vftable'
??_7?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::`vftable'
??_7?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::`vftable'
??_7?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::`vftable'
??_7?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::`vftable'
??_7?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::`vftable'
??_7?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::`vftable'
??_7?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::`vftable'
??_7?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::`vftable'
??_7?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::`vftable'
??_7?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::`vftable'
??_7?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::`vftable'
??_7?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::`vftable'
??_7?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@6B@;const cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::`vftable'
??_7AKAZE@cv@@6BAlgorithm@1@@;const cv::AKAZE::`vftable'{for `cv::Algorithm'}
??_7AKAZE@cv@@6BFeature2D@1@@;const cv::AKAZE::`vftable'{for `cv::Feature2D'}
??_7ANN_MLP@ml@cv@@6B@;const cv::ml::ANN_MLP::`vftable'
??_7AbsLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::AbsLayer::`vftable'
??_7AccumLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::AccumLayer::`vftable'
??_7ActivationLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ActivationLayer::`vftable'
??_7ActivationLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ActivationLayerInt8::`vftable'
??_7AffineBasedEstimator@detail@cv@@6B@;const cv::detail::AffineBasedEstimator::`vftable'
??_7AffineBestOf2NearestMatcher@detail@cv@@6B@;const cv::detail::AffineBestOf2NearestMatcher::`vftable'
??_7AffineFeature@cv@@6BAlgorithm@1@@;const cv::AffineFeature::`vftable'{for `cv::Algorithm'}
??_7AffineFeature@cv@@6BFeature2D@1@@;const cv::AffineFeature::`vftable'{for `cv::Feature2D'}
??_7AffineWarper@cv@@6B@;const cv::AffineWarper::`vftable'
??_7AffineWarper@detail@cv@@6B@;const cv::detail::AffineWarper::`vftable'
??_7AgastFeatureDetector@cv@@6BAlgorithm@1@@;const cv::AgastFeatureDetector::`vftable'{for `cv::Algorithm'}
??_7AgastFeatureDetector@cv@@6BFeature2D@1@@;const cv::AgastFeatureDetector::`vftable'{for `cv::Feature2D'}
??_7Algorithm@cv@@6B@;const cv::Algorithm::`vftable'
??_7AlignExposures@cv@@6B@;const cv::AlignExposures::`vftable'
??_7AlignMTB@cv@@6B@;const cv::AlignMTB::`vftable'
??_7Allocator@GpuMat@cuda@cv@@6B@;const cv::cuda::GpuMat::Allocator::`vftable'
??_7BFMatcher@cv@@6B@;const cv::BFMatcher::`vftable'
??_7BNLLLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::BNLLLayer::`vftable'
??_7BOWImgDescriptorExtractor@cv@@6B@;const cv::BOWImgDescriptorExtractor::`vftable'
??_7BOWKMeansTrainer@cv@@6B@;const cv::BOWKMeansTrainer::`vftable'
??_7BOWTrainer@cv@@6B@;const cv::BOWTrainer::`vftable'
??_7BRISK@cv@@6BAlgorithm@1@@;const cv::BRISK::`vftable'{for `cv::Algorithm'}
??_7BRISK@cv@@6BFeature2D@1@@;const cv::BRISK::`vftable'{for `cv::Feature2D'}
??_7BackgroundSubtractor@cv@@6B@;const cv::BackgroundSubtractor::`vftable'
??_7BackgroundSubtractorKNN@cv@@6B@;const cv::BackgroundSubtractorKNN::`vftable'
??_7BackgroundSubtractorMOG2@cv@@6B@;const cv::BackgroundSubtractorMOG2::`vftable'
??_7BaseCascadeClassifier@cv@@6B@;const cv::BaseCascadeClassifier::`vftable'
??_7BaseConvolutionLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::BaseConvolutionLayer::`vftable'
??_7BatchNormLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::BatchNormLayer::`vftable'
??_7BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::BatchNormLayerInt8::`vftable'
??_7BestOf2NearestMatcher@detail@cv@@6B@;const cv::detail::BestOf2NearestMatcher::`vftable'
??_7BestOf2NearestRangeMatcher@detail@cv@@6B@;const cv::detail::BestOf2NearestRangeMatcher::`vftable'
??_7BlankLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::BlankLayer::`vftable'
??_7Blender@detail@cv@@6B@;const cv::detail::Blender::`vftable'
??_7BlocksChannelsCompensator@detail@cv@@6B@;const cv::detail::BlocksChannelsCompensator::`vftable'
??_7BlocksCompensator@detail@cv@@6B@;const cv::detail::BlocksCompensator::`vftable'
??_7BlocksGainCompensator@detail@cv@@6B@;const cv::detail::BlocksGainCompensator::`vftable'
??_7Boost@ml@cv@@6B@;const cv::ml::Boost::`vftable'
??_7BundleAdjusterAffine@detail@cv@@6B@;const cv::detail::BundleAdjusterAffine::`vftable'
??_7BundleAdjusterAffinePartial@detail@cv@@6B@;const cv::detail::BundleAdjusterAffinePartial::`vftable'
??_7BundleAdjusterBase@detail@cv@@6B@;const cv::detail::BundleAdjusterBase::`vftable'
??_7BundleAdjusterRay@detail@cv@@6B@;const cv::detail::BundleAdjusterRay::`vftable'
??_7BundleAdjusterReproj@detail@cv@@6B@;const cv::detail::BundleAdjusterReproj::`vftable'
??_7ByteMemoryInStream@s11n@gapi@cv@@6B@;const cv::gapi::s11n::ByteMemoryInStream::`vftable'
??_7ByteMemoryOutStream@s11n@gapi@cv@@6B@;const cv::gapi::s11n::ByteMemoryOutStream::`vftable'
??_7CLAHE@cv@@6B@;const cv::CLAHE::`vftable'
??_7CalibrateCRF@cv@@6B@;const cv::CalibrateCRF::`vftable'
??_7CalibrateDebevec@cv@@6B@;const cv::CalibrateDebevec::`vftable'
??_7CalibrateRobertson@cv@@6B@;const cv::CalibrateRobertson::`vftable'
??_7Callback@LMSolver@cv@@6B@;const cv::LMSolver::Callback::`vftable'
??_7Callback@PointSetRegistrator@cv@@6B@;const cv::PointSetRegistrator::Callback::`vftable'
??_7ChannelsCompensator@detail@cv@@6B@;const cv::detail::ChannelsCompensator::`vftable'
??_7ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ChannelsPReLULayer::`vftable'
??_7CompressedRectilinearPortraitWarper@cv@@6B@;const cv::CompressedRectilinearPortraitWarper::`vftable'
??_7CompressedRectilinearPortraitWarper@detail@cv@@6B@;const cv::detail::CompressedRectilinearPortraitWarper::`vftable'
??_7CompressedRectilinearWarper@cv@@6B@;const cv::CompressedRectilinearWarper::`vftable'
??_7CompressedRectilinearWarper@detail@cv@@6B@;const cv::detail::CompressedRectilinearWarper::`vftable'
??_7ConcatLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ConcatLayer::`vftable'
??_7ConjGradSolver@cv@@6B@;const cv::ConjGradSolver::`vftable'
??_7ConstLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ConstLayer::`vftable'
??_7ConvolutionLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ConvolutionLayer::`vftable'
??_7ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::`vftable'
??_7CorrelationLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::CorrelationLayer::`vftable'
??_7CropAndResizeLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::CropAndResizeLayer::`vftable'
??_7CropLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::CropLayer::`vftable'
??_7CumSumLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::CumSumLayer::`vftable'
??_7CylindricalPortraitWarper@detail@cv@@6B@;const cv::detail::CylindricalPortraitWarper::`vftable'
??_7CylindricalWarper@cv@@6B@;const cv::CylindricalWarper::`vftable'
??_7CylindricalWarper@detail@cv@@6B@;const cv::detail::CylindricalWarper::`vftable'
??_7CylindricalWarperGpu@detail@cv@@6B@;const cv::detail::CylindricalWarperGpu::`vftable'
??_7DCT2D@hal@cv@@6B@;const cv::hal::DCT2D::`vftable'
??_7DFT1D@hal@cv@@6B@;const cv::hal::DFT1D::`vftable'
??_7DFT2D@hal@cv@@6B@;const cv::hal::DFT2D::`vftable'
??_7DISOpticalFlow@cv@@6B@;const cv::DISOpticalFlow::`vftable'
??_7DTrees@ml@cv@@6B@;const cv::ml::DTrees::`vftable'
??_7DataAugmentationLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::DataAugmentationLayer::`vftable'
??_7DataProviderException@onevpl@wip@gapi@cv@@6B@;const cv::gapi::wip::onevpl::DataProviderException::`vftable'
??_7DataProviderSystemErrorException@onevpl@wip@gapi@cv@@6B@;const cv::gapi::wip::onevpl::DataProviderSystemErrorException::`vftable'
??_7DeconvolutionLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::DeconvolutionLayer::`vftable'
??_7DenseOpticalFlow@cv@@6B@;const cv::DenseOpticalFlow::`vftable'
??_7DequantizeLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::DequantizeLayer::`vftable'
??_7DescriptorCollection@DescriptorMatcher@cv@@6B@;const cv::DescriptorMatcher::DescriptorCollection::`vftable'
??_7DescriptorMatcher@cv@@6B@;const cv::DescriptorMatcher::`vftable'
??_7DetectionBasedTracker@cv@@6B@;const cv::DetectionBasedTracker::`vftable'
??_7DetectionOutputLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::DetectionOutputLayer::`vftable'
??_7DownhillSolver@cv@@6B@;const cv::DownhillSolver::`vftable'
??_7DpSeamFinder@detail@cv@@6B@;const cv::detail::DpSeamFinder::`vftable'
??_7ELULayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ELULayer::`vftable'
??_7EM@ml@cv@@6B@;const cv::ml::EM::`vftable'
??_7EMImpl@ml@cv@@6B@;const cv::ml::EMImpl::`vftable'
??_7EltwiseLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::EltwiseLayer::`vftable'
??_7EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::EltwiseLayerInt8::`vftable'
??_7Estimator@detail@cv@@6B@;const cv::detail::Estimator::`vftable'
??_7Exception@cv@@6B@;const cv::Exception::`vftable'
??_7ExpLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ExpLayer::`vftable'
??_7ExposureCompensator@detail@cv@@6B@;const cv::detail::ExposureCompensator::`vftable'
??_7FaceDetectorYN@cv@@6B@;const cv::FaceDetectorYN::`vftable'
??_7FaceRecognizerSF@cv@@6B@;const cv::FaceRecognizerSF::`vftable'
??_7FarnebackOpticalFlow@cv@@6B@;const cv::FarnebackOpticalFlow::`vftable'
??_7FastFeatureDetector@cv@@6BAlgorithm@1@@;const cv::FastFeatureDetector::`vftable'{for `cv::Algorithm'}
??_7FastFeatureDetector@cv@@6BFeature2D@1@@;const cv::FastFeatureDetector::`vftable'{for `cv::Feature2D'}
??_7FeatherBlender@detail@cv@@6B@;const cv::detail::FeatherBlender::`vftable'
??_7Feature2D@cv@@6B01@@;const cv::Feature2D::`vftable'{for `cv::Feature2D'}
??_7Feature2D@cv@@6BAlgorithm@1@@;const cv::Feature2D::`vftable'{for `cv::Algorithm'}
??_7FeaturesMatcher@detail@cv@@6B@;const cv::detail::FeaturesMatcher::`vftable'
??_7FileStorage@cv@@6B@;const cv::FileStorage::`vftable'
??_7Filter2D@hal@cv@@6B@;const cv::hal::Filter2D::`vftable'
??_7FisheyeWarper@cv@@6B@;const cv::FisheyeWarper::`vftable'
??_7FisheyeWarper@detail@cv@@6B@;const cv::detail::FisheyeWarper::`vftable'
??_7FlannBasedMatcher@cv@@6B@;const cv::FlannBasedMatcher::`vftable'
??_7FlattenLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::FlattenLayer::`vftable'
??_7FlowWarpLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::FlowWarpLayer::`vftable'
??_7Formatted@cv@@6B@;const cv::Formatted::`vftable'
??_7Formatter@cv@@6B@;const cv::Formatter::`vftable'
??_7Function@MinProblemSolver@cv@@6B@;const cv::MinProblemSolver::Function::`vftable'
??_7GAsyncCanceled@wip@gapi@cv@@6B@;const cv::gapi::wip::GAsyncCanceled::`vftable'
??_7GFTTDetector@cv@@6BAlgorithm@1@@;const cv::GFTTDetector::`vftable'{for `cv::Algorithm'}
??_7GFTTDetector@cv@@6BFeature2D@1@@;const cv::GFTTDetector::`vftable'{for `cv::Feature2D'}
??_7GIslandExecutable@gimpl@cv@@6B@;const cv::gimpl::GIslandExecutable::`vftable'
??_7GPythonFunctor@python@gapi@cv@@6B@;const cv::gapi::python::GPythonFunctor::`vftable'
??_7GRULayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::GRULayer::`vftable'
??_7GSource@onevpl@wip@gapi@cv@@6B@;const cv::gapi::wip::onevpl::GSource::`vftable'
??_7GainCompensator@detail@cv@@6B@;const cv::detail::GainCompensator::`vftable'
??_7GeneralizedHough@cv@@6B@;const cv::GeneralizedHough::`vftable'
??_7GeneralizedHoughBallard@cv@@6B@;const cv::GeneralizedHoughBallard::`vftable'
??_7GeneralizedHoughGuil@cv@@6B@;const cv::GeneralizedHoughGuil::`vftable'
??_7GraphCutSeamFinder@detail@cv@@6B@;const cv::detail::GraphCutSeamFinder::`vftable'
??_7HOGDescriptor@cv@@6B@;const cv::HOGDescriptor::`vftable'
??_7HomographyBasedEstimator@detail@cv@@6B@;const cv::detail::HomographyBasedEstimator::`vftable'
??_7IAdapter@MediaFrame@cv@@6B@;const cv::MediaFrame::IAdapter::`vftable'
??_7IDataProvider@onevpl@wip@gapi@cv@@6B@;const cv::gapi::wip::onevpl::IDataProvider::`vftable'
??_7IIStream@s11n@gapi@cv@@6B@;const cv::gapi::s11n::IIStream::`vftable'
??_7IOStream@s11n@gapi@cv@@6B@;const cv::gapi::s11n::IOStream::`vftable'
??_7Index@flann@cv@@6B@;const cv::flann::Index::`vftable'
??_7InnerProductLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::InnerProductLayer::`vftable'
??_7InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::InnerProductLayerInt8::`vftable'
??_7InterpLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::InterpLayer::`vftable'
??_7KAZE@cv@@6BAlgorithm@1@@;const cv::KAZE::`vftable'{for `cv::Algorithm'}
??_7KAZE@cv@@6BFeature2D@1@@;const cv::KAZE::`vftable'{for `cv::Feature2D'}
??_7KNearest@ml@cv@@6B@;const cv::ml::KNearest::`vftable'
??_7Kernel@SVM@ml@cv@@6B@;const cv::ml::SVM::Kernel::`vftable'
??_7LMSolver@cv@@6B@;const cv::LMSolver::`vftable'
??_7LRNLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::LRNLayer::`vftable'
??_7LSTMLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::LSTMLayer::`vftable'
??_7Layer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::Layer::`vftable'
??_7LineSegmentDetector@cv@@6B@;const cv::LineSegmentDetector::`vftable'
??_7LogisticRegression@ml@cv@@6B@;const cv::ml::LogisticRegression::`vftable'
??_7MSER@cv@@6BAlgorithm@1@@;const cv::MSER::`vftable'{for `cv::Algorithm'}
??_7MSER@cv@@6BFeature2D@1@@;const cv::MSER::`vftable'{for `cv::Feature2D'}
??_7MVNLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::MVNLayer::`vftable'
??_7MaskGenerator@BaseCascadeClassifier@cv@@6B@;const cv::BaseCascadeClassifier::MaskGenerator::`vftable'
??_7MatAllocator@cv@@6B@;const cv::MatAllocator::`vftable'
??_7MatOp@cv@@6B@;const cv::MatOp::`vftable'
??_7MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::MaxUnpoolLayer::`vftable'
??_7MercatorWarper@cv@@6B@;const cv::MercatorWarper::`vftable'
??_7MercatorWarper@detail@cv@@6B@;const cv::detail::MercatorWarper::`vftable'
??_7MergeDebevec@cv@@6B@;const cv::MergeDebevec::`vftable'
??_7MergeExposures@cv@@6B@;const cv::MergeExposures::`vftable'
??_7MergeMertens@cv@@6B@;const cv::MergeMertens::`vftable'
??_7MergeRobertson@cv@@6B@;const cv::MergeRobertson::`vftable'
??_7MinProblemSolver@cv@@6B@;const cv::MinProblemSolver::`vftable'
??_7MishLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::MishLayer::`vftable'
??_7Morph@hal@cv@@6B@;const cv::hal::Morph::`vftable'
??_7MultiBandBlender@detail@cv@@6B@;const cv::detail::MultiBandBlender::`vftable'
??_7NoBundleAdjuster@detail@cv@@6B@;const cv::detail::NoBundleAdjuster::`vftable'
??_7NoExposureCompensator@detail@cv@@6B@;const cv::detail::NoExposureCompensator::`vftable'
??_7NoSeamFinder@detail@cv@@6B@;const cv::detail::NoSeamFinder::`vftable'
??_7NormalBayesClassifier@ml@cv@@6B@;const cv::ml::NormalBayesClassifier::`vftable'
??_7NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::`vftable'
??_7ORB@cv@@6BAlgorithm@1@@;const cv::ORB::`vftable'{for `cv::Algorithm'}
??_7ORB@cv@@6BFeature2D@1@@;const cv::ORB::`vftable'{for `cv::Feature2D'}
??_7PaddingLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::PaddingLayer::`vftable'
??_7PairwiseSeamFinder@detail@cv@@6B@;const cv::detail::PairwiseSeamFinder::`vftable'
??_7PaniniPortraitWarper@cv@@6B@;const cv::PaniniPortraitWarper::`vftable'
??_7PaniniPortraitWarper@detail@cv@@6B@;const cv::detail::PaniniPortraitWarper::`vftable'
??_7PaniniWarper@cv@@6B@;const cv::PaniniWarper::`vftable'
??_7PaniniWarper@detail@cv@@6B@;const cv::detail::PaniniWarper::`vftable'
??_7ParallelForAPI@parallel@cv@@6B@;const cv::parallel::ParallelForAPI::`vftable'
??_7ParallelLoopBody@cv@@6B@;const cv::ParallelLoopBody::`vftable'
??_7PermuteLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::PermuteLayer::`vftable'
??_7PlanePortraitWarper@detail@cv@@6B@;const cv::detail::PlanePortraitWarper::`vftable'
??_7PlaneWarper@cv@@6B@;const cv::PlaneWarper::`vftable'
??_7PlaneWarper@detail@cv@@6B@;const cv::detail::PlaneWarper::`vftable'
??_7PlaneWarperGpu@detail@cv@@6B@;const cv::detail::PlaneWarperGpu::`vftable'
??_7PointSetRegistrator@cv@@6B@;const cv::PointSetRegistrator::`vftable'
??_7PoolingLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::PoolingLayer::`vftable'
??_7PoolingLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::PoolingLayerInt8::`vftable'
??_7PowerLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::PowerLayer::`vftable'
??_7PriorBoxLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::PriorBoxLayer::`vftable'
??_7Priv@GBackend@gapi@cv@@6B@;const cv::gapi::GBackend::Priv::`vftable'
??_7Priv@View@fluid@gapi@cv@@6B@;const cv::gapi::fluid::View::Priv::`vftable'
??_7ProposalLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ProposalLayer::`vftable'
??_7QuantizeLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::QuantizeLayer::`vftable'
??_7RMatMediaFrameAdapter@gimpl@cv@@6B@;const cv::gimpl::RMatMediaFrameAdapter::`vftable'
??_7RNNLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::RNNLayer::`vftable'
??_7RTrees@ml@cv@@6B@;const cv::ml::RTrees::`vftable'
??_7ReLU6Layer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ReLU6Layer::`vftable'
??_7ReLULayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ReLULayer::`vftable'
??_7RegionLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::RegionLayer::`vftable'
??_7ReorgLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ReorgLayer::`vftable'
??_7RequantizeLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::RequantizeLayer::`vftable'
??_7ReshapeLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ReshapeLayer::`vftable'
??_7ResizeLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ResizeLayer::`vftable'
??_7RotationWarper@detail@cv@@6B@;const cv::detail::RotationWarper::`vftable'
??_7SIFT@cv@@6BAlgorithm@1@@;const cv::SIFT::`vftable'{for `cv::Algorithm'}
??_7SIFT@cv@@6BFeature2D@1@@;const cv::SIFT::`vftable'{for `cv::Feature2D'}
??_7SVM@ml@cv@@6B@;const cv::ml::SVM::`vftable'
??_7SVMSGD@ml@cv@@6B@;const cv::ml::SVMSGD::`vftable'
??_7ScaleLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ScaleLayer::`vftable'
??_7ScaleLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ScaleLayerInt8::`vftable'
??_7SeamFinder@detail@cv@@6B@;const cv::detail::SeamFinder::`vftable'
??_7SepFilter2D@hal@cv@@6B@;const cv::hal::SepFilter2D::`vftable'
??_7ShiftLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ShiftLayer::`vftable'
??_7ShiftLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ShiftLayerInt8::`vftable'
??_7ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::ShuffleChannelLayer::`vftable'
??_7SigmoidLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::SigmoidLayer::`vftable'
??_7SimpleBlobDetector@cv@@6BAlgorithm@1@@;const cv::SimpleBlobDetector::`vftable'{for `cv::Algorithm'}
??_7SimpleBlobDetector@cv@@6BFeature2D@1@@;const cv::SimpleBlobDetector::`vftable'{for `cv::Feature2D'}
??_7SimpleBlobDetectorImpl@cv@@6BAlgorithm@1@@;const cv::SimpleBlobDetectorImpl::`vftable'{for `cv::Algorithm'}
??_7SimpleBlobDetectorImpl@cv@@6BFeature2D@1@@;const cv::SimpleBlobDetectorImpl::`vftable'{for `cv::Feature2D'}
??_7SliceLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::SliceLayer::`vftable'
??_7SoftmaxLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::SoftmaxLayer::`vftable'
??_7SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::`vftable'
??_7SparseOpticalFlow@cv@@6B@;const cv::SparseOpticalFlow::`vftable'
??_7SparsePyrLKOpticalFlow@cv@@6B@;const cv::SparsePyrLKOpticalFlow::`vftable'
??_7SphericalPortraitWarper@detail@cv@@6B@;const cv::detail::SphericalPortraitWarper::`vftable'
??_7SphericalWarper@cv@@6B@;const cv::SphericalWarper::`vftable'
??_7SphericalWarper@detail@cv@@6B@;const cv::detail::SphericalWarper::`vftable'
??_7SphericalWarperGpu@detail@cv@@6B@;const cv::detail::SphericalWarperGpu::`vftable'
??_7SplitLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::SplitLayer::`vftable'
??_7StatModel@ml@cv@@6B@;const cv::ml::StatModel::`vftable'
??_7StereoBM@cv@@6B@;const cv::StereoBM::`vftable'
??_7StereoMatcher@cv@@6B@;const cv::StereoMatcher::`vftable'
??_7StereoSGBM@cv@@6B@;const cv::StereoSGBM::`vftable'
??_7StereographicWarper@cv@@6B@;const cv::StereographicWarper::`vftable'
??_7StereographicWarper@detail@cv@@6B@;const cv::detail::StereographicWarper::`vftable'
??_7SwishLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::SwishLayer::`vftable'
??_7TLSDataContainer@cv@@6B@;const cv::TLSDataContainer::`vftable'
??_7TanHLayer@dnn4_v20211004@dnn@cv@@6B@;const cv::dnn::dnn4_v20211004::TanHLayer::`vftable'
??_7Timelapser@detail@cv@@6B@;const cv::detail::Timelapser::`vftable'
??_7TimelapserCrop@detail@cv@@6B@;const cv::detail::TimelapserCrop::`vftable'
??_7Tonemap@cv@@6B@;const cv::Tonemap::`vftable'
??_7TonemapDrago@cv@@6B@;const cv::TonemapDrago::`vftable'
??_7TonemapMantiuk@cv@@6B@;const cv::TonemapMantiuk::`vftable'
??_7TonemapReinhard@cv@@6B@;const cv::TonemapReinhard::`vftable'
??_7Tracker@cv@@6B@;const cv::Tracker::`vftable'
??_7TrackerDaSiamRPN@cv@@6B@;const cv::TrackerDaSiamRPN::`vftable'
??_7TrackerFeature@tracking@detail@cv@@6B@;const cv::detail::tracking::TrackerFeature::`vftable'
??_7TrackerGOTURN@cv@@6B@;const cv::TrackerGOTURN::`vftable'
??_7TrackerMIL@cv@@6B@;const cv::TrackerMIL::`vftable'
??_7TrackerModel@tracking@detail@cv@@6B@;const cv::detail::tracking::TrackerModel::`vftable'
??_7TrackerSamplerAlgorithm@tracking@detail@cv@@6B@;const cv::detail::tracking::TrackerSamplerAlgorithm::`vftable'
??_7TrackerSamplerCSC@tracking@detail@cv@@6B@;const cv::detail::tracking::TrackerSamplerCSC::`vftable'
??_7TrackerStateEstimator@tracking@detail@cv@@6B@;const cv::detail::tracking::TrackerStateEstimator::`vftable'
??_7TrackerStateEstimatorMILBoosting@tracking@detail@cv@@6B@;const cv::detail::tracking::TrackerStateEstimatorMILBoosting::`vftable'
??_7TrackerTargetState@tracking@detail@cv@@6B@;const cv::detail::tracking::TrackerTargetState::`vftable'
??_7TrainData@ml@cv@@6B@;const cv::ml::TrainData::`vftable'
??_7TransverseMercatorWarper@cv@@6B@;const cv::TransverseMercatorWarper::`vftable'
??_7TransverseMercatorWarper@detail@cv@@6B@;const cv::detail::TransverseMercatorWarper::`vftable'
??_7UIBackend@highgui_backend@cv@@6B@;const cv::highgui_backend::UIBackend::`vftable'
??_7UITrackbar@highgui_backend@cv@@6B@;const cv::highgui_backend::UITrackbar::`vftable'
??_7UIWindow@highgui_backend@cv@@6B@;const cv::highgui_backend::UIWindow::`vftable'
??_7UIWindowBase@highgui_backend@cv@@6B@;const cv::highgui_backend::UIWindowBase::`vftable'
??_7UserContext@Context@ocl@cv@@6B@;const cv::ocl::Context::UserContext::`vftable'
??_7VariationalRefinement@cv@@6B@;const cv::VariationalRefinement::`vftable'
??_7VideoCapture@cv@@6B@;const cv::VideoCapture::`vftable'
??_7VideoWriter@cv@@6B@;const cv::VideoWriter::`vftable'
??_7VoronoiSeamFinder@detail@cv@@6B@;const cv::detail::VoronoiSeamFinder::`vftable'
??_7WarperCreator@cv@@6B@;const cv::WarperCreator::`vftable'
??_8BRISK@cv@@7B@;const cv::BRISK::`vbtable'
??_8Feature2D@cv@@7B@;const cv::Feature2D::`vbtable'
??_8SIFT@cv@@7B@;const cv::SIFT::`vbtable'
??_8SimpleBlobDetector@cv@@7B@;const cv::SimpleBlobDetector::`vbtable'
??_8SimpleBlobDetectorImpl@cv@@7B@;const cv::SimpleBlobDetectorImpl::`vbtable'
??_DBRISK@cv@@QEAAXXZ;void cv::BRISK::`vbase destructor'(void)
??_DFeature2D@cv@@QEAAXXZ;void cv::Feature2D::`vbase destructor'(void)
??_DSIFT@cv@@QEAAXXZ;void cv::SIFT::`vbase destructor'(void)
??_DSimpleBlobDetector@cv@@QEAAXXZ;void cv::SimpleBlobDetector::`vbase destructor'(void)
??_DSimpleBlobDetectorImpl@cv@@QEAAXXZ;void cv::SimpleBlobDetectorImpl::`vbase destructor'(void)
??_FAffineBestOf2NearestMatcher@detail@cv@@QEAAXXZ;void cv::detail::AffineBestOf2NearestMatcher::`default constructor closure'(void)
??_FAffineWarper@detail@cv@@QEAAXXZ;void cv::detail::AffineWarper::`default constructor closure'(void)
??_FAutotunedIndexParams@flann@cv@@QEAAXXZ;void cv::flann::AutotunedIndexParams::`default constructor closure'(void)
??_FBFMatcher@cv@@QEAAXXZ;void cv::BFMatcher::`default constructor closure'(void)
??_FBestOf2NearestMatcher@detail@cv@@QEAAXXZ;void cv::detail::BestOf2NearestMatcher::`default constructor closure'(void)
??_FBestOf2NearestRangeMatcher@detail@cv@@QEAAXXZ;void cv::detail::BestOf2NearestRangeMatcher::`default constructor closure'(void)
??_FBlocksChannelsCompensator@detail@cv@@QEAAXXZ;void cv::detail::BlocksChannelsCompensator::`default constructor closure'(void)
??_FBlocksCompensator@detail@cv@@QEAAXXZ;void cv::detail::BlocksCompensator::`default constructor closure'(void)
??_FBlocksGainCompensator@detail@cv@@QEAAXXZ;void cv::detail::BlocksGainCompensator::`default constructor closure'(void)
??_FBufferArea@utils@cv@@QEAAXXZ;void cv::utils::BufferArea::`default constructor closure'(void)
??_FChannelsCompensator@detail@cv@@QEAAXXZ;void cv::detail::ChannelsCompensator::`default constructor closure'(void)
??_FCompositeIndexParams@flann@cv@@QEAAXXZ;void cv::flann::CompositeIndexParams::`default constructor closure'(void)
??_FCompressedRectilinearPortraitWarper@cv@@QEAAXXZ;void cv::CompressedRectilinearPortraitWarper::`default constructor closure'(void)
??_FCompressedRectilinearWarper@cv@@QEAAXXZ;void cv::CompressedRectilinearWarper::`default constructor closure'(void)
??_FDictValue@dnn4_v20211004@dnn@cv@@QEAAXXZ;void cv::dnn::dnn4_v20211004::DictValue::`default constructor closure'(void)
??_FDisjointSets@detail@cv@@QEAAXXZ;void cv::detail::DisjointSets::`default constructor closure'(void)
??_FDpSeamFinder@detail@cv@@QEAAXXZ;void cv::detail::DpSeamFinder::`default constructor closure'(void)
??_FEvent@cuda@cv@@QEAAXXZ;void cv::cuda::Event::`default constructor closure'(void)
??_FFeatherBlender@detail@cv@@QEAAXXZ;void cv::detail::FeatherBlender::`default constructor closure'(void)
??_FFeaturesMatcher@detail@cv@@QEAAXXZ;void cv::detail::FeaturesMatcher::`default constructor closure'(void)
??_FFlannBasedMatcher@cv@@QEAAXXZ;void cv::FlannBasedMatcher::`default constructor closure'(void)
??_FGpuMat@cuda@cv@@QEAAXXZ;void cv::cuda::GpuMat::`default constructor closure'(void)
??_FGraph@detail@cv@@QEAAXXZ;void cv::detail::Graph::`default constructor closure'(void)
??_FGraphCutSeamFinder@detail@cv@@QEAAXXZ;void cv::detail::GraphCutSeamFinder::`default constructor closure'(void)
??_FHierarchicalClusteringIndexParams@flann@cv@@QEAAXXZ;void cv::flann::HierarchicalClusteringIndexParams::`default constructor closure'(void)
??_FHomographyBasedEstimator@detail@cv@@QEAAXXZ;void cv::detail::HomographyBasedEstimator::`default constructor closure'(void)
??_FHostMem@cuda@cv@@QEAAXXZ;void cv::cuda::HostMem::`default constructor closure'(void)
??_FKDTreeIndexParams@flann@cv@@QEAAXXZ;void cv::flann::KDTreeIndexParams::`default constructor closure'(void)
??_FKMeansIndexParams@flann@cv@@QEAAXXZ;void cv::flann::KMeansIndexParams::`default constructor closure'(void)
??_FLDA@cv@@QEAAXXZ;void cv::LDA::`default constructor closure'(void)
??_FMultiBandBlender@detail@cv@@QEAAXXZ;void cv::detail::MultiBandBlender::`default constructor closure'(void)
??_FNodeData@instr@cv@@QEAAXXZ;void cv::instr::NodeData::`default constructor closure'(void)
??_FPaniniPortraitWarper@cv@@QEAAXXZ;void cv::PaniniPortraitWarper::`default constructor closure'(void)
??_FPaniniWarper@cv@@QEAAXXZ;void cv::PaniniWarper::`default constructor closure'(void)
??_FPlaneWarper@detail@cv@@QEAAXXZ;void cv::detail::PlaneWarper::`default constructor closure'(void)
??_FPlaneWarperGpu@detail@cv@@QEAAXXZ;void cv::detail::PlaneWarperGpu::`default constructor closure'(void)
??_FSearchParams@flann@cv@@QEAAXXZ;void cv::flann::SearchParams::`default constructor closure'(void)
??_FSimpleBlobDetectorImpl@cv@@QEAAXXZ;void cv::SimpleBlobDetectorImpl::`default constructor closure'(void)
??_FTrackerSamplerCSC@tracking@detail@cv@@QEAAXXZ;void cv::detail::tracking::TrackerSamplerCSC::`default constructor closure'(void)
??_FTrackerStateEstimatorMILBoosting@tracking@detail@cv@@QEAAXXZ;void cv::detail::tracking::TrackerStateEstimatorMILBoosting::`default constructor closure'(void)
??_FUMat@cv@@QEAAXXZ;void cv::UMat::`default constructor closure'(void)
??_Fqueue_capacity@streaming@gapi@cv@@QEAAXXZ;void cv::gapi::streaming::queue_capacity::`default constructor closure'(void)
?AGAST@cv@@YAXAEBV_InputArray@1@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@H_N@Z;void cv::AGAST(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,int,bool)
?AGAST@cv@@YAXAEBV_InputArray@1@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@H_NW4DetectorType@AgastFeatureDetector@1@@Z;void cv::AGAST(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,int,bool,enum cv::AgastFeatureDetector::DetectorType)
?BGR2Gray@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::BGR2Gray(class cv::GMat const &)
?BGR2I420@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::BGR2I420(class cv::GMat const &)
?BGR2LUV@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::BGR2LUV(class cv::GMat const &)
?BGR2RGB@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::BGR2RGB(class cv::GMat const &)
?BGR2YUV@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::BGR2YUV(class cv::GMat const &)
?BGR@streaming@gapi@cv@@YA?AVGMat@3@AEBVGFrame@3@@Z;class cv::GMat cv::gapi::streaming::BGR(class cv::GFrame const &)
?BackgroundSubtractor@gapi@cv@@YA?AVGMat@2@AEBV32@AEBUBackgroundSubtractorParams@video@12@@Z;class cv::GMat cv::gapi::BackgroundSubtractor(class cv::GMat const &,struct cv::gapi::video::BackgroundSubtractorParams const &)
?BayerGR2RGB@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::BayerGR2RGB(class cv::GMat const &)
?CamShift@cv@@YA?AVRotatedRect@1@AEBV_InputArray@1@AEAV?$Rect_@H@1@VTermCriteria@1@@Z;class cv::RotatedRect cv::CamShift(class cv::_InputArray const &,class cv::Rect_<int> &,class cv::TermCriteria)
?Canny@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@NN_N@Z;void cv::Canny(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,double,double,bool)
?Canny@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@NNH_N@Z;void cv::Canny(class cv::_InputArray const &,class cv::_OutputArray const &,double,double,int,bool)
?Canny@gapi@cv@@YA?AVGMat@2@AEBV32@NNH_N@Z;class cv::GMat cv::gapi::Canny(class cv::GMat const &,double,double,int,bool)
?Cholesky32f@hal@cv@@YA_NPEAM_KH01H@Z;bool cv::hal::Cholesky32f(float *,unsigned __int64,int,float *,unsigned __int64,int)
?Cholesky64f@hal@cv@@YA_NPEAN_KH01H@Z;bool cv::hal::Cholesky64f(double *,unsigned __int64,int,double *,unsigned __int64,int)
?Cholesky@cv@@YA_NPEAM_KH01H@Z;bool cv::Cholesky(float *,unsigned __int64,int,float *,unsigned __int64,int)
?Cholesky@cv@@YA_NPEAN_KH01H@Z;bool cv::Cholesky(double *,unsigned __int64,int,double *,unsigned __int64,int)
?Cholesky@hal@cv@@YA_NPEAM_KH01H@Z;bool cv::hal::Cholesky(float *,unsigned __int64,int,float *,unsigned __int64,int)
?Cholesky@hal@cv@@YA_NPEAN_KH01H@Z;bool cv::hal::Cholesky(double *,unsigned __int64,int,double *,unsigned __int64,int)
?ComputeHomography@internal@cv@@YA?AVMat@2@V32@0@Z;class cv::Mat cv::internal::ComputeHomography(class cv::Mat,class cv::Mat)
?Constant@KernelArg@ocl@cv@@SA?AV123@AEBVMat@3@@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::Constant(class cv::Mat const &)
?ECCEnabled@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::ECCEnabled(void)
?EMD@cv@@YAMAEBV_InputArray@1@0H0PEAMAEBV_OutputArray@1@@Z;float cv::EMD(class cv::_InputArray const &,class cv::_InputArray const &,int,class cv::_InputArray const &,float *,class cv::_OutputArray const &)
?EstimateUncertainties@internal@cv@@YAXAEBV_InputArray@2@0AEBUIntrinsicParams@12@00AEAU412@AEAV?$Vec@N$01@2@NHAEAN@Z;void cv::internal::EstimateUncertainties(class cv::_InputArray const &,class cv::_InputArray const &,struct cv::internal::IntrinsicParams const &,class cv::_InputArray const &,class cv::_InputArray const &,struct cv::internal::IntrinsicParams &,class cv::Vec<double,2> &,double,int,double &)
?FAST@cv@@YAXAEBV_InputArray@1@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@H_N@Z;void cv::FAST(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,int,bool)
?FAST@cv@@YAXAEBV_InputArray@1@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@H_NW4DetectorType@FastFeatureDetector@1@@Z;void cv::FAST(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,int,bool,enum cv::FastFeatureDetector::DetectorType)
?GaussianBlur@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@V?$Size_@H@1@NNH@Z;void cv::GaussianBlur(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Size_<int>,double,double,int)
?HoughCircles@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HNNNNHH@Z;void cv::HoughCircles(class cv::_InputArray const &,class cv::_OutputArray const &,int,double,double,double,double,int,int)
?HoughLines@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@NNHNNNN@Z;void cv::HoughLines(class cv::_InputArray const &,class cv::_OutputArray const &,double,double,int,double,double,double,double)
?HoughLinesP@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@NNHNN@Z;void cv::HoughLinesP(class cv::_InputArray const &,class cv::_OutputArray const &,double,double,int,double,double)
?HoughLinesPointSet@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHNNNNNN@Z;void cv::HoughLinesPointSet(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,double,double,double,double,double,double)
?HuMoments@cv@@YAXAEBVMoments@1@AEBV_OutputArray@1@@Z;void cv::HuMoments(class cv::Moments const &,class cv::_OutputArray const &)
?HuMoments@cv@@YAXAEBVMoments@1@QEAN@Z;void cv::HuMoments(class cv::Moments const &,double * const)
?I4202BGR@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::I4202BGR(class cv::GMat const &)
?I4202RGB@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::I4202RGB(class cv::GMat const &)
?InLineB@View@fluid@gapi@cv@@QEBAPEBEH@Z;unsigned char const * cv::gapi::fluid::View::InLineB(int)
?Init@IntrinsicParams@internal@cv@@QEAAXAEBV?$Vec@N$01@3@0AEBV?$Vec@N$03@3@AEBN@Z;void cv::internal::IntrinsicParams::Init(class cv::Vec<double,2> const &,class cv::Vec<double,2> const &,class cv::Vec<double,4> const &,double const &)
?K@CameraParams@detail@cv@@QEBA?AVMat@3@XZ;class cv::Mat cv::detail::CameraParams::K(void)
?KalmanFilter@gapi@cv@@YA?AVGMat@2@AEBV32@AEBV?$GOpaque@_N@2@0AEBUKalmanParams@12@@Z;class cv::GMat cv::gapi::KalmanFilter(class cv::GMat const &,class cv::GOpaque<bool> const &,class cv::GMat const &,struct cv::gapi::KalmanParams const &)
?KalmanFilter@gapi@cv@@YA?AVGMat@2@AEBV32@AEBV?$GOpaque@_N@2@AEBUKalmanParams@12@@Z;class cv::GMat cv::gapi::KalmanFilter(class cv::GMat const &,class cv::GOpaque<bool> const &,struct cv::gapi::KalmanParams const &)
?LU32f@hal@cv@@YAHPEAM_KH01H@Z;int cv::hal::LU32f(float *,unsigned __int64,int,float *,unsigned __int64,int)
?LU64f@hal@cv@@YAHPEAN_KH01H@Z;int cv::hal::LU64f(double *,unsigned __int64,int,double *,unsigned __int64,int)
?LU@cv@@YAHPEAM_KH01H@Z;int cv::LU(float *,unsigned __int64,int,float *,unsigned __int64,int)
?LU@cv@@YAHPEAN_KH01H@Z;int cv::LU(double *,unsigned __int64,int,double *,unsigned __int64,int)
?LU@hal@cv@@YAHPEAM_KH01H@Z;int cv::hal::LU(float *,unsigned __int64,int,float *,unsigned __int64,int)
?LU@hal@cv@@YAHPEAN_KH01H@Z;int cv::hal::LU(double *,unsigned __int64,int,double *,unsigned __int64,int)
?LUT@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::LUT(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?LUT@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVMat@2@@Z;class cv::GMat cv::gapi::LUT(class cv::GMat const &,class cv::Mat const &)
?LUV2BGR@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::LUV2BGR(class cv::GMat const &)
?Laplacian@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHNNH@Z;void cv::Laplacian(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,double,double,int)
?Laplacian@gapi@cv@@YA?AVGMat@2@AEBV32@HHNNH@Z;class cv::GMat cv::gapi::Laplacian(class cv::GMat const &,int,int,double,double,int)
?Local@KernelArg@ocl@cv@@SA?AV123@_K@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::Local(unsigned __int64)
?MAX_PLANES@View@MediaFrame@cv@@2_KB;unsigned __int64 const cv::MediaFrame::View::MAX_PLANES
?Mahalanobis@cv@@YANAEBV_InputArray@1@00@Z;double cv::Mahalanobis(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?NMSBoxes@dnn4_v20211004@dnn@cv@@YAXAEBV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEBV?$vector@MV?$allocator@M@std@@@5@MMAEAV?$vector@HV?$allocator@H@std@@@5@MH@Z;void cv::dnn::dnn4_v20211004::NMSBoxes(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > const &,class std::vector<float,class std::allocator<float> > const &,float,float,class std::vector<int,class std::allocator<int> > &,float,int)
?NMSBoxes@dnn4_v20211004@dnn@cv@@YAXAEBV?$vector@V?$Rect_@N@cv@@V?$allocator@V?$Rect_@N@cv@@@std@@@std@@AEBV?$vector@MV?$allocator@M@std@@@5@MMAEAV?$vector@HV?$allocator@H@std@@@5@MH@Z;void cv::dnn::dnn4_v20211004::NMSBoxes(class std::vector<class cv::Rect_<double>,class std::allocator<class cv::Rect_<double> > > const &,class std::vector<float,class std::allocator<float> > const &,float,float,class std::vector<int,class std::allocator<int> > &,float,int)
?NMSBoxes@dnn4_v20211004@dnn@cv@@YAXAEBV?$vector@VRotatedRect@cv@@V?$allocator@VRotatedRect@cv@@@std@@@std@@AEBV?$vector@MV?$allocator@M@std@@@5@MMAEAV?$vector@HV?$allocator@H@std@@@5@MH@Z;void cv::dnn::dnn4_v20211004::NMSBoxes(class std::vector<class cv::RotatedRect,class std::allocator<class cv::RotatedRect> > const &,class std::vector<float,class std::allocator<float> > const &,float,float,class std::vector<int,class std::allocator<int> > &,float,int)
?NV12toBGR@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::NV12toBGR(class cv::GMat const &,class cv::GMat const &)
?NV12toBGRp@gapi@cv@@YA?AVGMatP@2@AEBVGMat@2@0@Z;class cv::GMatP cv::gapi::NV12toBGRp(class cv::GMat const &,class cv::GMat const &)
?NV12toGray@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::NV12toGray(class cv::GMat const &,class cv::GMat const &)
?NV12toRGB@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::NV12toRGB(class cv::GMat const &,class cv::GMat const &)
?NV12toRGBp@gapi@cv@@YA?AVGMatP@2@AEBVGMat@2@0@Z;class cv::GMatP cv::gapi::NV12toRGBp(class cv::GMat const &,class cv::GMat const &)
?NormalizePixels@internal@cv@@YA?AVMat@2@AEBV32@AEBUIntrinsicParams@12@@Z;class cv::Mat cv::internal::NormalizePixels(class cv::Mat const &,struct cv::internal::IntrinsicParams const &)
?Null@Stream@cuda@cv@@SAAEAV123@XZ;class cv::cuda::Stream & cv::cuda::Stream::Null(void)
?ORIG_RESOL@Stitcher@cv@@2NB;double const cv::Stitcher::ORIG_RESOL
?OpenCLVersion@Device@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Device::OpenCLVersion(void)
?OpenCL_C_Version@Device@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Device::OpenCL_C_Version(void)
?OutLineB@Buffer@fluid@gapi@cv@@QEAAPEAEH@Z;unsigned char * cv::gapi::fluid::Buffer::OutLineB(int)
?PCABackProject@cv@@YAXAEBV_InputArray@1@00AEBV_OutputArray@1@@Z;void cv::PCABackProject(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?PCACompute@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@AEBV_OutputArray@1@2H@Z;void cv::PCACompute(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int)
?PCACompute@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@AEBV_OutputArray@1@2N@Z;void cv::PCACompute(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double)
?PCACompute@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@AEBV_OutputArray@1@H@Z;void cv::PCACompute(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,int)
?PCACompute@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@AEBV_OutputArray@1@N@Z;void cv::PCACompute(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,double)
?PCAProject@cv@@YAXAEBV_InputArray@1@00AEBV_OutputArray@1@@Z;void cv::PCAProject(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?PSNR@cv@@YANAEBV_InputArray@1@0N@Z;double cv::PSNR(class cv::_InputArray const &,class cv::_InputArray const &,double)
?PtrReadOnly@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::PtrReadOnly(class cv::UMat const &)
?PtrReadWrite@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::PtrReadWrite(class cv::UMat const &)
?PtrWriteOnly@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::PtrWriteOnly(class cv::UMat const &)
?QR32f@hal@cv@@YAHPEAM_KHHH010@Z;int cv::hal::QR32f(float *,unsigned __int64,int,int,int,float *,unsigned __int64,float *)
?QR64f@hal@cv@@YAHPEAN_KHHH010@Z;int cv::hal::QR64f(double *,unsigned __int64,int,int,int,double *,unsigned __int64,double *)
?RGB2Gray@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::RGB2Gray(class cv::GMat const &)
?RGB2Gray@gapi@cv@@YA?AVGMat@2@AEBV32@MMM@Z;class cv::GMat cv::gapi::RGB2Gray(class cv::GMat const &,float,float,float)
?RGB2HSV@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::RGB2HSV(class cv::GMat const &)
?RGB2I420@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::RGB2I420(class cv::GMat const &)
?RGB2Lab@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::RGB2Lab(class cv::GMat const &)
?RGB2YUV422@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::RGB2YUV422(class cv::GMat const &)
?RGB2YUV@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::RGB2YUV(class cv::GMat const &)
?RQDecomp3x3@cv@@YA?AV?$Vec@N$02@1@AEBV_InputArray@1@AEBV_OutputArray@1@1111@Z;class cv::Vec<double,3> cv::RQDecomp3x3(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?ReadOnly@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@HH@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::ReadOnly(class cv::UMat const &,int,int)
?ReadOnlyNoSize@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@HH@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::ReadOnlyNoSize(class cv::UMat const &,int,int)
?ReadWrite@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@HH@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::ReadWrite(class cv::UMat const &,int,int)
?ReadWriteNoSize@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@HH@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::ReadWriteNoSize(class cv::UMat const &,int,int)
?Rodrigues@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1@Z;void cv::Rodrigues(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?SVBackSubst@cv@@YAXAEBV_InputArray@1@000AEBV_OutputArray@1@@Z;void cv::SVBackSubst(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?SVD32f@hal@cv@@YAXPEAM_K00101HHH@Z;void cv::hal::SVD32f(float *,unsigned __int64,float *,float *,unsigned __int64,float *,unsigned __int64,int,int,int)
?SVD64f@hal@cv@@YAXPEAN_K00101HHH@Z;void cv::hal::SVD64f(double *,unsigned __int64,double *,double *,unsigned __int64,double *,unsigned __int64,int,int,int)
?SVDecomp@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@11H@Z;void cv::SVDecomp(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int)
?Scharr@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHHNNH@Z;void cv::Scharr(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int,double,double,int)
?Sobel@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHHHNNH@Z;void cv::Sobel(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int,int,double,double,int)
?Sobel@gapi@cv@@YA?AVGMat@2@AEBV32@HHHHNNHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::Sobel(class cv::GMat const &,int,int,int,int,double,double,int,class cv::Scalar_<double> const &)
?SobelXY@gapi@cv@@YA?AV?$tuple@VGMat@cv@@V12@@std@@AEBVGMat@2@HHHNNHAEBV?$Scalar_@N@2@@Z;class std::tuple<class cv::GMat,class cv::GMat> cv::gapi::SobelXY(class cv::GMat const &,int,int,int,double,double,int,class cv::Scalar_<double> const &)
?UV@streaming@gapi@cv@@YA?AVGMat@3@AEBVGFrame@3@@Z;class cv::GMat cv::gapi::streaming::UV(class cv::GFrame const &)
?WriteOnly@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@HH@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::WriteOnly(class cv::UMat const &,int,int)
?WriteOnlyNoSize@KernelArg@ocl@cv@@SA?AV123@AEBVUMat@3@HH@Z;class cv::ocl::KernelArg cv::ocl::KernelArg::WriteOnlyNoSize(class cv::UMat const &,int,int)
?Y@streaming@gapi@cv@@YA?AVGMat@3@AEBVGFrame@3@@Z;class cv::GMat cv::gapi::streaming::Y(class cv::GFrame const &)
?YUV2BGR@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::YUV2BGR(class cv::GMat const &)
?YUV2RGB@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::YUV2RGB(class cv::GMat const &)
?__termination@cv@@3_NA;bool cv::__termination
?_getImpl@AsyncArray@cv@@QEBAPEAXXZ;void * cv::AsyncArray::_getImpl(void)
?_getImpl@AsyncPromise@cv@@QEBAPEAXXZ;void * cv::AsyncPromise::_getImpl(void)
?about@CommandLineParser@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::CommandLineParser::about(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?abs@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAV32@@Z;void cv::MatOp::abs(class cv::MatExpr const &,class cv::MatExpr &)
?abs@cv@@YA?AVMatExpr@1@AEBV21@@Z;class cv::MatExpr cv::abs(class cv::MatExpr const &)
?abs@cv@@YA?AVMatExpr@1@AEBVMat@1@@Z;class cv::MatExpr cv::abs(class cv::Mat const &)
?absDiff@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::absDiff(class cv::GMat const &,class cv::GMat const &)
?absDiffC@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::absDiffC(class cv::GMat const &,class cv::GScalar const &)
?absdiff16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::absdiff16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?absdiff16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::absdiff16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?absdiff32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::absdiff32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?absdiff32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::absdiff32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?absdiff64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::absdiff64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?absdiff8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::absdiff8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?absdiff8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::absdiff8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?absdiff@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::absdiff(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?access@MediaFrame@cv@@QEBA?AVView@12@W4Access@12@@Z;class cv::MediaFrame::View cv::MediaFrame::access(enum cv::MediaFrame::Access)
?access@RMat@cv@@QEBA?AVView@12@W4Access@12@@Z;class cv::RMat::View cv::RMat::access(enum cv::RMat::Access)
?access@RMatMediaFrameAdapter@gimpl@cv@@UEAA?AVView@RMat@3@W4Access@53@@Z;class cv::RMat::View cv::gimpl::RMatMediaFrameAdapter::access(enum cv::RMat::Access)
?accumulate@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@0@Z;void cv::accumulate(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?accumulateProduct@cv@@YAXAEBV_InputArray@1@0AEBV_InputOutputArray@1@0@Z;void cv::accumulateProduct(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?accumulateSquare@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@0@Z;void cv::accumulateSquare(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?accumulateWeighted@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@N0@Z;void cv::accumulateWeighted(class cv::_InputArray const &,class cv::_InputOutputArray const &,double,class cv::_InputArray const &)
?adaptiveThreshold@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@NHHHN@Z;void cv::adaptiveThreshold(class cv::_InputArray const &,class cv::_OutputArray const &,double,int,int,int,double)
?add16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::add16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?add16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::add16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?add32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::add32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?add32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::add32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?add64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::add64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?add8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::add8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?add8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::add8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?add@BOWTrainer@cv@@QEAAXAEBVMat@2@@Z;void cv::BOWTrainer::add(class cv::Mat const &)
?add@DescriptorMatcher@cv@@UEAAXAEBV_InputArray@2@@Z;void cv::DescriptorMatcher::add(class cv::_InputArray const &)
?add@FlannBasedMatcher@cv@@UEAAXAEBV_InputArray@2@@Z;void cv::FlannBasedMatcher::add(class cv::_InputArray const &)
?add@MatOp@cv@@UEBAXAEBVMatExpr@2@0AEAV32@@Z;void cv::MatOp::add(class cv::MatExpr const &,class cv::MatExpr const &,class cv::MatExpr &)
?add@MatOp@cv@@UEBAXAEBVMatExpr@2@AEBV?$Scalar_@N@2@AEAV32@@Z;void cv::MatOp::add(class cv::MatExpr const &,class cv::Scalar_<double> const &,class cv::MatExpr &)
?add@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@0H@Z;void cv::add(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,int)
?add@gapi@cv@@YA?AVGMat@2@AEBV32@0H@Z;class cv::GMat cv::gapi::add(class cv::GMat const &,class cv::GMat const &,int)
?addBackendPasses@Priv@GBackend@gapi@cv@@UEAAXAEAVExecutionEngineSetupContext@ade@@@Z;void cv::gapi::GBackend::Priv::addBackendPasses(class ade::ExecutionEngineSetupContext &)
?addC@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@H@Z;class cv::GMat cv::gapi::addC(class cv::GMat const &,class cv::GScalar const &,int)
?addC@gapi@cv@@YA?AVGMat@2@AEBVGScalar@2@AEBV32@H@Z;class cv::GMat cv::gapi::addC(class cv::GScalar const &,class cv::GMat const &,int)
?addDataSearchPath@utils@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::utils::addDataSearchPath(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?addDataSearchSubDirectory@utils@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::utils::addDataSearchSubDirectory(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?addEdge@Graph@detail@cv@@QEAAXHHM@Z;void cv::detail::Graph::addEdge(int,int,float)
?addLayer@Net@dnn4_v20211004@dnn@cv@@QEAAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAVLayerParams@234@@Z;int cv::dnn::dnn4_v20211004::Net::addLayer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::dnn::dnn4_v20211004::LayerParams &)
?addLayer@Net@dnn4_v20211004@dnn@cv@@QEAAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEBHAEAVLayerParams@234@@Z;int cv::dnn::dnn4_v20211004::Net::addLayer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int const &,class cv::dnn::dnn4_v20211004::LayerParams &)
?addLayerToPrev@Net@dnn4_v20211004@dnn@cv@@QEAAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAVLayerParams@234@@Z;int cv::dnn::dnn4_v20211004::Net::addLayerToPrev(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::dnn::dnn4_v20211004::LayerParams &)
?addLayerToPrev@Net@dnn4_v20211004@dnn@cv@@QEAAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEBHAEAVLayerParams@234@@Z;int cv::dnn::dnn4_v20211004::Net::addLayerToPrev(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int const &,class cv::dnn::dnn4_v20211004::LayerParams &)
?addMetaSensitiveBackendPasses@Priv@GBackend@gapi@cv@@UEAAXAEAVExecutionEngineSetupContext@ade@@@Z;void cv::gapi::GBackend::Priv::addMetaSensitiveBackendPasses(class ade::ExecutionEngineSetupContext &)
?addObject@DetectionBasedTracker@cv@@UEAAHAEBV?$Rect_@H@2@@Z;int cv::DetectionBasedTracker::addObject(class cv::Rect_<int> const &)
?addRNGBias32f@hal@cv@@YAXPEAMPEBMH@Z;void cv::hal::addRNGBias32f(float *,float const *,int)
?addRNGBias64f@hal@cv@@YAXPEANPEBNH@Z;void cv::hal::addRNGBias64f(double *,double const *,int)
?addSamplesDataSearchPath@samples@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::samples::addSamplesDataSearchPath(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?addSamplesDataSearchSubDirectory@samples@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::samples::addSamplesDataSearchSubDirectory(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?addText@cv@@YAXAEBVMat@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$Point_@H@1@1HV?$Scalar_@N@1@HHH@Z;void cv::addText(class cv::Mat const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Point_<int>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class cv::Scalar_<double>,int,int,int)
?addText@cv@@YAXAEBVMat@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$Point_@H@1@AEBUQtFont@1@@Z;void cv::addText(class cv::Mat const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Point_<int>,struct cv::QtFont const &)
?addTrackerFeature@TrackerFeatureSet@tracking@detail@cv@@QEAA_NAEBU?$Ptr@VTrackerFeature@tracking@detail@cv@@@4@@Z;bool cv::detail::tracking::TrackerFeatureSet::addTrackerFeature(struct cv::Ptr<class cv::detail::tracking::TrackerFeature> const &)
?addTrackerSamplerAlgorithm@TrackerSampler@tracking@detail@cv@@QEAA_NAEBU?$Ptr@VTrackerSamplerAlgorithm@tracking@detail@cv@@@4@@Z;bool cv::detail::tracking::TrackerSampler::addTrackerSamplerAlgorithm(struct cv::Ptr<class cv::detail::tracking::TrackerSamplerAlgorithm> const &)
?addView@Buffer@fluid@gapi@cv@@QEAAXPEBVView@234@@Z;void cv::gapi::fluid::Buffer::addView(class cv::gapi::fluid::View const *)
?addView@Priv@Buffer@fluid@gapi@cv@@QEAAXPEBVView@345@@Z;void cv::gapi::fluid::Buffer::Priv::addView(class cv::gapi::fluid::View const *)
?addWeighted16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::addWeighted16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?addWeighted16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::addWeighted16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?addWeighted32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::addWeighted32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?addWeighted32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::addWeighted32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?addWeighted64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::addWeighted64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?addWeighted8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::addWeighted8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?addWeighted8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::addWeighted8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?addWeighted@cv@@YAXAEBV_InputArray@1@N0NNAEBV_OutputArray@1@H@Z;void cv::addWeighted(class cv::_InputArray const &,double,class cv::_InputArray const &,double,double,class cv::_OutputArray const &,int)
?addWeighted@gapi@cv@@YA?AVGMat@2@AEBV32@N0NNH@Z;class cv::GMat cv::gapi::addWeighted(class cv::GMat const &,double,class cv::GMat const &,double,double,int)
?addref@Mat@cv@@QEAAXXZ;void cv::Mat::addref(void)
?addref@SparseMat@cv@@QEAAXXZ;void cv::SparseMat::addref(void)
?addref@UMat@cv@@QEAAXXZ;void cv::UMat::addref(void)
?addressBits@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::addressBits(void)
?adjustROI@GpuMat@cuda@cv@@QEAAAEAV123@HHHH@Z;class cv::cuda::GpuMat & cv::cuda::GpuMat::adjustROI(int,int,int,int)
?adjustROI@Mat@cv@@QEAAAEAV12@HHHH@Z;class cv::Mat & cv::Mat::adjustROI(int,int,int,int)
?adjustROI@UMat@cv@@QEAAAEAV12@HHHH@Z;class cv::UMat & cv::UMat::adjustROI(int,int,int,int)
?all@Range@cv@@SA?AV12@XZ;class cv::Range cv::Range::all(void)
?all@Scalar@own@gapi@cv@@SA?AV1234@N@Z;class cv::gapi::own::Scalar cv::gapi::own::Scalar::all(double)
?allocSingletonBuffer@cv@@YAPEAX_K@Z;void * cv::allocSingletonBuffer(unsigned __int64)
?allocSingletonNewBuffer@cv@@YAPEAX_K@Z;void * cv::allocSingletonNewBuffer(unsigned __int64)
?allocate@GIslandExecutable@gimpl@cv@@UEBA?AVRMat@3@AEBUGMatDesc@3@@Z;class cv::RMat cv::gimpl::GIslandExecutable::allocate(struct cv::GMatDesc const &)
?allocate@Priv@Buffer@fluid@gapi@cv@@QEAAXV?$optional@UBorder@fluid@gapi@cv@@@util@5@HHH@Z;void cv::gapi::fluid::Buffer::Priv::allocate(class cv::util::optional<struct cv::gapi::fluid::Border>,int,int,int)
?allocate_@BufferArea@utils@cv@@AEAAXPEAPEAXG_KG@Z;void cv::utils::BufferArea::allocate_(void * *,unsigned short,unsigned __int64,unsigned short)
?allocatesOutputs@GIslandExecutable@gimpl@cv@@UEBA_NXZ;bool cv::gimpl::GIslandExecutable::allocatesOutputs(void)
?allowsMerge@Priv@GBackend@gapi@cv@@UEBA_NAEBV?$TypedGraph@UNodeKind@gimpl@cv@@UFusedIsland@23@UDataSlot@23@UIslandExec@23@UEmitter@23@USink@23@UIslandsCompiled@23@UDesyncIslEdge@23@UTopologicalSortData@passes@ade@@@ade@@AEBV?$Handle@VNode@ade@@@6@11@Z;bool cv::gapi::GBackend::Priv::allowsMerge(class ade::TypedGraph<struct cv::gimpl::NodeKind,struct cv::gimpl::FusedIsland,struct cv::gimpl::DataSlot,struct cv::gimpl::IslandExec,struct cv::gimpl::Emitter,struct cv::gimpl::Sink,struct cv::gimpl::IslandsCompiled,struct cv::gimpl::DesyncIslEdge,struct ade::passes::TopologicalSortData> const &,class ade::Handle<class ade::Node> const &,class ade::Handle<class ade::Node> const &,class ade::Handle<class ade::Node> const &)
?and8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::and8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?apply@BlocksCompensator@detail@cv@@UEAAXHV?$Point_@H@3@AEBV_InputOutputArray@3@AEBV_InputArray@3@@Z;void cv::detail::BlocksCompensator::apply(int,class cv::Point_<int>,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?apply@BlocksGainCompensator@detail@cv@@UEAAXHV?$Point_@H@3@AEBV_InputOutputArray@3@AEBV_InputArray@3@@Z;void cv::detail::BlocksGainCompensator::apply(int,class cv::Point_<int>,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?apply@ChannelsCompensator@detail@cv@@UEAAXHV?$Point_@H@3@AEBV_InputOutputArray@3@AEBV_InputArray@3@@Z;void cv::detail::ChannelsCompensator::apply(int,class cv::Point_<int>,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?apply@GCompoundKernel@detail@cv@@QEAAXAEAUGCompoundContext@23@@Z;void cv::detail::GCompoundKernel::apply(struct cv::detail::GCompoundContext &)
?apply@GComputation@cv@@QEAA?AV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@AEBUExtractArgsCallback@detail@2@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@4@@Z;class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > cv::GComputation::apply(struct cv::detail::ExtractArgsCallback const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GComputation@cv@@QEAAX$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@4@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@4@@Z;void cv::GComputation::apply(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GComputation@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@0$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@4@@Z;void cv::GComputation::apply(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GComputation@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEAV34@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@4@@Z;void cv::GComputation::apply(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GComputation@cv@@QEAAXVMat@2@0AEAV32@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;void cv::GComputation::apply(class cv::Mat,class cv::Mat,class cv::Mat &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GComputation@cv@@QEAAXVMat@2@0AEAV?$Scalar_@N@2@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;void cv::GComputation::apply(class cv::Mat,class cv::Mat,class cv::Scalar_<double> &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GComputation@cv@@QEAAXVMat@2@AEAV32@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;void cv::GComputation::apply(class cv::Mat,class cv::Mat &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GComputation@cv@@QEAAXVMat@2@AEAV?$Scalar_@N@2@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;void cv::GComputation::apply(class cv::Mat,class cv::Scalar_<double> &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?apply@GOCLKernel@cv@@QEAAXAEAVGOCLContext@2@@Z;void cv::GOCLKernel::apply(class cv::GOCLContext &)
?apply@GainCompensator@detail@cv@@UEAAXHV?$Point_@H@3@AEBV_InputOutputArray@3@AEBV_InputArray@3@@Z;void cv::detail::GainCompensator::apply(int,class cv::Point_<int>,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?apply@NoExposureCompensator@detail@cv@@UEAAXHV?$Point_@H@3@AEBV_InputOutputArray@3@AEBV_InputArray@3@@Z;void cv::detail::NoExposureCompensator::apply(int,class cv::Point_<int>,class cv::_InputOutputArray const &,class cv::_InputArray const &)
?applyColorMap@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0@Z;void cv::applyColorMap(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?applyColorMap@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::applyColorMap(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?applyHalideScheduler@Layer@dnn4_v20211004@dnn@cv@@UEBAXAEAU?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@4@AEBV?$vector@PEAVMat@cv@@V?$allocator@PEAVMat@cv@@@std@@@std@@AEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@7@H@Z;void cv::dnn::dnn4_v20211004::Layer::applyHalideScheduler(struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> &,class std::vector<class cv::Mat *,class std::allocator<class cv::Mat *> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,int)
?applyImage@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@3@@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::applyImage(class cv::_InputArray const &)
?applyImageFeatures@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@AEBV_InputArray@3@000@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::applyImageFeatures(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?approxPolyDP@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@N_N@Z;void cv::approxPolyDP(class cv::_InputArray const &,class cv::_OutputArray const &,double,bool)
?arcLength@cv@@YANAEBV_InputArray@1@_N@Z;double cv::arcLength(class cv::_InputArray const &,bool)
?arrowedLine@cv@@YAXAEBV_InputOutputArray@1@V?$Point_@H@1@1AEBV?$Scalar_@N@1@HHHN@Z;void cv::arrowedLine(class cv::_InputOutputArray const &,class cv::Point_<int>,class cv::Point_<int>,class cv::Scalar_<double> const &,int,int,int,double)
?asInterleaved@GMatDesc@cv@@QEBA?AU12@XZ;struct cv::GMatDesc cv::GMatDesc::asInterleaved(void)
?asPlanar@GMatDesc@cv@@QEBA?AU12@H@Z;struct cv::GMatDesc cv::GMatDesc::asPlanar(int)
?asPlanar@GMatDesc@cv@@QEBA?AU12@XZ;struct cv::GMatDesc cv::GMatDesc::asPlanar(void)
?assign@_OutputArray@cv@@QEBAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::_OutputArray::assign(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
?assign@_OutputArray@cv@@QEBAXAEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;void cv::_OutputArray::assign(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
?assign@_OutputArray@cv@@QEBAXAEBVMat@2@@Z;void cv::_OutputArray::assign(class cv::Mat const &)
?assign@_OutputArray@cv@@QEBAXAEBVUMat@2@@Z;void cv::_OutputArray::assign(class cv::UMat const &)
?assignTo@GpuMat@cuda@cv@@QEBAXAEAV123@H@Z;void cv::cuda::GpuMat::assignTo(class cv::cuda::GpuMat &,int)
?assignTo@Mat@cv@@QEBAXAEAV12@H@Z;void cv::Mat::assignTo(class cv::Mat &,int)
?assignTo@SparseMat@cv@@QEBAXAEAV12@H@Z;void cv::SparseMat::assignTo(class cv::SparseMat &,int)
?assignTo@UMat@cv@@QEBAXAEAV12@H@Z;void cv::UMat::assignTo(class cv::UMat &,int)
?async@wip@gapi@cv@@YA?AV?$future@X@std@@AEAVGCompiled@3@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@5@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@5@@Z;class std::future<void> cv::gapi::wip::async(class cv::GCompiled &,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&)
?async@wip@gapi@cv@@YA?AV?$future@X@std@@AEAVGCompiled@3@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@5@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@5@AEAVGAsyncContext@123@@Z;class std::future<void> cv::gapi::wip::async(class cv::GCompiled &,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&,class cv::gapi::wip::GAsyncContext &)
?async@wip@gapi@cv@@YAXAEAVGCompiled@3@$$QEAV?$function@$$A6AXVexception_ptr@std@@@Z@std@@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@6@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@6@@Z;void cv::gapi::wip::async(class cv::GCompiled &,class std::function<void > &&,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&)
?async@wip@gapi@cv@@YAXAEAVGCompiled@3@$$QEAV?$function@$$A6AXVexception_ptr@std@@@Z@std@@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@6@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@6@AEAVGAsyncContext@123@@Z;void cv::gapi::wip::async(class cv::GCompiled &,class std::function<void > &&,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&,class cv::gapi::wip::GAsyncContext &)
?asyncEngineCount@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::asyncEngineCount(void)
?async_apply@wip@gapi@cv@@YA?AV?$future@X@std@@AEAVGComputation@3@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@5@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@5@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@5@@Z;class std::future<void> cv::gapi::wip::async_apply(class cv::GComputation &,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?async_apply@wip@gapi@cv@@YA?AV?$future@X@std@@AEAVGComputation@3@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@5@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@5@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@5@AEAVGAsyncContext@123@@Z;class std::future<void> cv::gapi::wip::async_apply(class cv::GComputation &,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&,class cv::gapi::wip::GAsyncContext &)
?async_apply@wip@gapi@cv@@YAXAEAVGComputation@3@$$QEAV?$function@$$A6AXVexception_ptr@std@@@Z@std@@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@6@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@6@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@6@@Z;void cv::gapi::wip::async_apply(class cv::GComputation &,class std::function<void > &&,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?async_apply@wip@gapi@cv@@YAXAEAVGComputation@3@$$QEAV?$function@$$A6AXVexception_ptr@std@@@Z@std@@$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@6@$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@6@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@6@AEAVGAsyncContext@123@@Z;void cv::gapi::wip::async_apply(class cv::GComputation &,class std::function<void > &&,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&,class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&,class cv::gapi::wip::GAsyncContext &)
?atFrameSize@AVIWriteContainer@cv@@QEBA_K_K@Z;unsigned __int64 cv::AVIWriteContainer::atFrameSize(unsigned __int64)
?attachContext@ocl@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX11@Z;void cv::ocl::attachContext(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void *,void *,void *)
?augAssignAdd@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAVMat@2@@Z;void cv::MatOp::augAssignAdd(class cv::MatExpr const &,class cv::Mat &)
?augAssignAnd@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAVMat@2@@Z;void cv::MatOp::augAssignAnd(class cv::MatExpr const &,class cv::Mat &)
?augAssignDivide@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAVMat@2@@Z;void cv::MatOp::augAssignDivide(class cv::MatExpr const &,class cv::Mat &)
?augAssignMultiply@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAVMat@2@@Z;void cv::MatOp::augAssignMultiply(class cv::MatExpr const &,class cv::Mat &)
?augAssignOr@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAVMat@2@@Z;void cv::MatOp::augAssignOr(class cv::MatExpr const &,class cv::Mat &)
?augAssignSubtract@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAVMat@2@@Z;void cv::MatOp::augAssignSubtract(class cv::MatExpr const &,class cv::Mat &)
?augAssignXor@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAVMat@2@@Z;void cv::MatOp::augAssignXor(class cv::MatExpr const &,class cv::Mat &)
?autoDetectWaveCorrectKind@detail@cv@@YA?AW4WaveCorrectKind@12@AEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;enum cv::detail::WaveCorrectKind cv::detail::autoDetectWaveCorrectKind(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
?auxiliaryKernels@Priv@GBackend@gapi@cv@@UEBA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::GBackend::Priv::auxiliaryKernels(void)
?available@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::available(void)
?backProject@PCA@cv@@QEBA?AVMat@2@AEBV_InputArray@2@@Z;class cv::Mat cv::PCA::backProject(class cv::_InputArray const &)
?backProject@PCA@cv@@QEBAXAEBV_InputArray@2@AEBV_OutputArray@2@@Z;void cv::PCA::backProject(class cv::_InputArray const &,class cv::_OutputArray const &)
?backSubst@SVD@cv@@QEBAXAEBV_InputArray@2@AEBV_OutputArray@2@@Z;void cv::SVD::backSubst(class cv::_InputArray const &,class cv::_OutputArray const &)
?backSubst@SVD@cv@@SAXAEBV_InputArray@2@000AEBV_OutputArray@2@@Z;void cv::SVD::backSubst(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?backend@GIsland@gimpl@cv@@QEBA?AVGBackend@gapi@3@XZ;class cv::gapi::GBackend cv::gimpl::GIsland::backend(void)
?backend@GPythonFunctor@python@gapi@cv@@UEBA?AVGBackend@34@XZ;class cv::gapi::GBackend cv::gapi::python::GPythonFunctor::backend(void)
?backend@PyParams@ie@gapi@cv@@QEBA?AVGBackend@34@XZ;class cv::gapi::GBackend cv::gapi::ie::PyParams::backend(void)
?backend@compound@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::compound::backend(void)
?backend@cpu@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::cpu::backend(void)
?backend@fluid@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::fluid::backend(void)
?backend@ie@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::ie::backend(void)
?backend@ocl@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::ocl::backend(void)
?backend@onnx@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::onnx::backend(void)
?backend@python@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::python::backend(void)
?backend@streaming@gapi@cv@@YA?AVGBackend@23@XZ;class cv::gapi::GBackend cv::gapi::streaming::backend(void)
?backends@GKernelPackage@gapi@cv@@QEBA?AV?$vector@VGBackend@gapi@cv@@V?$allocator@VGBackend@gapi@cv@@@std@@@std@@XZ;class std::vector<class cv::gapi::GBackend,class std::allocator<class cv::gapi::GBackend> > cv::gapi::GKernelPackage::backends(void)
?backends@GNetPackage@gapi@cv@@QEBA?AV?$vector@VGBackend@gapi@cv@@V?$allocator@VGBackend@gapi@cv@@@std@@@std@@XZ;class std::vector<class cv::gapi::GBackend,class std::allocator<class cv::gapi::GBackend> > cv::gapi::GNetPackage::backends(void)
?batchDistance@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@H1HH0H_N@Z;void cv::batchDistance(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,class cv::_OutputArray const &,int,int,class cv::_InputArray const &,int,bool)
?begin@Dict@dnn4_v20211004@dnn@cv@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDictValue@dnn4_v20211004@dnn@cv@@@std@@@std@@@std@@@std@@XZ;class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cv::dnn::dnn4_v20211004::DictValue> > > > cv::dnn::dnn4_v20211004::Dict::begin(void)
?begin@FileNode@cv@@QEBA?AVFileNodeIterator@2@XZ;class cv::FileNodeIterator cv::FileNode::begin(void)
?begin@SparseMat@cv@@QEAA?AVSparseMatIterator@2@XZ;class cv::SparseMatIterator cv::SparseMat::begin(void)
?begin@SparseMat@cv@@QEBA?AVSparseMatConstIterator@2@XZ;class cv::SparseMatConstIterator cv::SparseMat::begin(void)
?bilateralFilter@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HNNH@Z;void cv::bilateralFilter(class cv::_InputArray const &,class cv::_OutputArray const &,int,double,double,int)
?bilateralFilter@gapi@cv@@YA?AVGMat@2@AEBV32@HNNH@Z;class cv::GMat cv::gapi::bilateralFilter(class cv::GMat const &,int,double,double,int)
?bind@Arrays@ogl@cv@@QEBAXXZ;void cv::ogl::Arrays::bind(void)
?bind@Buffer@ogl@cv@@QEBAXW4Target@123@@Z;void cv::ogl::Buffer::bind(enum cv::ogl::Buffer::Target)
?bind@OpenCLExecutionContext@ocl@cv@@QEBAXXZ;void cv::ocl::OpenCLExecutionContext::bind(void)
?bind@Texture2D@ogl@cv@@QEBAXXZ;void cv::ogl::Texture2D::bind(void)
?bind@gapi@cv@@YA?AUGRunArg@2@AEAV?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@2@@Z;struct cv::GRunArg cv::gapi::bind(class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> &)
?bind@gapi@cv@@YA?AV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@std@@AEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@4@@Z;class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > cv::gapi::bind(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &)
?bindInArg@magazine@gimpl@cv@@YAXAEAU?$Class@VMat@cv@@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@52@VRMat@2@VView@72@VMediaFrame@2@VUMat@2@@123@AEBURcDesc@23@AEBUGRunArg@3@W4HandleRMat@123@@Z;void cv::gimpl::magazine::bindInArg(struct cv::gimpl::magazine::Class<class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::RMat,class cv::RMat::View,class cv::MediaFrame,class cv::UMat> &,struct cv::gimpl::RcDesc const &,struct cv::GRunArg const &,enum cv::gimpl::magazine::HandleRMat)
?bindOutArg@magazine@gimpl@cv@@YAXAEAU?$Class@VMat@cv@@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@52@VRMat@2@VView@72@VMediaFrame@2@VUMat@2@@123@AEBURcDesc@23@AEBV?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@3@W4HandleRMat@123@@Z;void cv::gimpl::magazine::bindOutArg(struct cv::gimpl::magazine::Class<class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::RMat,class cv::RMat::View,class cv::MediaFrame,class cv::UMat> &,struct cv::gimpl::RcDesc const &,class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> const &,enum cv::gimpl::magazine::HandleRMat)
?bindTo@Priv@Buffer@fluid@gapi@cv@@QEAAXAEBVMat@5@_N@Z;void cv::gapi::fluid::Buffer::Priv::bindTo(class cv::Mat const &,bool)
?bitwise_and@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@0@Z;void cv::bitwise_and(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?bitwise_and@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::bitwise_and(class cv::GMat const &,class cv::GMat const &)
?bitwise_and@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::bitwise_and(class cv::GMat const &,class cv::GScalar const &)
?bitwise_not@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0@Z;void cv::bitwise_not(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?bitwise_not@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::bitwise_not(class cv::GMat const &)
?bitwise_or@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@0@Z;void cv::bitwise_or(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?bitwise_or@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::bitwise_or(class cv::GMat const &,class cv::GMat const &)
?bitwise_or@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::bitwise_or(class cv::GMat const &,class cv::GScalar const &)
?bitwise_xor@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@0@Z;void cv::bitwise_xor(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?bitwise_xor@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::bitwise_xor(class cv::GMat const &,class cv::GMat const &)
?bitwise_xor@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::bitwise_xor(class cv::GMat const &,class cv::GScalar const &)
?blend@Blender@detail@cv@@UEAAXAEBV_InputOutputArray@3@0@Z;void cv::detail::Blender::blend(class cv::_InputOutputArray const &,class cv::_InputOutputArray const &)
?blend@FeatherBlender@detail@cv@@UEAAXAEBV_InputOutputArray@3@0@Z;void cv::detail::FeatherBlender::blend(class cv::_InputOutputArray const &,class cv::_InputOutputArray const &)
?blend@MultiBandBlender@detail@cv@@UEAAXAEBV_InputOutputArray@3@0@Z;void cv::detail::MultiBandBlender::blend(class cv::_InputOutputArray const &,class cv::_InputOutputArray const &)
?blendLinear@cv@@YAXAEBV_InputArray@1@000AEBV_OutputArray@1@@Z;void cv::blendLinear(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?blender@Stitcher@cv@@QEAA?AU?$Ptr@VBlender@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::Blender> cv::Stitcher::blender(void)
?blender@Stitcher@cv@@QEBA?BU?$Ptr@VBlender@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::Blender> const cv::Stitcher::blender(void)
?blobFromImage@dnn4_v20211004@dnn@cv@@YA?AVMat@3@AEBV_InputArray@3@NAEBV?$Size_@H@3@AEBV?$Scalar_@N@3@_N3H@Z;class cv::Mat cv::dnn::dnn4_v20211004::blobFromImage(class cv::_InputArray const &,double,class cv::Size_<int> const &,class cv::Scalar_<double> const &,bool,bool,int)
?blobFromImage@dnn4_v20211004@dnn@cv@@YAXAEBV_InputArray@3@AEBV_OutputArray@3@NAEBV?$Size_@H@3@AEBV?$Scalar_@N@3@_N4H@Z;void cv::dnn::dnn4_v20211004::blobFromImage(class cv::_InputArray const &,class cv::_OutputArray const &,double,class cv::Size_<int> const &,class cv::Scalar_<double> const &,bool,bool,int)
?blobFromImages@dnn4_v20211004@dnn@cv@@YA?AVMat@3@AEBV_InputArray@3@NV?$Size_@H@3@AEBV?$Scalar_@N@3@_N3H@Z;class cv::Mat cv::dnn::dnn4_v20211004::blobFromImages(class cv::_InputArray const &,double,class cv::Size_<int>,class cv::Scalar_<double> const &,bool,bool,int)
?blobFromImages@dnn4_v20211004@dnn@cv@@YAXAEBV_InputArray@3@AEBV_OutputArray@3@NV?$Size_@H@3@AEBV?$Scalar_@N@3@_N4H@Z;void cv::dnn::dnn4_v20211004::blobFromImages(class cv::_InputArray const &,class cv::_OutputArray const &,double,class cv::Size_<int>,class cv::Scalar_<double> const &,bool,bool,int)
?blobParams@IAdapter@MediaFrame@cv@@UEBA?AVany@util@3@XZ;class cv::util::any cv::MediaFrame::IAdapter::blobParams(void)
?blobParams@MediaFrame@cv@@QEBA?AVany@util@2@XZ;class cv::util::any cv::MediaFrame::blobParams(void)
?blur@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@V?$Size_@H@1@V?$Point_@H@1@H@Z;void cv::blur(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Size_<int>,class cv::Point_<int>,int)
?blur@gapi@cv@@YA?AVGMat@2@AEBV32@AEBV?$Size_@H@2@AEBV?$Point_@H@2@HAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::blur(class cv::GMat const &,class cv::Size_<int> const &,class cv::Point_<int> const &,int,class cv::Scalar_<double> const &)
?borderInterpolate@cv@@YAHHHH@Z;int cv::borderInterpolate(int,int,int)
?boundingRect2f@RotatedRect@cv@@QEBA?AV?$Rect_@M@2@XZ;class cv::Rect_<float> cv::RotatedRect::boundingRect2f(void)
?boundingRect@RotatedRect@cv@@QEBA?AV?$Rect_@H@2@XZ;class cv::Rect_<int> cv::RotatedRect::boundingRect(void)
?boundingRect@cv@@YA?AV?$Rect_@H@1@AEBV_InputArray@1@@Z;class cv::Rect_<int> cv::boundingRect(class cv::_InputArray const &)
?boundingRect@gapi@cv@@YA?AV?$GOpaque@V?$Rect_@H@cv@@@2@AEBV?$GArray@V?$Point_@H@cv@@@2@@Z;class cv::GOpaque<class cv::Rect_<int> > cv::gapi::boundingRect(class cv::GArray<class cv::Point_<int> > const &)
?boundingRect@gapi@cv@@YA?AV?$GOpaque@V?$Rect_@H@cv@@@2@AEBV?$GArray@V?$Point_@M@cv@@@2@@Z;class cv::GOpaque<class cv::Rect_<int> > cv::gapi::boundingRect(class cv::GArray<class cv::Point_<float> > const &)
?boundingRect@gapi@cv@@YA?AV?$GOpaque@V?$Rect_@H@cv@@@2@AEBVGMat@2@@Z;class cv::GOpaque<class cv::Rect_<int> > cv::gapi::boundingRect(class cv::GMat const &)
?boxFilter@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HV?$Size_@H@1@V?$Point_@H@1@_NH@Z;void cv::boxFilter(class cv::_InputArray const &,class cv::_OutputArray const &,int,class cv::Size_<int>,class cv::Point_<int>,bool,int)
?boxFilter@gapi@cv@@YA?AVGMat@2@AEBV32@HAEBV?$Size_@H@2@AEBV?$Point_@H@2@_NHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::boxFilter(class cv::GMat const &,int,class cv::Size_<int> const &,class cv::Point_<int> const &,bool,int,class cv::Scalar_<double> const &)
?boxPoints@cv@@YAXVRotatedRect@1@AEBV_OutputArray@1@@Z;void cv::boxPoints(class cv::RotatedRect,class cv::_OutputArray const &)
?bufId@Buffer@ogl@cv@@QEBAIXZ;unsigned int cv::ogl::Buffer::bufId(void)
?build@Index@flann@cv@@UEAAXAEBV_InputArray@3@AEBUIndexParams@23@W4flann_distance_t@cvflann@@@Z;void cv::flann::Index::build(class cv::_InputArray const &,struct cv::flann::IndexParams const &,enum cvflann::flann_distance_t)
?build@KDTree@ml@cv@@QEAAXAEBV_InputArray@3@0_N@Z;void cv::ml::KDTree::build(class cv::_InputArray const &,class cv::_InputArray const &,bool)
?build@KDTree@ml@cv@@QEAAXAEBV_InputArray@3@_N@Z;void cv::ml::KDTree::build(class cv::_InputArray const &,bool)
?buildMap@IntelligentScissorsMB@segmentation@cv@@QEAAXAEBV?$Point_@H@3@@Z;void cv::segmentation::IntelligentScissorsMB::buildMap(class cv::Point_<int> const &)
?buildMaps@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@AffineWarper@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::AffineWarper::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@CylindricalWarper@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::CylindricalWarper::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@CylindricalWarperGpu@detail@cv@@QEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEAVGpuMat@cuda@3@2@Z;class cv::Rect_<int> cv::detail::CylindricalWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::cuda::GpuMat &,class cv::cuda::GpuMat &)
?buildMaps@CylindricalWarperGpu@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::CylindricalWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@PlaneWarper@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@11AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::PlaneWarper::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@PlaneWarper@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::PlaneWarper::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@PlaneWarperGpu@detail@cv@@QEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@11AEAVGpuMat@cuda@3@2@Z;class cv::Rect_<int> cv::detail::PlaneWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::cuda::GpuMat &,class cv::cuda::GpuMat &)
?buildMaps@PlaneWarperGpu@detail@cv@@QEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEAVGpuMat@cuda@3@2@Z;class cv::Rect_<int> cv::detail::PlaneWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::cuda::GpuMat &,class cv::cuda::GpuMat &)
?buildMaps@PlaneWarperGpu@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@11AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::PlaneWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@PlaneWarperGpu@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::PlaneWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@PyRotationWarper@cv@@QEAA?AV?$Rect_@H@2@V?$Size_@H@2@AEBV_InputArray@2@1AEBV_OutputArray@2@2@Z;class cv::Rect_<int> cv::PyRotationWarper::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@SphericalWarper@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::SphericalWarper::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildMaps@SphericalWarperGpu@detail@cv@@QEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEAVGpuMat@cuda@3@2@Z;class cv::Rect_<int> cv::detail::SphericalWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::cuda::GpuMat &,class cv::cuda::GpuMat &)
?buildMaps@SphericalWarperGpu@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1AEBV_OutputArray@3@2@Z;class cv::Rect_<int> cv::detail::SphericalWarperGpu::buildMaps(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?buildOpticalFlowPyramid@cv@@YAHAEBV_InputArray@1@AEBV_OutputArray@1@V?$Size_@H@1@H_NHH3@Z;int cv::buildOpticalFlowPyramid(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Size_<int>,int,bool,int,int,bool)
?buildOpticalFlowPyramid@gapi@cv@@YA?AV?$tuple@V?$GArray@VGMat@cv@@@cv@@VGScalar@2@@std@@AEBVGMat@2@AEBV?$Size_@H@2@AEBVGScalar@2@_NHH3@Z;class std::tuple<class cv::GArray<class cv::GMat>,class cv::GScalar> cv::gapi::buildOpticalFlowPyramid(class cv::GMat const &,class cv::Size_<int> const &,class cv::GScalar const &,bool,int,int,bool)
?buildOptionsAddMatrixDescription@ocl@cv@@YAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@AEBV_InputArray@2@@Z;void cv::ocl::buildOptionsAddMatrixDescription(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &)
?buildPyramid@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HH@Z;void cv::buildPyramid(class cv::_InputArray const &,class cv::_OutputArray const &,int,int)
?buildSimilarityMask@GainCompensator@detail@cv@@AEAA?AVUMat@3@AEBV_InputArray@3@0@Z;class cv::UMat cv::detail::GainCompensator::buildSimilarityMask(class cv::_InputArray const &,class cv::_InputArray const &)
?builtWith@TargetArchs@cuda@cv@@SA_NW4FeatureSet@23@@Z;bool cv::cuda::TargetArchs::builtWith(enum cv::cuda::FeatureSet)
?bundleAdjuster@Stitcher@cv@@QEAA?AU?$Ptr@VBundleAdjusterBase@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::BundleAdjusterBase> cv::Stitcher::bundleAdjuster(void)
?bundleAdjuster@Stitcher@cv@@QEBA?BU?$Ptr@VBundleAdjusterBase@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::BundleAdjusterBase> const cv::Stitcher::bundleAdjuster(void)
?cache@Priv@Buffer@fluid@gapi@cv@@QEBAAEBUCache@2345@XZ;struct cv::gapi::fluid::Buffer::Cache const & cv::gapi::fluid::Buffer::Priv::cache(void)
?cache@Priv@View@fluid@gapi@cv@@QEBAAEBUCache@2345@XZ;struct cv::gapi::fluid::View::Cache const & cv::gapi::fluid::View::Priv::cache(void)
?calcBackProject@cv@@YAXAEBV_InputArray@1@AEBV?$vector@HV?$allocator@H@std@@@std@@0AEBV_OutputArray@1@AEBV?$vector@MV?$allocator@M@std@@@4@N@Z;void cv::calcBackProject(class cv::_InputArray const &,class std::vector<int,class std::allocator<int> > const &,class cv::_InputArray const &,class cv::_OutputArray const &,class std::vector<float,class std::allocator<float> > const &,double)
?calcBackProject@cv@@YAXPEBVMat@1@HPEBHAEBVSparseMat@1@AEBV_OutputArray@1@PEAPEBMN_N@Z;void cv::calcBackProject(class cv::Mat const *,int,int const *,class cv::SparseMat const &,class cv::_OutputArray const &,float const * *,double,bool)
?calcBackProject@cv@@YAXPEBVMat@1@HPEBHAEBV_InputArray@1@AEBV_OutputArray@1@PEAPEBMN_N@Z;void cv::calcBackProject(class cv::Mat const *,int,int const *,class cv::_InputArray const &,class cv::_OutputArray const &,float const * *,double,bool)
?calcCovarMatrix@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@AEBV_InputOutputArray@1@HH@Z;void cv::calcCovarMatrix(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputOutputArray const &,int,int)
?calcCovarMatrix@cv@@YAXPEBVMat@1@HAEAV21@1HH@Z;void cv::calcCovarMatrix(class cv::Mat const *,int,class cv::Mat &,class cv::Mat &,int,int)
?calcError@BundleAdjusterAffine@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterAffine::calcError(class cv::Mat &)
?calcError@BundleAdjusterAffinePartial@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterAffinePartial::calcError(class cv::Mat &)
?calcError@BundleAdjusterRay@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterRay::calcError(class cv::Mat &)
?calcError@BundleAdjusterReproj@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterReproj::calcError(class cv::Mat &)
?calcError@NoBundleAdjuster@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::NoBundleAdjuster::calcError(class cv::Mat &)
?calcError@StatModel@ml@cv@@UEBAMAEBU?$Ptr@VTrainData@ml@cv@@@3@_NAEBV_OutputArray@3@@Z;float cv::ml::StatModel::calcError(struct cv::Ptr<class cv::ml::TrainData> const &,bool,class cv::_OutputArray const &)
?calcHist@cv@@YAXAEBV_InputArray@1@AEBV?$vector@HV?$allocator@H@std@@@std@@0AEBV_OutputArray@1@1AEBV?$vector@MV?$allocator@M@std@@@4@_N@Z;void cv::calcHist(class cv::_InputArray const &,class std::vector<int,class std::allocator<int> > const &,class cv::_InputArray const &,class cv::_OutputArray const &,class std::vector<int,class std::allocator<int> > const &,class std::vector<float,class std::allocator<float> > const &,bool)
?calcHist@cv@@YAXPEBVMat@1@HPEBHAEBV_InputArray@1@AEAVSparseMat@1@H1PEAPEBM_N5@Z;void cv::calcHist(class cv::Mat const *,int,int const *,class cv::_InputArray const &,class cv::SparseMat &,int,int const *,float const * *,bool,bool)
?calcHist@cv@@YAXPEBVMat@1@HPEBHAEBV_InputArray@1@AEBV_OutputArray@1@H1PEAPEBM_N5@Z;void cv::calcHist(class cv::Mat const *,int,int const *,class cv::_InputArray const &,class cv::_OutputArray const &,int,int const *,float const * *,bool,bool)
?calcJacobian@BundleAdjusterAffine@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterAffine::calcJacobian(class cv::Mat &)
?calcJacobian@BundleAdjusterAffinePartial@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterAffinePartial::calcJacobian(class cv::Mat &)
?calcJacobian@BundleAdjusterRay@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterRay::calcJacobian(class cv::Mat &)
?calcJacobian@BundleAdjusterReproj@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::BundleAdjusterReproj::calcJacobian(class cv::Mat &)
?calcJacobian@NoBundleAdjuster@detail@cv@@EEAAXAEAVMat@3@@Z;void cv::detail::NoBundleAdjuster::calcJacobian(class cv::Mat &)
?calcOpticalFlowFarneback@cv@@YAXAEBV_InputArray@1@0AEBV_InputOutputArray@1@NHHHHNH@Z;void cv::calcOpticalFlowFarneback(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,double,int,int,int,int,double,int)
?calcOpticalFlowPyrLK@cv@@YAXAEBV_InputArray@1@00AEBV_InputOutputArray@1@AEBV_OutputArray@1@2V?$Size_@H@1@HVTermCriteria@1@HN@Z;void cv::calcOpticalFlowPyrLK(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::Size_<int>,int,class cv::TermCriteria,int,double)
?calcOpticalFlowPyrLK@gapi@cv@@YA?AV?$tuple@V?$GArray@V?$Point_@M@cv@@@cv@@V?$GArray@E@2@V?$GArray@M@2@@std@@AEBV?$GArray@VGMat@cv@@@2@0AEBV?$GArray@V?$Point_@M@cv@@@2@1AEBV?$Size_@H@2@AEBVGScalar@2@AEBVTermCriteria@2@HN@Z;class std::tuple<class cv::GArray<class cv::Point_<float> >,class cv::GArray<unsigned char>,class cv::GArray<float> > cv::gapi::calcOpticalFlowPyrLK(class cv::GArray<class cv::GMat> const &,class cv::GArray<class cv::GMat> const &,class cv::GArray<class cv::Point_<float> > const &,class cv::GArray<class cv::Point_<float> > const &,class cv::Size_<int> const &,class cv::GScalar const &,class cv::TermCriteria const &,int,double)
?calcOpticalFlowPyrLK@gapi@cv@@YA?AV?$tuple@V?$GArray@V?$Point_@M@cv@@@cv@@V?$GArray@E@2@V?$GArray@M@2@@std@@AEBVGMat@2@0AEBV?$GArray@V?$Point_@M@cv@@@2@1AEBV?$Size_@H@2@AEBVGScalar@2@AEBVTermCriteria@2@HN@Z;class std::tuple<class cv::GArray<class cv::Point_<float> >,class cv::GArray<unsigned char>,class cv::GArray<float> > cv::gapi::calcOpticalFlowPyrLK(class cv::GMat const &,class cv::GMat const &,class cv::GArray<class cv::Point_<float> > const &,class cv::GArray<class cv::Point_<float> > const &,class cv::Size_<int> const &,class cv::GScalar const &,class cv::TermCriteria const &,int,double)
?calcTrackedObjectPositionToShow@DetectionBasedTracker@cv@@IEBA?AV?$Rect_@H@2@H@Z;class cv::Rect_<int> cv::DetectionBasedTracker::calcTrackedObjectPositionToShow(int)
?calcTrackedObjectPositionToShow@DetectionBasedTracker@cv@@IEBA?AV?$Rect_@H@2@HAEAW4ObjectStatus@12@@Z;class cv::Rect_<int> cv::DetectionBasedTracker::calcTrackedObjectPositionToShow(int,enum cv::DetectionBasedTracker::ObjectStatus &)
?calcVoronoi@Subdiv2D@cv@@IEAAXXZ;void cv::Subdiv2D::calcVoronoi(void)
?calibrate@fisheye@cv@@YANAEBV_InputArray@2@0AEBV?$Size_@H@2@AEBV_InputOutputArray@2@2AEBV_OutputArray@2@3HVTermCriteria@2@@Z;double cv::fisheye::calibrate(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int> const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?calibrateCamera@cv@@YANAEBV_InputArray@1@0V?$Size_@H@1@AEBV_InputOutputArray@1@2AEBV_OutputArray@1@3333HVTermCriteria@1@@Z;double cv::calibrateCamera(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?calibrateCamera@cv@@YANAEBV_InputArray@1@0V?$Size_@H@1@AEBV_InputOutputArray@1@2AEBV_OutputArray@1@3HVTermCriteria@1@@Z;double cv::calibrateCamera(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?calibrateCameraRO@cv@@YANAEBV_InputArray@1@0V?$Size_@H@1@HAEBV_InputOutputArray@1@2AEBV_OutputArray@1@333333HVTermCriteria@1@@Z;double cv::calibrateCameraRO(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,int,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?calibrateCameraRO@cv@@YANAEBV_InputArray@1@0V?$Size_@H@1@HAEBV_InputOutputArray@1@2AEBV_OutputArray@1@33HVTermCriteria@1@@Z;double cv::calibrateCameraRO(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,int,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?calibrateHandEye@cv@@YAXAEBV_InputArray@1@000AEBV_OutputArray@1@1W4HandEyeCalibrationMethod@1@@Z;void cv::calibrateHandEye(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,enum cv::HandEyeCalibrationMethod)
?calibrateRobotWorldHandEye@cv@@YAXAEBV_InputArray@1@000AEBV_OutputArray@1@111W4RobotWorldHandEyeCalibrationMethod@1@@Z;void cv::calibrateRobotWorldHandEye(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,enum cv::RobotWorldHandEyeCalibrationMethod)
?calibrateRotatingCamera@detail@cv@@YA_NAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEAVMat@2@@Z;bool cv::detail::calibrateRotatingCamera(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class cv::Mat &)
?calibrationMatrixValues@cv@@YAXAEBV_InputArray@1@V?$Size_@H@1@NNAEAN22AEAV?$Point_@N@1@2@Z;void cv::calibrationMatrixValues(class cv::_InputArray const &,class cv::Size_<int>,double,double,double &,double &,double &,class cv::Point_<double> &,double &)
?cameras@Stitcher@cv@@QEBA?AV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@XZ;class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > cv::Stitcher::cameras(void)
?canCreateAlias@Image2D@ocl@cv@@SA_NAEBVUMat@3@@Z;bool cv::ocl::Image2D::canCreateAlias(class cv::UMat const &)
?canDescribe@GMatDesc@cv@@QEBA_NAEBVMat@2@@Z;bool cv::GMatDesc::canDescribe(class cv::Mat const &)
?canDescribe@GMatDesc@cv@@QEBA_NAEBVRMat@2@@Z;bool cv::GMatDesc::canDescribe(class cv::RMat const &)
?canMapHostMemory@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::canMapHostMemory(void)
?canReshape@GCompiled@cv@@QEBA_NXZ;bool cv::GCompiled::canReshape(void)
?canReshape@Priv@GCompiled@cv@@QEBA_NXZ;bool cv::GCompiled::Priv::canReshape(void)
?can_describe@cv@@YA_NAEBV?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@1@AEBUGRunArg@1@@Z;bool cv::can_describe(class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> const &,struct cv::GRunArg const &)
?can_describe@cv@@YA_NAEBV?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@1@AEBV?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@31@@Z;bool cv::can_describe(class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> const &,class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> const &)
?can_describe@cv@@YA_NAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@3@@Z;bool cv::can_describe(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > const &)
?cancel@GAsyncContext@wip@gapi@cv@@QEAA_NXZ;bool cv::gapi::wip::GAsyncContext::cancel(void)
?canonical@fs@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV45@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::fs::canonical(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?cartToPolar@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@1_N@Z;void cv::cartToPolar(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,bool)
?cartToPolar@gapi@cv@@YA?AV?$tuple@VGMat@cv@@V12@@std@@AEBVGMat@2@0_N@Z;class std::tuple<class cv::GMat,class cv::GMat> cv::gapi::cartToPolar(class cv::GMat const &,class cv::GMat const &,bool)
?cbrt@cv@@YA?AUsoftfloat@1@AEBU21@@Z;struct cv::softfloat cv::cbrt(struct cv::softfloat const &)
?cctrs@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@CA?AV?$array@P6AXQEAT?$_Align_type@N$0GA@@std@@QEBT12@@Z$07@std@@XZ;class std::array<void (*)(union std::_Align_type<double,96> * const,union std::_Align_type<double,96> const * const),8> cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::cctrs(void)
?cfgNumRequests@PyParams@ie@gapi@cv@@QEAAAEAV1234@_K@Z;class cv::gapi::ie::PyParams & cv::gapi::ie::PyParams::cfgNumRequests(unsigned __int64)
?chan@View@RMat@cv@@QEBAHXZ;int cv::RMat::View::chan(void)
?channels@Buffer@ogl@cv@@QEBAHXZ;int cv::ogl::Buffer::channels(void)
?channels@GpuMat@cuda@cv@@QEBAHXZ;int cv::cuda::GpuMat::channels(void)
?channels@HostMem@cuda@cv@@QEBAHXZ;int cv::cuda::HostMem::channels(void)
?channels@Mat@cv@@QEBAHXZ;int cv::Mat::channels(void)
?channels@SparseMat@cv@@QEBAHXZ;int cv::SparseMat::channels(void)
?channels@UMat@cv@@QEBAHXZ;int cv::UMat::channels(void)
?channels@_InputArray@cv@@QEBAHH@Z;int cv::_InputArray::channels(int)
?check@ByteMemoryInStream@s11n@gapi@cv@@AEAAX_K@Z;void cv::gapi::s11n::ByteMemoryInStream::check(unsigned __int64)
?check@CommandLineParser@cv@@QEBA_NXZ;bool cv::CommandLineParser::check(void)
?checkArgs@Priv@GCompiled@cv@@AEBAXAEBUGRuntimeArgs@gimpl@3@@Z;void cv::GCompiled::Priv::checkArgs(struct cv::gimpl::GRuntimeArgs const &)
?checkChessboard@cv@@YA_NAEBV_InputArray@1@V?$Size_@H@1@@Z;bool cv::checkChessboard(class cv::_InputArray const &,class cv::Size_<int>)
?checkDetectorSize@HOGDescriptor@cv@@QEBA_NXZ;bool cv::HOGDescriptor::checkDetectorSize(void)
?checkHardwareSupport@cv@@YA_NH@Z;bool cv::checkHardwareSupport(int)
?checkMasks@DescriptorMatcher@cv@@IEBAXAEBV_InputArray@2@H@Z;void cv::DescriptorMatcher::checkMasks(class cv::_InputArray const &,int)
?checkOptimalVectorWidth@ocl@cv@@YAHPEBHAEBV_InputArray@2@11111111W4OclVectorStrategy@12@@Z;int cv::ocl::checkOptimalVectorWidth(int const *,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,enum cv::ocl::OclVectorStrategy)
?checkRange@cv@@YA_NAEBV_InputArray@1@_NPEAV?$Point_@H@1@NN@Z;bool cv::checkRange(class cv::_InputArray const &,bool,class cv::Point_<int> *,double,double)
?checkSubdiv@Subdiv2D@cv@@IEBAXXZ;void cv::Subdiv2D::checkSubdiv(void)
?checkSubset@Callback@PointSetRegistrator@cv@@UEBA_NAEBV_InputArray@3@0H@Z;bool cv::PointSetRegistrator::Callback::checkSubset(class cv::_InputArray const &,class cv::_InputArray const &,int)
?checkTrainData@EMImpl@ml@cv@@SAXHAEBVMat@3@HHPEBV43@1PEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@1@Z;void cv::ml::EMImpl::checkTrainData(int,class cv::Mat const &,int,int,class cv::Mat const *,class cv::Mat const *,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const *,class cv::Mat const *)
?checkVector@Mat@cv@@QEBAHHH_N@Z;int cv::Mat::checkVector(int,int,bool)
?checkVector@UMat@cv@@QEBAHHH_N@Z;int cv::UMat::checkVector(int,int,bool)
?check_failed_MatChannels@detail@cv@@YAXHAEBUCheckContext@12@@Z;void cv::detail::check_failed_MatChannels(int,struct cv::detail::CheckContext const &)
?check_failed_MatChannels@detail@cv@@YAXHHAEBUCheckContext@12@@Z;void cv::detail::check_failed_MatChannels(int,int,struct cv::detail::CheckContext const &)
?check_failed_MatDepth@detail@cv@@YAXHAEBUCheckContext@12@@Z;void cv::detail::check_failed_MatDepth(int,struct cv::detail::CheckContext const &)
?check_failed_MatDepth@detail@cv@@YAXHHAEBUCheckContext@12@@Z;void cv::detail::check_failed_MatDepth(int,int,struct cv::detail::CheckContext const &)
?check_failed_MatType@detail@cv@@YAXHAEBUCheckContext@12@@Z;void cv::detail::check_failed_MatType(int,struct cv::detail::CheckContext const &)
?check_failed_MatType@detail@cv@@YAXHHAEBUCheckContext@12@@Z;void cv::detail::check_failed_MatType(int,int,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXHAEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(int,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXHHAEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(int,int,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXMAEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(float,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXMMAEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(float,float,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXNAEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(double,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXNNAEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(double,double,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXV?$Size_@H@2@0AEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(class cv::Size_<int>,class cv::Size_<int>,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAXV?$Size_@H@2@AEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(class cv::Size_<int>,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAX_K0AEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(unsigned __int64,unsigned __int64,struct cv::detail::CheckContext const &)
?check_failed_auto@detail@cv@@YAX_KAEBUCheckContext@12@@Z;void cv::detail::check_failed_auto(unsigned __int64,struct cv::detail::CheckContext const &)
?circle@cv@@YAXAEBV_InputOutputArray@1@V?$Point_@H@1@HAEBV?$Scalar_@N@1@HHH@Z;void cv::circle(class cv::_InputOutputArray const &,class cv::Point_<int>,int,class cv::Scalar_<double> const &,int,int,int)
?clBuildProgram_pfn@@3P6AHPEAU_cl_program@@IPEBQEAU_cl_device_id@@PEBDP6AX0PEAX@Z3@ZEA;int (* clBuildProgram_pfn)(struct _cl_program *,unsigned int,struct _cl_device_id * const *,char const *,void (*)(struct _cl_program *,void *),void *)
?clCompileProgram_pfn@@3P6AHPEAU_cl_program@@IPEBQEAU_cl_device_id@@PEBDIPEBQEAU1@PEAPEBDP6AX0PEAX@Z5@ZEA;int (* clCompileProgram_pfn)(struct _cl_program *,unsigned int,struct _cl_device_id * const *,char const *,unsigned int,struct _cl_program * const *,char const * *,void (*)(struct _cl_program *,void *),void *)
?clCreateBuffer_pfn@@3P6APEAU_cl_mem@@PEAU_cl_context@@_K1PEAXPEAH@ZEA;struct _cl_mem * (* clCreateBuffer_pfn)(struct _cl_context *,unsigned __int64,unsigned __int64,void *,int *)
?clCreateCommandQueue_pfn@@3P6APEAU_cl_command_queue@@PEAU_cl_context@@PEAU_cl_device_id@@_KPEAH@ZEA;struct _cl_command_queue * (* clCreateCommandQueue_pfn)(struct _cl_context *,struct _cl_device_id *,unsigned __int64,int *)
?clCreateContextFromType_pfn@@3P6APEAU_cl_context@@PEB_J_KP6AXPEBDPEBX1PEAX@Z4PEAH@ZEA;struct _cl_context * (* clCreateContextFromType_pfn)(__int64 const *,unsigned __int64,void (*)(char const *,void const *,unsigned __int64,void *),void *,int *)
?clCreateContext_pfn@@3P6APEAU_cl_context@@PEB_JIPEBQEAU_cl_device_id@@P6AXPEBDPEBX_KPEAX@Z5PEAH@ZEA;struct _cl_context * (* clCreateContext_pfn)(__int64 const *,unsigned int,struct _cl_device_id * const *,void (*)(char const *,void const *,unsigned __int64,void *),void *,int *)
?clCreateImage2D_pfn@@3P6APEAU_cl_mem@@PEAU_cl_context@@_KPEBU_cl_image_format@@111PEAXPEAH@ZEA;struct _cl_mem * (* clCreateImage2D_pfn)(struct _cl_context *,unsigned __int64,struct _cl_image_format const *,unsigned __int64,unsigned __int64,unsigned __int64,void *,int *)
?clCreateImage3D_pfn@@3P6APEAU_cl_mem@@PEAU_cl_context@@_KPEBU_cl_image_format@@11111PEAXPEAH@ZEA;struct _cl_mem * (* clCreateImage3D_pfn)(struct _cl_context *,unsigned __int64,struct _cl_image_format const *,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,void *,int *)
?clCreateImage_pfn@@3P6APEAU_cl_mem@@PEAU_cl_context@@_KPEBU_cl_image_format@@PEBU_cl_image_desc@@PEAXPEAH@ZEA;struct _cl_mem * (* clCreateImage_pfn)(struct _cl_context *,unsigned __int64,struct _cl_image_format const *,struct _cl_image_desc const *,void *,int *)
?clCreateKernel_pfn@@3P6APEAU_cl_kernel@@PEAU_cl_program@@PEBDPEAH@ZEA;struct _cl_kernel * (* clCreateKernel_pfn)(struct _cl_program *,char const *,int *)
?clCreateKernelsInProgram_pfn@@3P6AHPEAU_cl_program@@IPEAPEAU_cl_kernel@@PEAI@ZEA;int (* clCreateKernelsInProgram_pfn)(struct _cl_program *,unsigned int,struct _cl_kernel * *,unsigned int *)
?clCreateProgramWithBinary_pfn@@3P6APEAU_cl_program@@PEAU_cl_context@@IPEBQEAU_cl_device_id@@PEB_KPEAPEBEPEAH4@ZEA;struct _cl_program * (* clCreateProgramWithBinary_pfn)(struct _cl_context *,unsigned int,struct _cl_device_id * const *,unsigned __int64 const *,unsigned char const * *,int *,int *)
?clCreateProgramWithBuiltInKernels_pfn@@3P6APEAU_cl_program@@PEAU_cl_context@@IPEBQEAU_cl_device_id@@PEBDPEAH@ZEA;struct _cl_program * (* clCreateProgramWithBuiltInKernels_pfn)(struct _cl_context *,unsigned int,struct _cl_device_id * const *,char const *,int *)
?clCreateProgramWithSource_pfn@@3P6APEAU_cl_program@@PEAU_cl_context@@IPEAPEBDPEB_KPEAH@ZEA;struct _cl_program * (* clCreateProgramWithSource_pfn)(struct _cl_context *,unsigned int,char const * *,unsigned __int64 const *,int *)
?clCreateSampler_pfn@@3P6APEAU_cl_sampler@@PEAU_cl_context@@IIIPEAH@ZEA;struct _cl_sampler * (* clCreateSampler_pfn)(struct _cl_context *,unsigned int,unsigned int,unsigned int,int *)
?clCreateSubBuffer_pfn@@3P6APEAU_cl_mem@@PEAU1@_KIPEBXPEAH@ZEA;struct _cl_mem * (* clCreateSubBuffer_pfn)(struct _cl_mem *,unsigned __int64,unsigned int,void const *,int *)
?clCreateSubDevices_pfn@@3P6AHPEAU_cl_device_id@@PEB_JIPEAPEAU1@PEAI@ZEA;int (* clCreateSubDevices_pfn)(struct _cl_device_id *,__int64 const *,unsigned int,struct _cl_device_id * *,unsigned int *)
?clCreateUserEvent_pfn@@3P6APEAU_cl_event@@PEAU_cl_context@@PEAH@ZEA;struct _cl_event * (* clCreateUserEvent_pfn)(struct _cl_context *,int *)
?clEnqueueBarrierWithWaitList_pfn@@3P6AHPEAU_cl_command_queue@@IPEBQEAU_cl_event@@PEAPEAU2@@ZEA;int (* clEnqueueBarrierWithWaitList_pfn)(struct _cl_command_queue *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueBarrier_pfn@@3P6AHPEAU_cl_command_queue@@@ZEA;int (* clEnqueueBarrier_pfn)(struct _cl_command_queue *)
?clEnqueueCopyBufferRect_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@1PEB_K22_K333IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueCopyBufferRect_pfn)(struct _cl_command_queue *,struct _cl_mem *,struct _cl_mem *,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueCopyBufferToImage_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@1_KPEB_K3IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueCopyBufferToImage_pfn)(struct _cl_command_queue *,struct _cl_mem *,struct _cl_mem *,unsigned __int64,unsigned __int64 const *,unsigned __int64 const *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueCopyBuffer_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@1_K22IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueCopyBuffer_pfn)(struct _cl_command_queue *,struct _cl_mem *,struct _cl_mem *,unsigned __int64,unsigned __int64,unsigned __int64,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueCopyImageToBuffer_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@1PEB_K2_KIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueCopyImageToBuffer_pfn)(struct _cl_command_queue *,struct _cl_mem *,struct _cl_mem *,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueCopyImage_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@1PEB_K22IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueCopyImage_pfn)(struct _cl_command_queue *,struct _cl_mem *,struct _cl_mem *,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64 const *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueFillBuffer_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@PEBX_K33IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueFillBuffer_pfn)(struct _cl_command_queue *,struct _cl_mem *,void const *,unsigned __int64,unsigned __int64,unsigned __int64,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueFillImage_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@PEBXPEB_K3IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueFillImage_pfn)(struct _cl_command_queue *,struct _cl_mem *,void const *,unsigned __int64 const *,unsigned __int64 const *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueMapBuffer_pfn@@3P6APEAXPEAU_cl_command_queue@@PEAU_cl_mem@@I_K22IPEBQEAU_cl_event@@PEAPEAU3@PEAH@ZEA;void * (* clEnqueueMapBuffer_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64,unsigned __int64,unsigned __int64,unsigned int,struct _cl_event * const *,struct _cl_event * *,int *)
?clEnqueueMapImage_pfn@@3P6APEAXPEAU_cl_command_queue@@PEAU_cl_mem@@I_KPEB_K3PEA_K4IPEBQEAU_cl_event@@PEAPEAU3@PEAH@ZEA;void * (* clEnqueueMapImage_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64 *,unsigned __int64 *,unsigned int,struct _cl_event * const *,struct _cl_event * *,int *)
?clEnqueueMarkerWithWaitList_pfn@@3P6AHPEAU_cl_command_queue@@IPEBQEAU_cl_event@@PEAPEAU2@@ZEA;int (* clEnqueueMarkerWithWaitList_pfn)(struct _cl_command_queue *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueMarker_pfn@@3P6AHPEAU_cl_command_queue@@PEAPEAU_cl_event@@@ZEA;int (* clEnqueueMarker_pfn)(struct _cl_command_queue *,struct _cl_event * *)
?clEnqueueMigrateMemObjects_pfn@@3P6AHPEAU_cl_command_queue@@IPEBQEAU_cl_mem@@_KIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueMigrateMemObjects_pfn)(struct _cl_command_queue *,unsigned int,struct _cl_mem * const *,unsigned __int64,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueNDRangeKernel_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_kernel@@IPEB_K22IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueNDRangeKernel_pfn)(struct _cl_command_queue *,struct _cl_kernel *,unsigned int,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64 const *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueNativeKernel_pfn@@3P6AHPEAU_cl_command_queue@@P6AXPEAX@Z1_KIPEBQEAU_cl_mem@@PEAPEBXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueNativeKernel_pfn)(struct _cl_command_queue *,void (*)(void *),void *,unsigned __int64,unsigned int,struct _cl_mem * const *,void const * *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueReadBufferRect_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@IPEB_K22_K333PEAXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueReadBufferRect_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,void *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueReadBuffer_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@I_K2PEAXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueReadBuffer_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64,unsigned __int64,void *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueReadImage_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@IPEB_K2_K3PEAXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueReadImage_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64,unsigned __int64,void *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueTask_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_kernel@@IPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueTask_pfn)(struct _cl_command_queue *,struct _cl_kernel *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueUnmapMemObject_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@PEAXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueUnmapMemObject_pfn)(struct _cl_command_queue *,struct _cl_mem *,void *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueWaitForEvents_pfn@@3P6AHPEAU_cl_command_queue@@IPEBQEAU_cl_event@@@ZEA;int (* clEnqueueWaitForEvents_pfn)(struct _cl_command_queue *,unsigned int,struct _cl_event * const *)
?clEnqueueWriteBufferRect_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@IPEB_K22_K333PEBXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueWriteBufferRect_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,void const *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueWriteBuffer_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@I_K2PEBXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueWriteBuffer_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64,unsigned __int64,void const *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clEnqueueWriteImage_pfn@@3P6AHPEAU_cl_command_queue@@PEAU_cl_mem@@IPEB_K2_K3PEBXIPEBQEAU_cl_event@@PEAPEAU3@@ZEA;int (* clEnqueueWriteImage_pfn)(struct _cl_command_queue *,struct _cl_mem *,unsigned int,unsigned __int64 const *,unsigned __int64 const *,unsigned __int64,unsigned __int64,void const *,unsigned int,struct _cl_event * const *,struct _cl_event * *)
?clFinish_pfn@@3P6AHPEAU_cl_command_queue@@@ZEA;int (* clFinish_pfn)(struct _cl_command_queue *)
?clFlush_pfn@@3P6AHPEAU_cl_command_queue@@@ZEA;int (* clFlush_pfn)(struct _cl_command_queue *)
?clGetCommandQueueInfo_pfn@@3P6AHPEAU_cl_command_queue@@I_KPEAXPEA_K@ZEA;int (* clGetCommandQueueInfo_pfn)(struct _cl_command_queue *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetContextInfo_pfn@@3P6AHPEAU_cl_context@@I_KPEAXPEA_K@ZEA;int (* clGetContextInfo_pfn)(struct _cl_context *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetDeviceIDs_pfn@@3P6AHPEAU_cl_platform_id@@_KIPEAPEAU_cl_device_id@@PEAI@ZEA;int (* clGetDeviceIDs_pfn)(struct _cl_platform_id *,unsigned __int64,unsigned int,struct _cl_device_id * *,unsigned int *)
?clGetDeviceInfo_pfn@@3P6AHPEAU_cl_device_id@@I_KPEAXPEA_K@ZEA;int (* clGetDeviceInfo_pfn)(struct _cl_device_id *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetEventInfo_pfn@@3P6AHPEAU_cl_event@@I_KPEAXPEA_K@ZEA;int (* clGetEventInfo_pfn)(struct _cl_event *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetEventProfilingInfo_pfn@@3P6AHPEAU_cl_event@@I_KPEAXPEA_K@ZEA;int (* clGetEventProfilingInfo_pfn)(struct _cl_event *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetExtensionFunctionAddressForPlatform_pfn@@3P6APEAXPEAU_cl_platform_id@@PEBD@ZEA;void * (* clGetExtensionFunctionAddressForPlatform_pfn)(struct _cl_platform_id *,char const *)
?clGetExtensionFunctionAddress_pfn@@3P6APEAXPEBD@ZEA;void * (* clGetExtensionFunctionAddress_pfn)(char const *)
?clGetImageInfo_pfn@@3P6AHPEAU_cl_mem@@I_KPEAXPEA_K@ZEA;int (* clGetImageInfo_pfn)(struct _cl_mem *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetKernelArgInfo_pfn@@3P6AHPEAU_cl_kernel@@II_KPEAXPEA_K@ZEA;int (* clGetKernelArgInfo_pfn)(struct _cl_kernel *,unsigned int,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetKernelInfo_pfn@@3P6AHPEAU_cl_kernel@@I_KPEAXPEA_K@ZEA;int (* clGetKernelInfo_pfn)(struct _cl_kernel *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetKernelWorkGroupInfo_pfn@@3P6AHPEAU_cl_kernel@@PEAU_cl_device_id@@I_KPEAXPEA_K@ZEA;int (* clGetKernelWorkGroupInfo_pfn)(struct _cl_kernel *,struct _cl_device_id *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetMemObjectInfo_pfn@@3P6AHPEAU_cl_mem@@I_KPEAXPEA_K@ZEA;int (* clGetMemObjectInfo_pfn)(struct _cl_mem *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetPlatformIDs_pfn@@3P6AHIPEAPEAU_cl_platform_id@@PEAI@ZEA;int (* clGetPlatformIDs_pfn)(unsigned int,struct _cl_platform_id * *,unsigned int *)
?clGetPlatformInfo_pfn@@3P6AHPEAU_cl_platform_id@@I_KPEAXPEA_K@ZEA;int (* clGetPlatformInfo_pfn)(struct _cl_platform_id *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetProgramBuildInfo_pfn@@3P6AHPEAU_cl_program@@PEAU_cl_device_id@@I_KPEAXPEA_K@ZEA;int (* clGetProgramBuildInfo_pfn)(struct _cl_program *,struct _cl_device_id *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetProgramInfo_pfn@@3P6AHPEAU_cl_program@@I_KPEAXPEA_K@ZEA;int (* clGetProgramInfo_pfn)(struct _cl_program *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetSamplerInfo_pfn@@3P6AHPEAU_cl_sampler@@I_KPEAXPEA_K@ZEA;int (* clGetSamplerInfo_pfn)(struct _cl_sampler *,unsigned int,unsigned __int64,void *,unsigned __int64 *)
?clGetSupportedImageFormats_pfn@@3P6AHPEAU_cl_context@@_KIIPEAU_cl_image_format@@PEAI@ZEA;int (* clGetSupportedImageFormats_pfn)(struct _cl_context *,unsigned __int64,unsigned int,unsigned int,struct _cl_image_format *,unsigned int *)
?clLinkProgram_pfn@@3P6APEAU_cl_program@@PEAU_cl_context@@IPEBQEAU_cl_device_id@@PEBDIPEBQEAU1@P6AXPEAU1@PEAX@Z5PEAH@ZEA;struct _cl_program * (* clLinkProgram_pfn)(struct _cl_context *,unsigned int,struct _cl_device_id * const *,char const *,unsigned int,struct _cl_program * const *,void (*)(struct _cl_program *,void *),void *,int *)
?clReleaseCommandQueue_pfn@@3P6AHPEAU_cl_command_queue@@@ZEA;int (* clReleaseCommandQueue_pfn)(struct _cl_command_queue *)
?clReleaseContext_pfn@@3P6AHPEAU_cl_context@@@ZEA;int (* clReleaseContext_pfn)(struct _cl_context *)
?clReleaseDevice_pfn@@3P6AHPEAU_cl_device_id@@@ZEA;int (* clReleaseDevice_pfn)(struct _cl_device_id *)
?clReleaseEvent_pfn@@3P6AHPEAU_cl_event@@@ZEA;int (* clReleaseEvent_pfn)(struct _cl_event *)
?clReleaseKernel_pfn@@3P6AHPEAU_cl_kernel@@@ZEA;int (* clReleaseKernel_pfn)(struct _cl_kernel *)
?clReleaseMemObject_pfn@@3P6AHPEAU_cl_mem@@@ZEA;int (* clReleaseMemObject_pfn)(struct _cl_mem *)
?clReleaseProgram_pfn@@3P6AHPEAU_cl_program@@@ZEA;int (* clReleaseProgram_pfn)(struct _cl_program *)
?clReleaseSampler_pfn@@3P6AHPEAU_cl_sampler@@@ZEA;int (* clReleaseSampler_pfn)(struct _cl_sampler *)
?clRetainCommandQueue_pfn@@3P6AHPEAU_cl_command_queue@@@ZEA;int (* clRetainCommandQueue_pfn)(struct _cl_command_queue *)
?clRetainContext_pfn@@3P6AHPEAU_cl_context@@@ZEA;int (* clRetainContext_pfn)(struct _cl_context *)
?clRetainDevice_pfn@@3P6AHPEAU_cl_device_id@@@ZEA;int (* clRetainDevice_pfn)(struct _cl_device_id *)
?clRetainEvent_pfn@@3P6AHPEAU_cl_event@@@ZEA;int (* clRetainEvent_pfn)(struct _cl_event *)
?clRetainKernel_pfn@@3P6AHPEAU_cl_kernel@@@ZEA;int (* clRetainKernel_pfn)(struct _cl_kernel *)
?clRetainMemObject_pfn@@3P6AHPEAU_cl_mem@@@ZEA;int (* clRetainMemObject_pfn)(struct _cl_mem *)
?clRetainProgram_pfn@@3P6AHPEAU_cl_program@@@ZEA;int (* clRetainProgram_pfn)(struct _cl_program *)
?clRetainSampler_pfn@@3P6AHPEAU_cl_sampler@@@ZEA;int (* clRetainSampler_pfn)(struct _cl_sampler *)
?clSetEventCallback_pfn@@3P6AHPEAU_cl_event@@HP6AX0HPEAX@Z1@ZEA;int (* clSetEventCallback_pfn)(struct _cl_event *,int,void (*)(struct _cl_event *,int,void *),void *)
?clSetKernelArg_pfn@@3P6AHPEAU_cl_kernel@@I_KPEBX@ZEA;int (* clSetKernelArg_pfn)(struct _cl_kernel *,unsigned int,unsigned __int64,void const *)
?clSetMemObjectDestructorCallback_pfn@@3P6AHPEAU_cl_mem@@P6AX0PEAX@Z1@ZEA;int (* clSetMemObjectDestructorCallback_pfn)(struct _cl_mem *,void (*)(struct _cl_mem *,void *),void *)
?clSetUserEventStatus_pfn@@3P6AHPEAU_cl_event@@H@ZEA;int (* clSetUserEventStatus_pfn)(struct _cl_event *,int)
?clUnloadCompiler_pfn@@3P6AHXZEA;int (* clUnloadCompiler_pfn)(void)
?clUnloadPlatformCompiler_pfn@@3P6AHPEAU_cl_platform_id@@@ZEA;int (* clUnloadPlatformCompiler_pfn)(struct _cl_platform_id *)
?clWaitForEvents_pfn@@3P6AHIPEBQEAU_cl_event@@@ZEA;int (* clWaitForEvents_pfn)(unsigned int,struct _cl_event * const *)
?classify@ClassificationModel@dnn4_v20211004@dnn@cv@@QEAA?AU?$pair@HM@std@@AEBV_InputArray@4@@Z;struct std::pair<int,float> cv::dnn::dnn4_v20211004::ClassificationModel::classify(class cv::_InputArray const &)
?classify@ClassificationModel@dnn4_v20211004@dnn@cv@@QEAAXAEBV_InputArray@4@AEAHAEAM@Z;void cv::dnn::dnn4_v20211004::ClassificationModel::classify(class cv::_InputArray const &,int &,float &)
?classify@ClfMilBoost@tracking@detail@cv@@QEAA?AV?$vector@MV?$allocator@M@std@@@std@@AEBVMat@4@_N@Z;class std::vector<float,class std::allocator<float> > cv::detail::tracking::ClfMilBoost::classify(class cv::Mat const &,bool)
?cleanup@TLSDataContainer@cv@@QEAAXXZ;void cv::TLSDataContainer::cleanup(void)
?clear@Algorithm@cv@@UEAAXXZ;void cv::Algorithm::clear(void)
?clear@BOWTrainer@cv@@UEAAXXZ;void cv::BOWTrainer::clear(void)
?clear@CvLevMarq@@QEAAXXZ;void CvLevMarq::clear(void)
?clear@DescriptorCollection@DescriptorMatcher@cv@@UEAAXXZ;void cv::DescriptorMatcher::DescriptorCollection::clear(void)
?clear@DescriptorMatcher@cv@@UEAAXXZ;void cv::DescriptorMatcher::clear(void)
?clear@EMImpl@ml@cv@@UEAAXXZ;void cv::ml::EMImpl::clear(void)
?clear@FlannBasedMatcher@cv@@UEAAXXZ;void cv::FlannBasedMatcher::clear(void)
?clear@Hdr@SparseMat@cv@@QEAAXXZ;void cv::SparseMat::Hdr::clear(void)
?clear@SparseMat@cv@@QEAAXXZ;void cv::SparseMat::clear(void)
?clear@_OutputArray@cv@@QEBAXXZ;void cv::_OutputArray::clear(void)
?clearCurrentConfidenceMap@TrackerModel@tracking@detail@cv@@AEAAXXZ;void cv::detail::tracking::TrackerModel::clearCurrentConfidenceMap(void)
?clearResponses@TrackerFeatureSet@tracking@detail@cv@@AEAAXXZ;void cv::detail::tracking::TrackerFeatureSet::clearResponses(void)
?clearSamples@TrackerSampler@tracking@detail@cv@@AEAAXXZ;void cv::detail::tracking::TrackerSampler::clearSamples(void)
?clearSeq@cv@@YAXPEAUCvSeq@@@Z;void cv::clearSeq(struct CvSeq *)
?clearVoronoi@Subdiv2D@cv@@IEAAXXZ;void cv::Subdiv2D::clearVoronoi(void)
?clipLine@cv@@YA_NV?$Rect_@H@1@AEAV?$Point_@H@1@1@Z;bool cv::clipLine(class cv::Rect_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?clipLine@cv@@YA_NV?$Size_@H@1@AEAV?$Point_@H@1@1@Z;bool cv::clipLine(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?clipLine@cv@@YA_NV?$Size_@_J@1@AEAV?$Point_@_J@1@1@Z;bool cv::clipLine(class cv::Size_<__int64>,class cv::Point_<__int64> &,class cv::Point_<__int64> &)
?clockRate@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::clockRate(void)
?clone@BFMatcher@cv@@UEBA?AU?$Ptr@VDescriptorMatcher@cv@@@2@_N@Z;struct cv::Ptr<class cv::DescriptorMatcher> cv::BFMatcher::clone(bool)
?clone@Buffer@ogl@cv@@QEBA?AV123@W4Target@123@_N@Z;class cv::ogl::Buffer cv::ogl::Buffer::clone(enum cv::ogl::Buffer::Target,bool)
?clone@FlannBasedMatcher@cv@@UEBA?AU?$Ptr@VDescriptorMatcher@cv@@@2@_N@Z;struct cv::Ptr<class cv::DescriptorMatcher> cv::FlannBasedMatcher::clone(bool)
?clone@GpuMat@cuda@cv@@QEBA?AV123@XZ;class cv::cuda::GpuMat cv::cuda::GpuMat::clone(void)
?clone@GpuMatND@cuda@cv@@QEBA?AV123@AEAVStream@23@@Z;class cv::cuda::GpuMatND cv::cuda::GpuMatND::clone(class cv::cuda::Stream &)
?clone@GpuMatND@cuda@cv@@QEBA?AV123@XZ;class cv::cuda::GpuMatND cv::cuda::GpuMatND::clone(void)
?clone@HostMem@cuda@cv@@QEBA?AV123@XZ;class cv::cuda::HostMem cv::cuda::HostMem::clone(void)
?clone@Mat@cv@@QEBA?AV12@XZ;class cv::Mat cv::Mat::clone(void)
?clone@SparseMat@cv@@QEBA?AV12@XZ;class cv::SparseMat cv::SparseMat::clone(void)
?clone@UMat@cv@@QEBA?AV12@XZ;class cv::UMat cv::UMat::clone(void)
?cloneWithNewQueue@OpenCLExecutionContext@ocl@cv@@QEBA?AV123@AEBVQueue@23@@Z;class cv::ocl::OpenCLExecutionContext cv::ocl::OpenCLExecutionContext::cloneWithNewQueue(class cv::ocl::Queue const &)
?cloneWithNewQueue@OpenCLExecutionContext@ocl@cv@@QEBA?AV123@XZ;class cv::ocl::OpenCLExecutionContext cv::ocl::OpenCLExecutionContext::cloneWithNewQueue(void)
?clone_op@DescriptorMatcher@cv@@KA?AVMat@2@V32@@Z;class cv::Mat cv::DescriptorMatcher::clone_op(class cv::Mat)
?close@AVIReadContainer@cv@@QEAAXXZ;void cv::AVIReadContainer::close(void)
?closeToContour@DpSeamFinder@detail@cv@@AEAA_NHHAEBV?$Mat_@E@3@@Z;bool cv::detail::DpSeamFinder::closeToContour(int,int,class cv::Mat_<unsigned char> const &)
?cluster@BOWKMeansTrainer@cv@@UEBA?AVMat@2@AEBV32@@Z;class cv::Mat cv::BOWKMeansTrainer::cluster(class cv::Mat const &)
?cluster@BOWKMeansTrainer@cv@@UEBA?AVMat@2@XZ;class cv::Mat cv::BOWKMeansTrainer::cluster(void)
?clusterTrainSamples@EMImpl@ml@cv@@QEAAXXZ;void cv::ml::EMImpl::clusterTrainSamples(void)
?cmp16s@hal@cv@@YAXPEBF_K01PEAE1HHPEAX@Z;void cv::hal::cmp16s(short const *,unsigned __int64,short const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?cmp16u@hal@cv@@YAXPEBG_K01PEAE1HHPEAX@Z;void cv::hal::cmp16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?cmp32f@hal@cv@@YAXPEBM_K01PEAE1HHPEAX@Z;void cv::hal::cmp32f(float const *,unsigned __int64,float const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?cmp32s@hal@cv@@YAXPEBH_K01PEAE1HHPEAX@Z;void cv::hal::cmp32s(int const *,unsigned __int64,int const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?cmp64f@hal@cv@@YAXPEBN_K01PEAE1HHPEAX@Z;void cv::hal::cmp64f(double const *,unsigned __int64,double const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?cmp8s@hal@cv@@YAXPEBC_K01PEAE1HHPEAX@Z;void cv::hal::cmp8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?cmp8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::cmp8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?cmpEQ@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::cmpEQ(class cv::GMat const &,class cv::GMat const &)
?cmpEQ@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::cmpEQ(class cv::GMat const &,class cv::GScalar const &)
?cmpGE@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::cmpGE(class cv::GMat const &,class cv::GMat const &)
?cmpGE@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::cmpGE(class cv::GMat const &,class cv::GScalar const &)
?cmpGT@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::cmpGT(class cv::GMat const &,class cv::GMat const &)
?cmpGT@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::cmpGT(class cv::GMat const &,class cv::GScalar const &)
?cmpLE@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::cmpLE(class cv::GMat const &,class cv::GMat const &)
?cmpLE@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::cmpLE(class cv::GMat const &,class cv::GScalar const &)
?cmpLT@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::cmpLT(class cv::GMat const &,class cv::GMat const &)
?cmpLT@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::cmpLT(class cv::GMat const &,class cv::GScalar const &)
?cmpNE@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::cmpNE(class cv::GMat const &,class cv::GMat const &)
?cmpNE@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@@Z;class cv::GMat cv::gapi::cmpNE(class cv::GMat const &,class cv::GScalar const &)
?col@GpuMat@cuda@cv@@QEBA?AV123@H@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::col(int)
?col@Mat@cv@@QEBA?AV12@H@Z;class cv::Mat cv::Mat::col(int)
?col@MatExpr@cv@@QEBA?AV12@H@Z;class cv::MatExpr cv::MatExpr::col(int)
?col@UMat@cv@@QEBA?AV12@H@Z;class cv::UMat cv::UMat::col(int)
?colRange@GpuMat@cuda@cv@@QEBA?AV123@HH@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::colRange(int,int)
?colRange@GpuMat@cuda@cv@@QEBA?AV123@VRange@3@@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::colRange(class cv::Range)
?colRange@Mat@cv@@QEBA?AV12@AEBVRange@2@@Z;class cv::Mat cv::Mat::colRange(class cv::Range const &)
?colRange@Mat@cv@@QEBA?AV12@HH@Z;class cv::Mat cv::Mat::colRange(int,int)
?colRange@UMat@cv@@QEBA?AV12@AEBVRange@2@@Z;class cv::UMat cv::UMat::colRange(class cv::Range const &)
?colRange@UMat@cv@@QEBA?AV12@HH@Z;class cv::UMat cv::UMat::colRange(int,int)
?collectGarbage@BestOf2NearestMatcher@detail@cv@@UEAAXXZ;void cv::detail::BestOf2NearestMatcher::collectGarbage(void)
?collectGarbage@FeaturesMatcher@detail@cv@@UEAAXXZ;void cv::detail::FeaturesMatcher::collectGarbage(void)
?collectInputMeta@GModel@gimpl@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$ConstTypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VNode@ade@@@7@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::gimpl::GModel::collectInputMeta(class ade::ConstTypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,stru
?collectOutputMeta@GModel@gimpl@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$ConstTypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VNode@ade@@@7@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::gimpl::GModel::collectOutputMeta(class ade::ConstTypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,str
?colorChange@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@MMM@Z;void cv::colorChange(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,float,float,float)
?cols@Buffer@ogl@cv@@QEBAHXZ;int cv::ogl::Buffer::cols(void)
?cols@Texture2D@ogl@cv@@QEBAHXZ;int cv::ogl::Texture2D::cols(void)
?cols@View@RMat@cv@@QEBAHXZ;int cv::RMat::View::cols(void)
?cols@_InputArray@cv@@QEBAHH@Z;int cv::_InputArray::cols(int)
?combine@gapi@cv@@YA?AVGKernelPackage@12@AEBV312@0@Z;class cv::gapi::GKernelPackage cv::gapi::combine(class cv::gapi::GKernelPackage const &,class cv::gapi::GKernelPackage const &)
?commit@BufferArea@utils@cv@@QEAAXXZ;void cv::utils::BufferArea::commit(void)
?compare@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@H@Z;void cv::compare(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int)
?compareHist@cv@@YANAEBVSparseMat@1@0H@Z;double cv::compareHist(class cv::SparseMat const &,class cv::SparseMat const &,int)
?compareHist@cv@@YANAEBV_InputArray@1@0H@Z;double cv::compareHist(class cv::_InputArray const &,class cv::_InputArray const &,int)
?compile@GCompiler@gimpl@cv@@QEAA?AVGCompiled@3@XZ;class cv::GCompiled cv::gimpl::GCompiler::compile(void)
?compile@GComputation@cv@@QEAA?AVGCompiled@2@$$QEAV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@5@@Z;class cv::GCompiled cv::GComputation::compile(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?compile@Priv@GBackend@gapi@cv@@UEBA?AV?$unique_ptr@VGIslandExecutable@gimpl@cv@@U?$default_delete@VGIslandExecutable@gimpl@cv@@@std@@@std@@AEBVGraph@ade@@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@6@AEBV?$vector@V?$Handle@VNode@ade@@@ade@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@std@@@6@@Z;class std::unique_ptr<class cv::gimpl::GIslandExecutable,struct std::default_delete<class cv::gimpl::GIslandExecutable> > cv::gapi::GBackend::Priv::compile(class ade::Graph const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > const &,class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > > const &)
?compile@Priv@GBackend@gapi@cv@@UEBA?AV?$unique_ptr@VGIslandExecutable@gimpl@cv@@U?$default_delete@VGIslandExecutable@gimpl@cv@@@std@@@std@@AEBVGraph@ade@@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@6@AEBV?$vector@V?$Handle@VNode@ade@@@ade@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@std@@@6@AEBV?$vector@UData@gimpl@cv@@V?$allocator@UData@gimpl@cv@@@std@@@6@3@Z;class std::unique_ptr<class cv::gimpl::GIslandExecutable,struct std::default_delete<class cv::gimpl::GIslandExecutable> > cv::gapi::GBackend::Priv::compile(class ade::Graph const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > const &,class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > > const &,class std::vector<struct cv::gimpl::Data,class std::allocator<struct cv::gimpl::Data> > const &,class std::vector<struct cv::gimpl::Data,class std::allocator<struct cv::gimpl::Data> > const &)
?compileIslands@GCompiler@gimpl@cv@@QEAAXAEAVGraph@ade@@@Z;void cv::gimpl::GCompiler::compileIslands(class ade::Graph &)
?compileIslands@GCompiler@gimpl@cv@@SAXAEAVGraph@ade@@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;void cv::gimpl::GCompiler::compileIslands(class ade::Graph &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > const &)
?compileStreaming@GCompiler@gimpl@cv@@QEAA?AVGStreamingCompiled@3@XZ;class cv::GStreamingCompiled cv::gimpl::GCompiler::compileStreaming(void)
?compileStreaming@GComputation@cv@@QEAA?AVGStreamingCompiled@2@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;class cv::GStreamingCompiled cv::GComputation::compileStreaming(class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?compileStreaming@GComputation@cv@@QEAA?AVGStreamingCompiled@2@$$QEAV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@5@@Z;class cv::GStreamingCompiled cv::GComputation::compileStreaming(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?compileStreaming@GComputation@cv@@QEAA?AVGStreamingCompiled@2@AEBUExtractMetaCallback@detail@2@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;class cv::GStreamingCompiled cv::GComputation::compileStreaming(struct cv::detail::ExtractMetaCallback const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?compileWorkGroupSize@Kernel@ocl@cv@@QEBA_NQEA_K@Z;bool cv::ocl::Kernel::compileWorkGroupSize(unsigned __int64 * const)
?compilerAvailable@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::compilerAvailable(void)
?completeSymm@cv@@YAXAEBV_InputOutputArray@1@_N@Z;void cv::completeSymm(class cv::_InputOutputArray const &,bool)
?component@Stitcher@cv@@QEBA?AV?$vector@HV?$allocator@H@std@@@std@@XZ;class std::vector<int,class std::allocator<int> > cv::Stitcher::component(void)
?composePanorama@Stitcher@cv@@QEAA?AW4Status@12@AEBV_InputArray@2@AEBV_OutputArray@2@@Z;enum cv::Stitcher::Status cv::Stitcher::composePanorama(class cv::_InputArray const &,class cv::_OutputArray const &)
?composePanorama@Stitcher@cv@@QEAA?AW4Status@12@AEBV_OutputArray@2@@Z;enum cv::Stitcher::Status cv::Stitcher::composePanorama(class cv::_OutputArray const &)
?composeRT@cv@@YAXAEBV_InputArray@1@000AEBV_OutputArray@1@111111111@Z;void cv::composeRT(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?compositingResol@Stitcher@cv@@QEBANXZ;double cv::Stitcher::compositingResol(void)
?compute2@BOWImgDescriptorExtractor@cv@@QEAAXAEBVMat@2@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@AEAV32@@Z;void cv::BOWImgDescriptorExtractor::compute2(class cv::Mat const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::Mat &)
?compute@BOWImgDescriptorExtractor@cv@@QEAAXAEBV_InputArray@2@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@AEBV_OutputArray@2@PEAV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@5@PEAVMat@2@@Z;void cv::BOWImgDescriptorExtractor::compute(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::_OutputArray const &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > *,class cv::Mat *)
?compute@BOWImgDescriptorExtractor@cv@@QEAAXAEBV_InputArray@2@AEBV_OutputArray@2@PEAV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@Z;void cv::BOWImgDescriptorExtractor::compute(class cv::_InputArray const &,class cv::_OutputArray const &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > *)
?compute@Feature2D@cv@@UEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@V?$allocator@V?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@@2@@std@@AEBV_OutputArray@2@@Z;void cv::Feature2D::compute(class cv::_InputArray const &,class std::vector<class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> >,class std::allocator<class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > > > &,class cv::_OutputArray const &)
?compute@Feature2D@cv@@UEAAXAEBV_InputArray@2@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@AEBV_OutputArray@2@@Z;void cv::Feature2D::compute(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::_OutputArray const &)
?compute@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEAV?$vector@MV?$allocator@M@std@@@std@@V?$Size_@H@2@2AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@5@@Z;void cv::HOGDescriptor::compute(class cv::_InputArray const &,class std::vector<float,class std::allocator<float> > &,class cv::Size_<int>,class cv::Size_<int>,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &)
?compute@LDA@cv@@QEAAXAEBV_InputArray@2@0@Z;void cv::LDA::compute(class cv::_InputArray const &,class cv::_InputArray const &)
?compute@SVD@cv@@SAXAEBV_InputArray@2@AEBV_OutputArray@2@11H@Z;void cv::SVD::compute(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int)
?compute@SVD@cv@@SAXAEBV_InputArray@2@AEBV_OutputArray@2@H@Z;void cv::SVD::compute(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?compute@TrackerFeature@tracking@detail@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEAVMat@4@@Z;void cv::detail::tracking::TrackerFeature::compute(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class cv::Mat &)
?computeCorrespondEpilines@cv@@YAXAEBV_InputArray@1@H0AEBV_OutputArray@1@@Z;void cv::computeCorrespondEpilines(class cv::_InputArray const &,int,class cv::_InputArray const &,class cv::_OutputArray const &)
?computeCosts@DpSeamFinder@detail@cv@@AEAAXAEBVMat@3@0V?$Point_@H@3@1HAEAV?$Mat_@M@3@2@Z;void cv::detail::DpSeamFinder::computeCosts(class cv::Mat const &,class cv::Mat const &,class cv::Point_<int>,class cv::Point_<int>,int,class cv::Mat_<float> &,class cv::Mat_<float> &)
?computeECC@cv@@YANAEBV_InputArray@1@00@Z;double cv::computeECC(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?computeGradient@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEBV_InputOutputArray@2@1V?$Size_@H@2@2@Z;void cv::HOGDescriptor::computeGradient(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::Size_<int>,class cv::Size_<int>)
?computeGradients@DpSeamFinder@detail@cv@@AEAAXAEBVMat@3@0@Z;void cv::detail::DpSeamFinder::computeGradients(class cv::Mat const &,class cv::Mat const &)
?computeImageFeatures@detail@cv@@YAXAEBU?$Ptr@VFeature2D@cv@@@2@AEBV_InputArray@2@AEAUImageFeatures@12@1@Z;void cv::detail::computeImageFeatures(struct cv::Ptr<class cv::Feature2D> const &,class cv::_InputArray const &,struct cv::detail::ImageFeatures &,class cv::_InputArray const &)
?computeImageFeatures@detail@cv@@YAXAEBU?$Ptr@VFeature2D@cv@@@2@AEBV_InputArray@2@AEAV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@1@Z;void cv::detail::computeImageFeatures(struct cv::Ptr<class cv::Feature2D> const &,class cv::_InputArray const &,class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > &,class cv::_InputArray const &)
?computeLogWeightDivDet@EMImpl@ml@cv@@QEAAXXZ;void cv::ml::EMImpl::computeLogWeightDivDet(void)
?computeMode@DeviceInfo@cuda@cv@@QEBA?AW4ComputeMode@123@XZ;enum cv::cuda::DeviceInfo::ComputeMode cv::cuda::DeviceInfo::computeMode(void)
?computeProbabilities@EMImpl@ml@cv@@QEBA?AV?$Vec@N$01@3@AEBVMat@3@PEAV53@H@Z;class cv::Vec<double,2> cv::ml::EMImpl::computeProbabilities(class cv::Mat const &,class cv::Mat *,int)
?computeRecallPrecisionCurve@cv@@YAXAEBV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@AEBV?$vector@V?$vector@EV?$allocator@E@std@@@std@@V?$allocator@V?$vector@EV?$allocator@E@std@@@std@@@2@@3@AEAV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@3@@Z;void cv::computeRecallPrecisionCurve(class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > const &,class std::vector<class std::vector<unsigned char,class std::allocator<unsigned char> >,class std::allocator<class std::vector<unsigned char,class std::allocator<unsigned char> > > > const &,class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > &)
?concatHor@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::concatHor(class cv::GMat const &,class cv::GMat const &)
?concatHor@gapi@cv@@YA?AVGMat@2@AEBV?$vector@VGMat@cv@@V?$allocator@VGMat@cv@@@std@@@std@@@Z;class cv::GMat cv::gapi::concatHor(class std::vector<class cv::GMat,class std::allocator<class cv::GMat> > const &)
?concatVert@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::concatVert(class cv::GMat const &,class cv::GMat const &)
?concatVert@gapi@cv@@YA?AVGMat@2@AEBV?$vector@VGMat@cv@@V?$allocator@VGMat@cv@@@std@@@std@@@Z;class cv::GMat cv::gapi::concatVert(class std::vector<class cv::GMat,class std::allocator<class cv::GMat> > const &)
?concurrentKernels@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::concurrentKernels(void)
?confThresh@BundleAdjusterBase@detail@cv@@QEBANXZ;double cv::detail::BundleAdjusterBase::confThresh(void)
?connect@Net@dnn4_v20211004@dnn@cv@@QEAAXHHHH@Z;void cv::dnn::dnn4_v20211004::Net::connect(int,int,int,int)
?connect@Net@dnn4_v20211004@dnn@cv@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void cv::dnn::dnn4_v20211004::Net::connect(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)
?connectEdges@Subdiv2D@cv@@IEAAHHH@Z;int cv::Subdiv2D::connectEdges(int,int)
?connectedComponents@cv@@YAHAEBV_InputArray@1@AEBV_OutputArray@1@HH@Z;int cv::connectedComponents(class cv::_InputArray const &,class cv::_OutputArray const &,int,int)
?connectedComponents@cv@@YAHAEBV_InputArray@1@AEBV_OutputArray@1@HHH@Z;int cv::connectedComponents(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int)
?connectedComponentsWithStats@cv@@YAHAEBV_InputArray@1@AEBV_OutputArray@1@11HH@Z;int cv::connectedComponentsWithStats(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,int)
?connectedComponentsWithStats@cv@@YAHAEBV_InputArray@1@AEBV_OutputArray@1@11HHH@Z;int cv::connectedComponentsWithStats(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,int,int)
?constInput@PyParams@ie@gapi@cv@@QEAAAEAV1234@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVMat@4@W4TraitAs@234@@Z;class cv::gapi::ie::PyParams & cv::gapi::ie::PyParams::constInput(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Mat const &,enum cv::gapi::ie::TraitAs)
?consumers@GIsland@gimpl@cv@@QEBA?AV?$unordered_set@V?$Handle@VNode@ade@@@ade@@U?$HandleHasher@VNode@ade@@@2@U?$equal_to@V?$Handle@VNode@ade@@@ade@@@std@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@5@@std@@AEBVGraph@ade@@AEBV?$Handle@VNode@ade@@@7@@Z;class std::unordered_set<class ade::Handle<class ade::Node>,struct ade::HandleHasher<class ade::Node>,struct std::equal_to<class ade::Handle<class ade::Node> >,class std::allocator<class ade::Handle<class ade::Node> > > cv::gimpl::GIsland::consumers(class ade::Graph const &,class ade::Handle<class ade::Node> const &)
?contents@GIsland@gimpl@cv@@QEBAAEBV?$unordered_set@V?$Handle@VNode@ade@@@ade@@U?$HandleHasher@VNode@ade@@@2@U?$equal_to@V?$Handle@VNode@ade@@@ade@@@std@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@5@@std@@XZ;class std::unordered_set<class ade::Handle<class ade::Node>,struct ade::HandleHasher<class ade::Node>,struct std::equal_to<class ade::Handle<class ade::Node> >,class std::allocator<class ade::Handle<class ade::Node> > > const & cv::gimpl::GIsland::contents(void)
?contourArea@cv@@YANAEBV_InputArray@1@_N@Z;double cv::contourArea(class cv::_InputArray const &,bool)
?controlsMerge@Priv@GBackend@gapi@cv@@UEBA_NXZ;bool cv::gapi::GBackend::Priv::controlsMerge(void)
?convert@CascadeClassifier@cv@@SA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;bool cv::CascadeClassifier::convert(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?convert@KeyPoint@cv@@SAXAEBV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@std@@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@4@MMHH@Z;void cv::KeyPoint::convert(class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,float,float,int,int)
?convert@KeyPoint@cv@@SAXAEBV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@AEAV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@4@AEBV?$vector@HV?$allocator@H@std@@@4@@Z;void cv::KeyPoint::convert(class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > &,class std::vector<int,class std::allocator<int> > const &)
?convertFp16@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::convertFp16(class cv::_InputArray const &,class cv::_OutputArray const &)
?convertFromBuffer@ocl@cv@@YAXPEAX_KHHHAEAVUMat@2@@Z;void cv::ocl::convertFromBuffer(void *,unsigned __int64,int,int,int,class cv::UMat &)
?convertFromD3D10Texture2D@directx@cv@@YAXPEAUID3D10Texture2D@@AEBV_OutputArray@2@@Z;void cv::directx::convertFromD3D10Texture2D(struct ID3D10Texture2D *,class cv::_OutputArray const &)
?convertFromD3D11Texture2D@directx@cv@@YAXPEAUID3D11Texture2D@@AEBV_OutputArray@2@@Z;void cv::directx::convertFromD3D11Texture2D(struct ID3D11Texture2D *,class cv::_OutputArray const &)
?convertFromDirect3DSurface9@directx@cv@@YAXPEAUIDirect3DSurface9@@AEBV_OutputArray@2@PEAX@Z;void cv::directx::convertFromDirect3DSurface9(struct IDirect3DSurface9 *,class cv::_OutputArray const &,void *)
?convertFromGLTexture2D@ogl@cv@@YAXAEBVTexture2D@12@AEBV_OutputArray@2@@Z;void cv::ogl::convertFromGLTexture2D(class cv::ogl::Texture2D const &,class cv::_OutputArray const &)
?convertFromImage@ocl@cv@@YAXPEAXAEAVUMat@2@@Z;void cv::ocl::convertFromImage(void *,class cv::UMat &)
?convertFromVASurface@va_intel@cv@@YAXPEAXIV?$Size_@H@2@AEBV_OutputArray@2@@Z;void cv::va_intel::convertFromVASurface(void *,unsigned int,class cv::Size_<int>,class cv::_OutputArray const &)
?convertMaps@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@1H_N@Z;void cv::convertMaps(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,bool)
?convertPointsFromHomogeneous@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::convertPointsFromHomogeneous(class cv::_InputArray const &,class cv::_OutputArray const &)
?convertPointsHomogeneous@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::convertPointsHomogeneous(class cv::_InputArray const &,class cv::_OutputArray const &)
?convertPointsToHomogeneous@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::convertPointsToHomogeneous(class cv::_InputArray const &,class cv::_OutputArray const &)
?convertScaleAbs@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@NN@Z;void cv::convertScaleAbs(class cv::_InputArray const &,class cv::_OutputArray const &,double,double)
?convertTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@H@Z;void cv::cuda::GpuMat::convertTo(class cv::_OutputArray const &,int)
?convertTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@HAEAVStream@23@@Z;void cv::cuda::GpuMat::convertTo(class cv::_OutputArray const &,int,class cv::cuda::Stream &)
?convertTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@HNAEAVStream@23@@Z;void cv::cuda::GpuMat::convertTo(class cv::_OutputArray const &,int,double,class cv::cuda::Stream &)
?convertTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@HNN@Z;void cv::cuda::GpuMat::convertTo(class cv::_OutputArray const &,int,double,double)
?convertTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@HNNAEAVStream@23@@Z;void cv::cuda::GpuMat::convertTo(class cv::_OutputArray const &,int,double,double,class cv::cuda::Stream &)
?convertTo@Mat@cv@@QEBAXAEBV_OutputArray@2@HNN@Z;void cv::Mat::convertTo(class cv::_OutputArray const &,int,double,double)
?convertTo@SparseMat@cv@@QEBAXAEAV12@HN@Z;void cv::SparseMat::convertTo(class cv::SparseMat &,int,double)
?convertTo@SparseMat@cv@@QEBAXAEAVMat@2@HNN@Z;void cv::SparseMat::convertTo(class cv::Mat &,int,double,double)
?convertTo@UMat@cv@@QEBAXAEBV_OutputArray@2@HNN@Z;void cv::UMat::convertTo(class cv::_OutputArray const &,int,double,double)
?convertTo@gapi@cv@@YA?AVGMat@2@AEBV32@HNN@Z;class cv::GMat cv::gapi::convertTo(class cv::GMat const &,int,double,double)
?convertToD3D10Texture2D@directx@cv@@YAXAEBV_InputArray@2@PEAUID3D10Texture2D@@@Z;void cv::directx::convertToD3D10Texture2D(class cv::_InputArray const &,struct ID3D10Texture2D *)
?convertToD3D11Texture2D@directx@cv@@YAXAEBV_InputArray@2@PEAUID3D11Texture2D@@@Z;void cv::directx::convertToD3D11Texture2D(class cv::_InputArray const &,struct ID3D11Texture2D *)
?convertToDMatches@FlannBasedMatcher@cv@@KAXAEBVDescriptorCollection@DescriptorMatcher@2@AEBVMat@2@1AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@@Z;void cv::FlannBasedMatcher::convertToDMatches(class cv::DescriptorMatcher::DescriptorCollection const &,class cv::Mat const &,class cv::Mat const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &)
?convertToDirect3DSurface9@directx@cv@@YAXAEBV_InputArray@2@PEAUIDirect3DSurface9@@PEAX@Z;void cv::directx::convertToDirect3DSurface9(class cv::_InputArray const &,struct IDirect3DSurface9 *,void *)
?convertToGLTexture2D@ogl@cv@@YAXAEBV_InputArray@2@AEAVTexture2D@12@@Z;void cv::ogl::convertToGLTexture2D(class cv::_InputArray const &,class cv::ogl::Texture2D &)
?convertToVASurface@va_intel@cv@@YAXPEAXAEBV_InputArray@2@IV?$Size_@H@2@@Z;void cv::va_intel::convertToVASurface(void *,class cv::_InputArray const &,unsigned int,class cv::Size_<int>)
?convertTypeStr@ocl@cv@@YAPEBDHHHPEAD@Z;char const * cv::ocl::convertTypeStr(int,int,int,char *)
?convexHull@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@_N2@Z;void cv::convexHull(class cv::_InputArray const &,class cv::_OutputArray const &,bool,bool)
?convexityDefects@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::convexityDefects(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?copy@MatAllocator@cv@@UEBAXPEAUUMatData@2@0HQEB_K1111_N@Z;void cv::MatAllocator::copy(struct cv::UMatData *,struct cv::UMatData *,int,unsigned __int64 const * const,unsigned __int64 const * const,unsigned __int64 const * const,unsigned __int64 const * const,unsigned __int64 const * const,bool)
?copy@gapi@cv@@YA?AVGFrame@2@AEBV32@@Z;class cv::GFrame cv::gapi::copy(class cv::GFrame const &)
?copy@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::copy(class cv::GMat const &)
?copyFrom@Buffer@ogl@cv@@QEAAXAEBV_InputArray@3@AEAVStream@cuda@3@W4Target@123@_N@Z;void cv::ogl::Buffer::copyFrom(class cv::_InputArray const &,class cv::cuda::Stream &,enum cv::ogl::Buffer::Target,bool)
?copyFrom@Buffer@ogl@cv@@QEAAXAEBV_InputArray@3@W4Target@123@_N@Z;void cv::ogl::Buffer::copyFrom(class cv::_InputArray const &,enum cv::ogl::Buffer::Target,bool)
?copyFrom@Texture2D@ogl@cv@@QEAAXAEBV_InputArray@3@_N@Z;void cv::ogl::Texture2D::copyFrom(class cv::_InputArray const &,bool)
?copyMakeBorder@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHHHHAEBV?$Scalar_@N@1@@Z;void cv::copyMakeBorder(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int,int,int,class cv::Scalar_<double> const &)
?copyOnMap@UMatData@cv@@QEBA_NXZ;bool cv::UMatData::copyOnMap(void)
?copySize@Mat@cv@@QEAAXAEBV12@@Z;void cv::Mat::copySize(class cv::Mat const &)
?copySize@UMat@cv@@QEAAXAEBV12@@Z;void cv::UMat::copySize(class cv::UMat const &)
?copyTo@Buffer@ogl@cv@@QEBAXAEBV_OutputArray@3@@Z;void cv::ogl::Buffer::copyTo(class cv::_OutputArray const &)
?copyTo@Buffer@ogl@cv@@QEBAXAEBV_OutputArray@3@AEAVStream@cuda@3@@Z;void cv::ogl::Buffer::copyTo(class cv::_OutputArray const &,class cv::cuda::Stream &)
?copyTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@@Z;void cv::cuda::GpuMat::copyTo(class cv::_OutputArray const &)
?copyTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@AEAVStream@23@@Z;void cv::cuda::GpuMat::copyTo(class cv::_OutputArray const &,class cv::cuda::Stream &)
?copyTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@AEBV_InputArray@3@@Z;void cv::cuda::GpuMat::copyTo(class cv::_OutputArray const &,class cv::_InputArray const &)
?copyTo@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@AEBV_InputArray@3@AEAVStream@23@@Z;void cv::cuda::GpuMat::copyTo(class cv::_OutputArray const &,class cv::_InputArray const &,class cv::cuda::Stream &)
?copyTo@HOGDescriptor@cv@@UEBAXAEAU12@@Z;void cv::HOGDescriptor::copyTo(struct cv::HOGDescriptor &)
?copyTo@Mat@cv@@QEBAXAEBV_OutputArray@2@@Z;void cv::Mat::copyTo(class cv::_OutputArray const &)
?copyTo@Mat@cv@@QEBAXAEBV_OutputArray@2@AEBV_InputArray@2@@Z;void cv::Mat::copyTo(class cv::_OutputArray const &,class cv::_InputArray const &)
?copyTo@SparseMat@cv@@QEBAXAEAV12@@Z;void cv::SparseMat::copyTo(class cv::SparseMat &)
?copyTo@SparseMat@cv@@QEBAXAEAVMat@2@@Z;void cv::SparseMat::copyTo(class cv::Mat &)
?copyTo@Texture2D@ogl@cv@@QEBAXAEBV_OutputArray@3@H_N@Z;void cv::ogl::Texture2D::copyTo(class cv::_OutputArray const &,int,bool)
?copyTo@UMat@cv@@QEBAXAEBV_OutputArray@2@@Z;void cv::UMat::copyTo(class cv::_OutputArray const &)
?copyTo@UMat@cv@@QEBAXAEBV_OutputArray@2@AEBV_InputArray@2@@Z;void cv::UMat::copyTo(class cv::_OutputArray const &,class cv::_InputArray const &)
?copyTo@_InputArray@cv@@QEBAXAEBV_OutputArray@2@@Z;void cv::_InputArray::copyTo(class cv::_OutputArray const &)
?copyTo@_InputArray@cv@@QEBAXAEBV_OutputArray@2@AEBV12@@Z;void cv::_InputArray::copyTo(class cv::_OutputArray const &,class cv::_InputArray const &)
?copyTo@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0@Z;void cv::copyTo(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?copyToSparseMat@CvSparseMat@@QEBAXAEAVSparseMat@cv@@@Z;void CvSparseMat::copyToSparseMat(class cv::SparseMat &)
?cornerEigenValsAndVecs@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHH@Z;void cv::cornerEigenValsAndVecs(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int)
?cornerHarris@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHNH@Z;void cv::cornerHarris(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,double,int)
?cornerMinEigenVal@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHH@Z;void cv::cornerMinEigenVal(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int)
?cornerSubPix@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@V?$Size_@H@1@2VTermCriteria@1@@Z;void cv::cornerSubPix(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::Size_<int>,class cv::Size_<int>,class cv::TermCriteria)
?correct@KalmanFilter@cv@@QEAAAEBVMat@2@AEBV32@@Z;class cv::Mat const & cv::KalmanFilter::correct(class cv::Mat const &)
?correctMatches@cv@@YAXAEBV_InputArray@1@00AEBV_OutputArray@1@1@Z;void cv::correctMatches(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?cos@cv@@YA?AUsoftdouble@1@AEBU21@@Z;struct cv::softdouble cv::cos(struct cv::softdouble const &)
?costFunction@DpSeamFinder@detail@cv@@QEBA?AW4CostFunction@123@XZ;enum cv::detail::DpSeamFinder::CostFunction cv::detail::DpSeamFinder::costFunction(void)
?countFrameSize@AVIWriteContainer@cv@@QEBA_KXZ;unsigned __int64 cv::AVIWriteContainer::countFrameSize(void)
?countNonZero@cv@@YAHAEBV_InputArray@1@@Z;int cv::countNonZero(class cv::_InputArray const &)
?countNonZero@gapi@cv@@YA?AV?$GOpaque@H@2@AEBVGMat@2@@Z;class cv::GOpaque<int> cv::gapi::countNonZero(class cv::GMat const &)
?cpyrs@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@CA?AV?$array@P6AXQEAT?$_Align_type@N$0GA@@std@@QEBT12@@Z$07@std@@XZ;class std::array<void (*)(union std::_Align_type<double,96> * const,union std::_Align_type<double,96> const * const),8> cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::cpyrs(void)
?create@AKAZE@cv@@SA?AU?$Ptr@VAKAZE@cv@@@2@W4DescriptorType@12@HHMHHW4DiffusivityType@KAZE@2@@Z;struct cv::Ptr<class cv::AKAZE> cv::AKAZE::create(enum cv::AKAZE::DescriptorType,int,int,float,int,int,enum cv::KAZE::DiffusivityType)
?create@ANN_MLP@ml@cv@@SA?AU?$Ptr@VANN_MLP@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::ANN_MLP> cv::ml::ANN_MLP::create(void)
?create@AbsLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VAbsLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::AbsLayer> cv::dnn::dnn4_v20211004::AbsLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@AccumLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VAccumLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::AccumLayer> cv::dnn::dnn4_v20211004::AccumLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ActivationLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VActivationLayerInt8@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ActivationLayerInt8> cv::dnn::dnn4_v20211004::ActivationLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@AffineFeature@cv@@SA?AU?$Ptr@VAffineFeature@cv@@@2@AEBU?$Ptr@VFeature2D@cv@@@2@HHMM@Z;struct cv::Ptr<class cv::AffineFeature> cv::AffineFeature::create(struct cv::Ptr<class cv::Feature2D> const &,int,int,float,float)
?create@AffineWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::AffineWarper::create(float)
?create@AgastFeatureDetector@cv@@SA?AU?$Ptr@VAgastFeatureDetector@cv@@@2@H_NW4DetectorType@12@@Z;struct cv::Ptr<class cv::AgastFeatureDetector> cv::AgastFeatureDetector::create(int,bool,enum cv::AgastFeatureDetector::DetectorType)
?create@BFMatcher@cv@@SA?AU?$Ptr@VBFMatcher@cv@@@2@H_N@Z;struct cv::Ptr<class cv::BFMatcher> cv::BFMatcher::create(int,bool)
?create@BNLLLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VBNLLLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BNLLLayer> cv::dnn::dnn4_v20211004::BNLLLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@BRISK@cv@@SA?AU?$Ptr@VBRISK@cv@@@2@AEBV?$vector@MV?$allocator@M@std@@@std@@AEBV?$vector@HV?$allocator@H@std@@@5@MM1@Z;struct cv::Ptr<class cv::BRISK> cv::BRISK::create(class std::vector<float,class std::allocator<float> > const &,class std::vector<int,class std::allocator<int> > const &,float,float,class std::vector<int,class std::allocator<int> > const &)
?create@BRISK@cv@@SA?AU?$Ptr@VBRISK@cv@@@2@HHAEBV?$vector@MV?$allocator@M@std@@@std@@AEBV?$vector@HV?$allocator@H@std@@@5@MM1@Z;struct cv::Ptr<class cv::BRISK> cv::BRISK::create(int,int,class std::vector<float,class std::allocator<float> > const &,class std::vector<int,class std::allocator<int> > const &,float,float,class std::vector<int,class std::allocator<int> > const &)
?create@BRISK@cv@@SA?AU?$Ptr@VBRISK@cv@@@2@HHM@Z;struct cv::Ptr<class cv::BRISK> cv::BRISK::create(int,int,float)
?create@BatchNormLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VBatchNormLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BatchNormLayer> cv::dnn::dnn4_v20211004::BatchNormLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@BatchNormLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VBatchNormLayerInt8@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BatchNormLayerInt8> cv::dnn::dnn4_v20211004::BatchNormLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@BestOf2NearestMatcher@detail@cv@@SA?AU?$Ptr@VBestOf2NearestMatcher@detail@cv@@@3@_NMHH@Z;struct cv::Ptr<class cv::detail::BestOf2NearestMatcher> cv::detail::BestOf2NearestMatcher::create(bool,float,int,int)
?create@BlankLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::BlankLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@Boost@ml@cv@@SA?AU?$Ptr@VBoost@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::Boost> cv::ml::Boost::create(void)
?create@Buffer@ogl@cv@@QEAAXHHHW4Target@123@_N@Z;void cv::ogl::Buffer::create(int,int,int,enum cv::ogl::Buffer::Target,bool)
?create@Buffer@ogl@cv@@QEAAXV?$Size_@H@3@HW4Target@123@_N@Z;void cv::ogl::Buffer::create(class cv::Size_<int>,int,enum cv::ogl::Buffer::Target,bool)
?create@ChannelsPReLULayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::ChannelsPReLULayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@CompressedRectilinearPortraitWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::CompressedRectilinearPortraitWarper::create(float)
?create@CompressedRectilinearWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::CompressedRectilinearWarper::create(float)
?create@ConcatLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VConcatLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ConcatLayer> cv::dnn::dnn4_v20211004::ConcatLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ConjGradSolver@cv@@SA?AU?$Ptr@VConjGradSolver@cv@@@2@AEBU?$Ptr@VFunction@MinProblemSolver@cv@@@2@VTermCriteria@2@@Z;struct cv::Ptr<class cv::ConjGradSolver> cv::ConjGradSolver::create(struct cv::Ptr<class cv::MinProblemSolver::Function> const &,class cv::TermCriteria)
?create@ConstLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::ConstLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@Context@ocl@cv@@QEAA_NH@Z;bool cv::ocl::Context::create(int)
?create@Context@ocl@cv@@QEAA_NXZ;bool cv::ocl::Context::create(void)
?create@Context@ocl@cv@@SA?AV123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::ocl::Context cv::ocl::Context::create(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?create@ConvolutionLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VBaseConvolutionLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BaseConvolutionLayer> cv::dnn::dnn4_v20211004::ConvolutionLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ConvolutionLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VBaseConvolutionLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BaseConvolutionLayer> cv::dnn::dnn4_v20211004::ConvolutionLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@CorrelationLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VCorrelationLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::CorrelationLayer> cv::dnn::dnn4_v20211004::CorrelationLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@CropAndResizeLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::CropAndResizeLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@CropLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::CropLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@CumSumLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VCumSumLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::CumSumLayer> cv::dnn::dnn4_v20211004::CumSumLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@CylindricalWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::CylindricalWarper::create(float)
?create@DCT2D@hal@cv@@SA?AU?$Ptr@UDCT2D@hal@cv@@@3@HHHH@Z;struct cv::Ptr<struct cv::hal::DCT2D> cv::hal::DCT2D::create(int,int,int,int)
?create@DFT1D@hal@cv@@SA?AU?$Ptr@UDFT1D@hal@cv@@@3@HHHHPEA_N@Z;struct cv::Ptr<struct cv::hal::DFT1D> cv::hal::DFT1D::create(int,int,int,int,bool *)
?create@DFT2D@hal@cv@@SA?AU?$Ptr@UDFT2D@hal@cv@@@3@HHHHHHH@Z;struct cv::Ptr<struct cv::hal::DFT2D> cv::hal::DFT2D::create(int,int,int,int,int,int,int)
?create@DISOpticalFlow@cv@@SA?AU?$Ptr@VDISOpticalFlow@cv@@@2@H@Z;struct cv::Ptr<class cv::DISOpticalFlow> cv::DISOpticalFlow::create(int)
?create@DTrees@ml@cv@@SA?AU?$Ptr@VDTrees@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::DTrees> cv::ml::DTrees::create(void)
?create@DataAugmentationLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VDataAugmentationLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::DataAugmentationLayer> cv::dnn::dnn4_v20211004::DataAugmentationLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@DeconvolutionLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VBaseConvolutionLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BaseConvolutionLayer> cv::dnn::dnn4_v20211004::DeconvolutionLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@DequantizeLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VDequantizeLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::DequantizeLayer> cv::dnn::dnn4_v20211004::DequantizeLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@DescriptorMatcher@cv@@SA?AU?$Ptr@VDescriptorMatcher@cv@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::Ptr<class cv::DescriptorMatcher> cv::DescriptorMatcher::create(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?create@DescriptorMatcher@cv@@SA?AU?$Ptr@VDescriptorMatcher@cv@@@2@AEBW4MatcherType@12@@Z;struct cv::Ptr<class cv::DescriptorMatcher> cv::DescriptorMatcher::create(enum cv::DescriptorMatcher::MatcherType const &)
?create@DetectionOutputLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VDetectionOutputLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::DetectionOutputLayer> cv::dnn::dnn4_v20211004::DetectionOutputLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@DownhillSolver@cv@@SA?AU?$Ptr@VDownhillSolver@cv@@@2@AEBU?$Ptr@VFunction@MinProblemSolver@cv@@@2@AEBV_InputArray@2@VTermCriteria@2@@Z;struct cv::Ptr<class cv::DownhillSolver> cv::DownhillSolver::create(struct cv::Ptr<class cv::MinProblemSolver::Function> const &,class cv::_InputArray const &,class cv::TermCriteria)
?create@ELULayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VELULayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ELULayer> cv::dnn::dnn4_v20211004::ELULayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@EM@ml@cv@@SA?AU?$Ptr@VEM@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::EM> cv::ml::EM::create(void)
?create@EltwiseLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VEltwiseLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::EltwiseLayer> cv::dnn::dnn4_v20211004::EltwiseLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@EltwiseLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VEltwiseLayerInt8@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::EltwiseLayerInt8> cv::dnn::dnn4_v20211004::EltwiseLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ExpLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VExpLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ExpLayer> cv::dnn::dnn4_v20211004::ExpLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@FaceDetectorYN@cv@@SA?AU?$Ptr@VFaceDetectorYN@cv@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEBV?$Size_@H@2@MMHHH@Z;struct cv::Ptr<class cv::FaceDetectorYN> cv::FaceDetectorYN::create(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Size_<int> const &,float,float,int,int,int)
?create@FaceRecognizerSF@cv@@SA?AU?$Ptr@VFaceRecognizerSF@cv@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0HH@Z;struct cv::Ptr<class cv::FaceRecognizerSF> cv::FaceRecognizerSF::create(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int)
?create@FarnebackOpticalFlow@cv@@SA?AU?$Ptr@VFarnebackOpticalFlow@cv@@@2@HN_NHHHNH@Z;struct cv::Ptr<class cv::FarnebackOpticalFlow> cv::FarnebackOpticalFlow::create(int,double,bool,int,int,int,double,int)
?create@FastFeatureDetector@cv@@SA?AU?$Ptr@VFastFeatureDetector@cv@@@2@H_NW4DetectorType@12@@Z;struct cv::Ptr<class cv::FastFeatureDetector> cv::FastFeatureDetector::create(int,bool,enum cv::FastFeatureDetector::DetectorType)
?create@Filter2D@hal@cv@@SA?AU?$Ptr@UFilter2D@hal@cv@@@3@PEAE_KHHHHHHHHNHH_N2@Z;struct cv::Ptr<struct cv::hal::Filter2D> cv::hal::Filter2D::create(unsigned char *,unsigned __int64,int,int,int,int,int,int,int,int,double,int,int,bool,bool)
?create@FisheyeWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::FisheyeWarper::create(float)
?create@FlannBasedMatcher@cv@@SA?AU?$Ptr@VFlannBasedMatcher@cv@@@2@XZ;struct cv::Ptr<class cv::FlannBasedMatcher> cv::FlannBasedMatcher::create(void)
?create@FlattenLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VFlattenLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::FlattenLayer> cv::dnn::dnn4_v20211004::FlattenLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@FlowWarpLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VFlowWarpLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::FlowWarpLayer> cv::dnn::dnn4_v20211004::FlowWarpLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@GFTTDetector@cv@@SA?AU?$Ptr@VGFTTDetector@cv@@@2@HNNHH_NN@Z;struct cv::Ptr<class cv::GFTTDetector> cv::GFTTDetector::create(int,double,double,int,int,bool,double)
?create@GFTTDetector@cv@@SA?AU?$Ptr@VGFTTDetector@cv@@@2@HNNH_NN@Z;struct cv::Ptr<class cv::GFTTDetector> cv::GFTTDetector::create(int,double,double,int,bool,double)
?create@GRULayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VGRULayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::GRULayer> cv::dnn::dnn4_v20211004::GRULayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@GpuMat@cuda@cv@@QEAAXHHH@Z;void cv::cuda::GpuMat::create(int,int,int)
?create@GpuMat@cuda@cv@@QEAAXV?$Size_@H@3@H@Z;void cv::cuda::GpuMat::create(class cv::Size_<int>,int)
?create@GpuMatND@cuda@cv@@QEAAXV?$vector@HV?$allocator@H@std@@@std@@H@Z;void cv::cuda::GpuMatND::create(class std::vector<int,class std::allocator<int> >,int)
?create@Graph@detail@cv@@QEAAXH@Z;void cv::detail::Graph::create(int)
?create@HostMem@cuda@cv@@QEAAXHHH@Z;void cv::cuda::HostMem::create(int,int,int)
?create@HostMem@cuda@cv@@QEAAXV?$Size_@H@3@H@Z;void cv::cuda::HostMem::create(class cv::Size_<int>,int)
?create@InnerProductLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VInnerProductLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::InnerProductLayer> cv::dnn::dnn4_v20211004::InnerProductLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@InnerProductLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VInnerProductLayerInt8@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::InnerProductLayerInt8> cv::dnn::dnn4_v20211004::InnerProductLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@InterpLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::InterpLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@KAZE@cv@@SA?AU?$Ptr@VKAZE@cv@@@2@_N0MHHW4DiffusivityType@12@@Z;struct cv::Ptr<class cv::KAZE> cv::KAZE::create(bool,bool,float,int,int,enum cv::KAZE::DiffusivityType)
?create@KNearest@ml@cv@@SA?AU?$Ptr@VKNearest@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::KNearest> cv::ml::KNearest::create(void)
?create@Kernel@ocl@cv@@QEAA_NPEBDAEBVProgram@23@@Z;bool cv::ocl::Kernel::create(char const *,class cv::ocl::Program const &)
?create@Kernel@ocl@cv@@QEAA_NPEBDAEBVProgramSource@23@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV56@@Z;bool cv::ocl::Kernel::create(char const *,class cv::ocl::ProgramSource const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
?create@LMSolver@cv@@SA?AU?$Ptr@VLMSolver@cv@@@2@AEBU?$Ptr@VCallback@LMSolver@cv@@@2@H@Z;struct cv::Ptr<class cv::LMSolver> cv::LMSolver::create(struct cv::Ptr<class cv::LMSolver::Callback> const &,int)
?create@LMSolver@cv@@SA?AU?$Ptr@VLMSolver@cv@@@2@AEBU?$Ptr@VCallback@LMSolver@cv@@@2@HN@Z;struct cv::Ptr<class cv::LMSolver> cv::LMSolver::create(struct cv::Ptr<class cv::LMSolver::Callback> const &,int,double)
?create@LRNLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLRNLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::LRNLayer> cv::dnn::dnn4_v20211004::LRNLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@LSTMLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLSTMLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::LSTMLayer> cv::dnn::dnn4_v20211004::LSTMLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@LogisticRegression@ml@cv@@SA?AU?$Ptr@VLogisticRegression@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::LogisticRegression> cv::ml::LogisticRegression::create(void)
?create@MSER@cv@@SA?AU?$Ptr@VMSER@cv@@@2@HHHNNHNNH@Z;struct cv::Ptr<class cv::MSER> cv::MSER::create(int,int,int,double,double,int,double,double,int)
?create@MVNLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VMVNLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::MVNLayer> cv::dnn::dnn4_v20211004::MVNLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@Mat@cv@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@H@Z;void cv::Mat::create(class std::vector<int,class std::allocator<int> > const &,int)
?create@Mat@cv@@QEAAXHHH@Z;void cv::Mat::create(int,int,int)
?create@Mat@cv@@QEAAXHPEBHH@Z;void cv::Mat::create(int,int const *,int)
?create@Mat@cv@@QEAAXV?$Size_@H@2@H@Z;void cv::Mat::create(class cv::Size_<int>,int)
?create@MaxUnpoolLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VMaxUnpoolLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::MaxUnpoolLayer> cv::dnn::dnn4_v20211004::MaxUnpoolLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@MercatorWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::MercatorWarper::create(float)
?create@MishLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VMishLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::MishLayer> cv::dnn::dnn4_v20211004::MishLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@Morph@hal@cv@@SA?AU?$Ptr@UMorph@hal@cv@@@3@HHHHHHPEAE_KHHHHHPEBNH_N3@Z;struct cv::Ptr<struct cv::hal::Morph> cv::hal::Morph::create(int,int,int,int,int,int,unsigned char *,unsigned __int64,int,int,int,int,int,double const *,int,bool,bool)
?create@NormalBayesClassifier@ml@cv@@SA?AU?$Ptr@VNormalBayesClassifier@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::NormalBayesClassifier> cv::ml::NormalBayesClassifier::create(void)
?create@NormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VNormalizeBBoxLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::NormalizeBBoxLayer> cv::dnn::dnn4_v20211004::NormalizeBBoxLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ORB@cv@@SA?AU?$Ptr@VORB@cv@@@2@HMHHHHW4ScoreType@12@HH@Z;struct cv::Ptr<class cv::ORB> cv::ORB::create(int,float,int,int,int,int,enum cv::ORB::ScoreType,int,int)
?create@OpenCLExecutionContext@ocl@cv@@SA?AV123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX11@Z;class cv::ocl::OpenCLExecutionContext cv::ocl::OpenCLExecutionContext::create(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void *,void *,void *)
?create@OpenCLExecutionContext@ocl@cv@@SA?AV123@AEBVContext@23@AEBVDevice@23@@Z;class cv::ocl::OpenCLExecutionContext cv::ocl::OpenCLExecutionContext::create(class cv::ocl::Context const &,class cv::ocl::Device const &)
?create@OpenCLExecutionContext@ocl@cv@@SA?AV123@AEBVContext@23@AEBVDevice@23@AEBVQueue@23@@Z;class cv::ocl::OpenCLExecutionContext cv::ocl::OpenCLExecutionContext::create(class cv::ocl::Context const &,class cv::ocl::Device const &,class cv::ocl::Queue const &)
?create@PaddingLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VPaddingLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::PaddingLayer> cv::dnn::dnn4_v20211004::PaddingLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@PaniniPortraitWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::PaniniPortraitWarper::create(float)
?create@PaniniWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::PaniniWarper::create(float)
?create@ParamGrid@ml@cv@@SA?AU?$Ptr@VParamGrid@ml@cv@@@3@NNN@Z;struct cv::Ptr<class cv::ml::ParamGrid> cv::ml::ParamGrid::create(double,double,double)
?create@PermuteLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VPermuteLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::PermuteLayer> cv::dnn::dnn4_v20211004::PermuteLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@PlaneWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::PlaneWarper::create(float)
?create@PoolingLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VPoolingLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::PoolingLayer> cv::dnn::dnn4_v20211004::PoolingLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@PoolingLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VPoolingLayerInt8@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::PoolingLayerInt8> cv::dnn::dnn4_v20211004::PoolingLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@PowerLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VPowerLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::PowerLayer> cv::dnn::dnn4_v20211004::PowerLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@PriorBoxLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VPriorBoxLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::PriorBoxLayer> cv::dnn::dnn4_v20211004::PriorBoxLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@Program@ocl@cv@@QEAA_NAEBVProgramSource@23@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV56@@Z;bool cv::ocl::Program::create(class cv::ocl::ProgramSource const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
?create@ProposalLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VProposalLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ProposalLayer> cv::dnn::dnn4_v20211004::ProposalLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@QuantizeLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VQuantizeLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::QuantizeLayer> cv::dnn::dnn4_v20211004::QuantizeLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@Queue@ocl@cv@@QEAA_NAEBVContext@23@AEBVDevice@23@@Z;bool cv::ocl::Queue::create(class cv::ocl::Context const &,class cv::ocl::Device const &)
?create@RNNLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VRNNLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::RNNLayer> cv::dnn::dnn4_v20211004::RNNLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@RTrees@ml@cv@@SA?AU?$Ptr@VRTrees@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::RTrees> cv::ml::RTrees::create(void)
?create@ReLU6Layer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VReLU6Layer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ReLU6Layer> cv::dnn::dnn4_v20211004::ReLU6Layer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ReLULayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VReLULayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ReLULayer> cv::dnn::dnn4_v20211004::ReLULayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@RegionLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VRegionLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::RegionLayer> cv::dnn::dnn4_v20211004::RegionLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ReorgLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VReorgLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ReorgLayer> cv::dnn::dnn4_v20211004::ReorgLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@RequantizeLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VRequantizeLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::RequantizeLayer> cv::dnn::dnn4_v20211004::RequantizeLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ReshapeLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VReshapeLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ReshapeLayer> cv::dnn::dnn4_v20211004::ReshapeLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ResizeLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VResizeLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ResizeLayer> cv::dnn::dnn4_v20211004::ResizeLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@SIFT@cv@@SA?AU?$Ptr@VSIFT@cv@@@2@HHNNN@Z;struct cv::Ptr<class cv::SIFT> cv::SIFT::create(int,int,double,double,double)
?create@SIFT@cv@@SA?AU?$Ptr@VSIFT@cv@@@2@HHNNNH@Z;struct cv::Ptr<class cv::SIFT> cv::SIFT::create(int,int,double,double,double,int)
?create@SVM@ml@cv@@SA?AU?$Ptr@VSVM@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::SVM> cv::ml::SVM::create(void)
?create@SVMSGD@ml@cv@@SA?AU?$Ptr@VSVMSGD@ml@cv@@@3@XZ;struct cv::Ptr<class cv::ml::SVMSGD> cv::ml::SVMSGD::create(void)
?create@ScaleLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VScaleLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ScaleLayer> cv::dnn::dnn4_v20211004::ScaleLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ScaleLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VScaleLayerInt8@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::ScaleLayerInt8> cv::dnn::dnn4_v20211004::ScaleLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@SepFilter2D@hal@cv@@SA?AU?$Ptr@USepFilter2D@hal@cv@@@3@HHHPEAEH0HHHNH@Z;struct cv::Ptr<struct cv::hal::SepFilter2D> cv::hal::SepFilter2D::create(int,int,int,unsigned char *,int,unsigned char *,int,int,int,double,int)
?create@ShiftLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::ShiftLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ShiftLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::ShiftLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@ShuffleChannelLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::ShuffleChannelLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@SigmoidLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VSigmoidLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::SigmoidLayer> cv::dnn::dnn4_v20211004::SigmoidLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@SimpleBlobDetector@cv@@SA?AU?$Ptr@VSimpleBlobDetector@cv@@@2@AEBUParams@12@@Z;struct cv::Ptr<class cv::SimpleBlobDetector> cv::SimpleBlobDetector::create(struct cv::SimpleBlobDetector::Params const &)
?create@SliceLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VSliceLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::SliceLayer> cv::dnn::dnn4_v20211004::SliceLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@SoftmaxLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VSoftmaxLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::SoftmaxLayer> cv::dnn::dnn4_v20211004::SoftmaxLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@SoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VSoftmaxLayerInt8@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::SoftmaxLayerInt8> cv::dnn::dnn4_v20211004::SoftmaxLayerInt8::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@SparseMat@cv@@QEAAXHPEBHH@Z;void cv::SparseMat::create(int,int const *,int)
?create@SparsePyrLKOpticalFlow@cv@@SA?AU?$Ptr@VSparsePyrLKOpticalFlow@cv@@@2@V?$Size_@H@2@HVTermCriteria@2@HN@Z;struct cv::Ptr<class cv::SparsePyrLKOpticalFlow> cv::SparsePyrLKOpticalFlow::create(class cv::Size_<int>,int,class cv::TermCriteria,int,double)
?create@SphericalWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::SphericalWarper::create(float)
?create@SplitLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VSplitLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::SplitLayer> cv::dnn::dnn4_v20211004::SplitLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@StereoBM@cv@@SA?AU?$Ptr@VStereoBM@cv@@@2@HH@Z;struct cv::Ptr<class cv::StereoBM> cv::StereoBM::create(int,int)
?create@StereoSGBM@cv@@SA?AU?$Ptr@VStereoSGBM@cv@@@2@HHHHHHHHHHH@Z;struct cv::Ptr<class cv::StereoSGBM> cv::StereoSGBM::create(int,int,int,int,int,int,int,int,int,int,int)
?create@StereographicWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::StereographicWarper::create(float)
?create@Stitcher@cv@@SA?AU?$Ptr@VStitcher@cv@@@2@W4Mode@12@@Z;struct cv::Ptr<class cv::Stitcher> cv::Stitcher::create(enum cv::Stitcher::Mode)
?create@SwishLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VSwishLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::SwishLayer> cv::dnn::dnn4_v20211004::SwishLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@TanHLayer@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VTanHLayer@dnn4_v20211004@dnn@cv@@@4@AEBVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::TanHLayer> cv::dnn::dnn4_v20211004::TanHLayer::create(class cv::dnn::dnn4_v20211004::LayerParams const &)
?create@Texture2D@ogl@cv@@QEAAXHHW4Format@123@_N@Z;void cv::ogl::Texture2D::create(int,int,enum cv::ogl::Texture2D::Format,bool)
?create@Texture2D@ogl@cv@@QEAAXV?$Size_@H@3@W4Format@123@_N@Z;void cv::ogl::Texture2D::create(class cv::Size_<int>,enum cv::ogl::Texture2D::Format,bool)
?create@TrackerDaSiamRPN@cv@@SA?AU?$Ptr@VTrackerDaSiamRPN@cv@@@2@AEBUParams@12@@Z;struct cv::Ptr<class cv::TrackerDaSiamRPN> cv::TrackerDaSiamRPN::create(struct cv::TrackerDaSiamRPN::Params const &)
?create@TrackerGOTURN@cv@@SA?AU?$Ptr@VTrackerGOTURN@cv@@@2@AEBUParams@12@@Z;struct cv::Ptr<class cv::TrackerGOTURN> cv::TrackerGOTURN::create(struct cv::TrackerGOTURN::Params const &)
?create@TrackerMIL@cv@@SA?AU?$Ptr@VTrackerMIL@cv@@@2@AEBUParams@12@@Z;struct cv::Ptr<class cv::TrackerMIL> cv::TrackerMIL::create(struct cv::TrackerMIL::Params const &)
?create@TrainData@ml@cv@@SA?AU?$Ptr@VTrainData@ml@cv@@@3@AEBV_InputArray@3@H00000@Z;struct cv::Ptr<class cv::ml::TrainData> cv::ml::TrainData::create(class cv::_InputArray const &,int,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?create@TransverseMercatorWarper@cv@@UEBA?AU?$Ptr@VRotationWarper@detail@cv@@@2@M@Z;struct cv::Ptr<class cv::detail::RotationWarper> cv::TransverseMercatorWarper::create(float)
?create@UMat@cv@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@HW4UMatUsageFlags@2@@Z;void cv::UMat::create(class std::vector<int,class std::allocator<int> > const &,int,enum cv::UMatUsageFlags)
?create@UMat@cv@@QEAAXHHHW4UMatUsageFlags@2@@Z;void cv::UMat::create(int,int,int,enum cv::UMatUsageFlags)
?create@UMat@cv@@QEAAXHPEBHHW4UMatUsageFlags@2@@Z;void cv::UMat::create(int,int const *,int,enum cv::UMatUsageFlags)
?create@UMat@cv@@QEAAXV?$Size_@H@2@HW4UMatUsageFlags@2@@Z;void cv::UMat::create(class cv::Size_<int>,int,enum cv::UMatUsageFlags)
?create@VariationalRefinement@cv@@SA?AU?$Ptr@VVariationalRefinement@cv@@@2@XZ;struct cv::Ptr<class cv::VariationalRefinement> cv::VariationalRefinement::create(void)
?create@_OutputArray@cv@@QEBAXHHHH_NW4DepthMask@12@@Z;void cv::_OutputArray::create(int,int,int,int,bool,enum cv::_OutputArray::DepthMask)
?create@_OutputArray@cv@@QEBAXHPEBHHH_NW4DepthMask@12@@Z;void cv::_OutputArray::create(int,int const *,int,int,bool,enum cv::_OutputArray::DepthMask)
?create@_OutputArray@cv@@QEBAXV?$Size_@H@2@HH_NW4DepthMask@12@@Z;void cv::_OutputArray::create(class cv::Size_<int>,int,int,bool,enum cv::_OutputArray::DepthMask)
?createAlignMTB@cv@@YA?AU?$Ptr@VAlignMTB@cv@@@1@HH_N@Z;struct cv::Ptr<class cv::AlignMTB> cv::createAlignMTB(int,int,bool)
?createBackgroundSubtractorKNN@cv@@YA?AU?$Ptr@VBackgroundSubtractorKNN@cv@@@1@HN_N@Z;struct cv::Ptr<class cv::BackgroundSubtractorKNN> cv::createBackgroundSubtractorKNN(int,double,bool)
?createBackgroundSubtractorMOG2@cv@@YA?AU?$Ptr@VBackgroundSubtractorMOG2@cv@@@1@HN_N@Z;struct cv::Ptr<class cv::BackgroundSubtractorMOG2> cv::createBackgroundSubtractorMOG2(int,double,bool)
?createButton@cv@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6AXHPEAX@Z1H_N@Z;int cv::createButton(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void (*)(int,void *),void *,int,bool)
?createCLAHE@cv@@YA?AU?$Ptr@VCLAHE@cv@@@1@NV?$Size_@H@1@@Z;struct cv::Ptr<class cv::CLAHE> cv::createCLAHE(double,class cv::Size_<int>)
?createCalibrateDebevec@cv@@YA?AU?$Ptr@VCalibrateDebevec@cv@@@1@HM_N@Z;struct cv::Ptr<class cv::CalibrateDebevec> cv::createCalibrateDebevec(int,float,bool)
?createCalibrateRobertson@cv@@YA?AU?$Ptr@VCalibrateRobertson@cv@@@1@HM@Z;struct cv::Ptr<class cv::CalibrateRobertson> cv::createCalibrateRobertson(int,float)
?createConcentricSpheresTestSet@ml@cv@@YAXHHHAEBV_OutputArray@2@0@Z;void cv::ml::createConcentricSpheresTestSet(int,int,int,class cv::_OutputArray const &,class cv::_OutputArray const &)
?createContinuous@cuda@cv@@YAXHHHAEBV_OutputArray@2@@Z;void cv::cuda::createContinuous(int,int,int,class cv::_OutputArray const &)
?createDefault@Blender@detail@cv@@SA?AU?$Ptr@VBlender@detail@cv@@@3@H_N@Z;struct cv::Ptr<class cv::detail::Blender> cv::detail::Blender::createDefault(int,bool)
?createDefault@ExposureCompensator@detail@cv@@SA?AU?$Ptr@VExposureCompensator@detail@cv@@@3@H@Z;struct cv::Ptr<class cv::detail::ExposureCompensator> cv::detail::ExposureCompensator::createDefault(int)
?createDefault@SeamFinder@detail@cv@@SA?AU?$Ptr@VSeamFinder@detail@cv@@@3@H@Z;struct cv::Ptr<class cv::detail::SeamFinder> cv::detail::SeamFinder::createDefault(int)
?createDefault@Timelapser@detail@cv@@SA?AU?$Ptr@VTimelapser@detail@cv@@@3@H@Z;struct cv::Ptr<class cv::detail::Timelapser> cv::detail::Timelapser::createDefault(int)
?createDirectories@fs@utils@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::utils::fs::createDirectories(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?createDirectory@fs@utils@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::utils::fs::createDirectory(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?createFaceDetectionMaskGenerator@cv@@YA?AU?$Ptr@VMaskGenerator@BaseCascadeClassifier@cv@@@1@XZ;struct cv::Ptr<class cv::BaseCascadeClassifier::MaskGenerator> cv::createFaceDetectionMaskGenerator(void)
?createGeneralizedHoughBallard@cv@@YA?AU?$Ptr@VGeneralizedHoughBallard@cv@@@1@XZ;struct cv::Ptr<class cv::GeneralizedHoughBallard> cv::createGeneralizedHoughBallard(void)
?createGeneralizedHoughGuil@cv@@YA?AU?$Ptr@VGeneralizedHoughGuil@cv@@@1@XZ;struct cv::Ptr<class cv::GeneralizedHoughGuil> cv::createGeneralizedHoughGuil(void)
?createGpuMatHeader@GpuMatND@cuda@cv@@QEBA?AVGpuMat@23@V?$vector@HV?$allocator@H@std@@@std@@VRange@3@1@Z;class cv::cuda::GpuMat cv::cuda::GpuMatND::createGpuMatHeader(class std::vector<int,class std::allocator<int> >,class cv::Range,class cv::Range)
?createGpuMatHeader@GpuMatND@cuda@cv@@QEBA?AVGpuMat@23@XZ;class cv::cuda::GpuMat cv::cuda::GpuMatND::createGpuMatHeader(void)
?createGpuMatHeader@HostMem@cuda@cv@@QEBA?AVGpuMat@23@XZ;class cv::cuda::GpuMat cv::cuda::HostMem::createGpuMatHeader(void)
?createHanningWindow@cv@@YAXAEBV_OutputArray@1@V?$Size_@H@1@H@Z;void cv::createHanningWindow(class cv::_OutputArray const &,class cv::Size_<int>,int)
?createLMeDSPointSetRegistrator@cv@@YA?AU?$Ptr@VPointSetRegistrator@cv@@@1@AEBU?$Ptr@VCallback@PointSetRegistrator@cv@@@1@HNH@Z;struct cv::Ptr<class cv::PointSetRegistrator> cv::createLMeDSPointSetRegistrator(struct cv::Ptr<class cv::PointSetRegistrator::Callback> const &,int,double,int)
?createLaplacePyr@detail@cv@@YAXAEBV_InputArray@2@HAEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;void cv::detail::createLaplacePyr(class cv::_InputArray const &,int,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?createLaplacePyrGpu@detail@cv@@YAXAEBV_InputArray@2@HAEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;void cv::detail::createLaplacePyrGpu(class cv::_InputArray const &,int,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?createLayerInstance@LayerFactory@dnn4_v20211004@dnn@cv@@SA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVLayerParams@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::LayerFactory::createLayerInstance(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::dnn::dnn4_v20211004::LayerParams &)
?createLineSegmentDetector@cv@@YA?AU?$Ptr@VLineSegmentDetector@cv@@@1@HNNNNNNH@Z;struct cv::Ptr<class cv::LineSegmentDetector> cv::createLineSegmentDetector(int,double,double,double,double,double,double,int)
?createMat@gimpl@cv@@YAXAEBUGMatDesc@2@AEAVMat@2@@Z;void cv::gimpl::createMat(struct cv::GMatDesc const &,class cv::Mat &)
?createMatHeader@HostMem@cuda@cv@@QEBA?AVMat@3@XZ;class cv::Mat cv::cuda::HostMem::createMatHeader(void)
?createMergeDebevec@cv@@YA?AU?$Ptr@VMergeDebevec@cv@@@1@XZ;struct cv::Ptr<class cv::MergeDebevec> cv::createMergeDebevec(void)
?createMergeMertens@cv@@YA?AU?$Ptr@VMergeMertens@cv@@@1@MMM@Z;struct cv::Ptr<class cv::MergeMertens> cv::createMergeMertens(float,float,float)
?createMergeRobertson@cv@@YA?AU?$Ptr@VMergeRobertson@cv@@@1@XZ;struct cv::Ptr<class cv::MergeRobertson> cv::createMergeRobertson(void)
?createMorphologyFilter@cv@@YA?AU?$Ptr@VFilterEngine@cv@@@1@HHAEBV_InputArray@1@V?$Point_@H@1@HHAEBV?$Scalar_@N@1@@Z;struct cv::Ptr<class cv::FilterEngine> cv::createMorphologyFilter(int,int,class cv::_InputArray const &,class cv::Point_<int>,int,int,class cv::Scalar_<double> const &)
?createOneElemSets@DisjointSets@detail@cv@@QEAAXH@Z;void cv::detail::DisjointSets::createOneElemSets(int)
?createRANSACPointSetRegistrator@cv@@YA?AU?$Ptr@VPointSetRegistrator@cv@@@1@AEBU?$Ptr@VCallback@PointSetRegistrator@cv@@@1@HNNH@Z;struct cv::Ptr<class cv::PointSetRegistrator> cv::createRANSACPointSetRegistrator(struct cv::Ptr<class cv::PointSetRegistrator::Callback> const &,int,double,double,int)
?createSameSize@_OutputArray@cv@@QEBAXAEBV_InputArray@2@H@Z;void cv::_OutputArray::createSameSize(class cv::_InputArray const &,int)
?createTonemap@cv@@YA?AU?$Ptr@VTonemap@cv@@@1@M@Z;struct cv::Ptr<class cv::Tonemap> cv::createTonemap(float)
?createTonemapDrago@cv@@YA?AU?$Ptr@VTonemapDrago@cv@@@1@MMM@Z;struct cv::Ptr<class cv::TonemapDrago> cv::createTonemapDrago(float,float,float)
?createTonemapMantiuk@cv@@YA?AU?$Ptr@VTonemapMantiuk@cv@@@1@MMM@Z;struct cv::Ptr<class cv::TonemapMantiuk> cv::createTonemapMantiuk(float,float,float)
?createTonemapReinhard@cv@@YA?AU?$Ptr@VTonemapReinhard@cv@@@1@MMMM@Z;struct cv::Ptr<class cv::TonemapReinhard> cv::createTonemapReinhard(float,float,float,float)
?createTrackbar@cv@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PEAHHP6AXHPEAX@Z2@Z;int cv::createTrackbar(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int *,int,void (*)(int,void *),void *)
?createWeightMap@detail@cv@@YAXAEBV_InputArray@2@MAEBV_InputOutputArray@2@@Z;void cv::detail::createWeightMap(class cv::_InputArray const &,float,class cv::_InputOutputArray const &)
?createWeightMaps@FeatherBlender@detail@cv@@QEAA?AV?$Rect_@H@3@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@6@AEAV56@@Z;class cv::Rect_<int> cv::detail::FeatherBlender::createWeightMaps(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?crop@gapi@cv@@YA?AVGMat@2@AEBV32@AEBV?$Rect_@H@2@@Z;class cv::GMat cv::gapi::crop(class cv::GMat const &,class cv::Rect_<int> const &)
?cross@Mat@cv@@QEBA?AV12@AEBV_InputArray@2@@Z;class cv::Mat cv::Mat::cross(class cv::_InputArray const &)
?cross@MatExpr@cv@@QEBA?AVMat@2@AEBV32@@Z;class cv::Mat cv::MatExpr::cross(class cv::Mat const &)
?cubeRoot@cv@@YAMM@Z;float cv::cubeRoot(float)
?cudaPtr@GpuMat@cuda@cv@@QEBAPEAXXZ;void * cv::cuda::GpuMat::cudaPtr(void)
?cudaPtr@Stream@cuda@cv@@QEBAPEAXXZ;void * cv::cuda::Stream::cudaPtr(void)
?currentParallelFramework@cv@@YAPEBDXZ;char const * cv::currentParallelFramework(void)
?cvCeil@@YAHAEBUsoftdouble@cv@@@Z;int cvCeil(struct cv::softdouble const &)
?cvCeil@@YAHAEBUsoftfloat@cv@@@Z;int cvCeil(struct cv::softfloat const &)
?cvCreateSparseMat@@YAPEAUCvSparseMat@@AEBVSparseMat@cv@@@Z;struct CvSparseMat * cvCreateSparseMat(class cv::SparseMat const &)
?cvFloor@@YAHAEBUsoftdouble@cv@@@Z;int cvFloor(struct cv::softdouble const &)
?cvFloor@@YAHAEBUsoftfloat@cv@@@Z;int cvFloor(struct cv::softfloat const &)
?cvIplImage@@YA?AU_IplImage@@AEBVMat@cv@@@Z;struct _IplImage cvIplImage(class cv::Mat const &)
?cvMatND@@YA?AUCvMatND@@AEBVMat@cv@@@Z;struct CvMatND cvMatND(class cv::Mat const &)
?cvRound64@@YA_JAEBUsoftdouble@cv@@@Z;__int64 cvRound64(struct cv::softdouble const &)
?cvRound@@YAHAEBUsoftdouble@cv@@@Z;int cvRound(struct cv::softdouble const &)
?cvRound@@YAHAEBUsoftfloat@cv@@@Z;int cvRound(struct cv::softfloat const &)
?cvTrunc@@YAHAEBUsoftdouble@cv@@@Z;int cvTrunc(struct cv::softdouble const &)
?cvTrunc@@YAHAEBUsoftfloat@cv@@@Z;int cvTrunc(struct cv::softfloat const &)
?cvarrToMat@cv@@YA?AVMat@1@PEBX_N1HPEAV?$AutoBuffer@N$0II@@1@@Z;class cv::Mat cv::cvarrToMat(void const *,bool,bool,int,class cv::AutoBuffer<double,136> *)
?cvt16f32f@hal@cv@@YAXPEBVfloat16_t@2@PEAMH@Z;void cv::hal::cvt16f32f(class cv::float16_t const *,float *,int)
?cvt32f16f@hal@cv@@YAXPEBMPEAVfloat16_t@2@H@Z;void cv::hal::cvt32f16f(float const *,class cv::float16_t *,int)
?cvtBGR5x5toBGR@hal@cv@@YAXPEBE_KPEAE1HHH_NH@Z;void cv::hal::cvtBGR5x5toBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtBGR5x5toGray@hal@cv@@YAXPEBE_KPEAE1HHH@Z;void cv::hal::cvtBGR5x5toGray(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
?cvtBGRtoBGR5x5@hal@cv@@YAXPEBE_KPEAE1HHH_NH@Z;void cv::hal::cvtBGRtoBGR5x5(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtBGRtoBGR@hal@cv@@YAXPEBE_KPEAE1HHHHH_N@Z;void cv::hal::cvtBGRtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,int,bool)
?cvtBGRtoGray@hal@cv@@YAXPEBE_KPEAE1HHHH_N@Z;void cv::hal::cvtBGRtoGray(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
?cvtBGRtoHSV@hal@cv@@YAXPEBE_KPEAE1HHHH_N33@Z;void cv::hal::cvtBGRtoHSV(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
?cvtBGRtoLab@hal@cv@@YAXPEBE_KPEAE1HHHH_N33@Z;void cv::hal::cvtBGRtoLab(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
?cvtBGRtoThreePlaneYUV@hal@cv@@YAXPEBE_KPEAE1HHH_NH@Z;void cv::hal::cvtBGRtoThreePlaneYUV(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtBGRtoTwoPlaneYUV@hal@cv@@YAXPEBE_KPEAE21HHH_NH@Z;void cv::hal::cvtBGRtoTwoPlaneYUV(unsigned char const *,unsigned __int64,unsigned char *,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtBGRtoXYZ@hal@cv@@YAXPEBE_KPEAE1HHHH_N@Z;void cv::hal::cvtBGRtoXYZ(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
?cvtBGRtoYUV@hal@cv@@YAXPEBE_KPEAE1HHHH_N3@Z;void cv::hal::cvtBGRtoYUV(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
?cvtColor@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HH@Z;void cv::cvtColor(class cv::_InputArray const &,class cv::_OutputArray const &,int,int)
?cvtColorTwoPlane@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@H@Z;void cv::cvtColorTwoPlane(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int)
?cvtGraytoBGR5x5@hal@cv@@YAXPEBE_KPEAE1HHH@Z;void cv::hal::cvtGraytoBGR5x5(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
?cvtGraytoBGR@hal@cv@@YAXPEBE_KPEAE1HHHH@Z;void cv::hal::cvtGraytoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int)
?cvtHSVtoBGR@hal@cv@@YAXPEBE_KPEAE1HHHH_N33@Z;void cv::hal::cvtHSVtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
?cvtLabtoBGR@hal@cv@@YAXPEBE_KPEAE1HHHH_N33@Z;void cv::hal::cvtLabtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
?cvtMultipliedRGBAtoRGBA@hal@cv@@YAXPEBE_KPEAE1HH@Z;void cv::hal::cvtMultipliedRGBAtoRGBA(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
?cvtNV12ToYUV@draw@wip@gapi@cv@@YAXAEBVMat@4@0AEAV54@@Z;void cv::gapi::wip::draw::cvtNV12ToYUV(class cv::Mat const &,class cv::Mat const &,class cv::Mat &)
?cvtOnePlaneYUVtoBGR@hal@cv@@YAXPEBE_KPEAE1HHH_NHH@Z;void cv::hal::cvtOnePlaneYUVtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int,int)
?cvtRGBAtoMultipliedRGBA@hal@cv@@YAXPEBE_KPEAE1HH@Z;void cv::hal::cvtRGBAtoMultipliedRGBA(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
?cvtThreePlaneYUVtoBGR@hal@cv@@YAXPEBE_KPEAE1HHH_NH@Z;void cv::hal::cvtThreePlaneYUVtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtTwoPlaneYUVtoBGR@hal@cv@@YAXPEBE0_KPEAE1HHH_NH@Z;void cv::hal::cvtTwoPlaneYUVtoBGR(unsigned char const *,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtTwoPlaneYUVtoBGR@hal@cv@@YAXPEBE_K01PEAE1HHH_NH@Z;void cv::hal::cvtTwoPlaneYUVtoBGR(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtTwoPlaneYUVtoBGR@hal@cv@@YAXPEBE_KPEAE1HHH_NH@Z;void cv::hal::cvtTwoPlaneYUVtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
?cvtXYZtoBGR@hal@cv@@YAXPEBE_KPEAE1HHHH_N@Z;void cv::hal::cvtXYZtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
?cvtYUVToNV12@draw@wip@gapi@cv@@YAXAEBVMat@4@AEAV54@1@Z;void cv::gapi::wip::draw::cvtYUVToNV12(class cv::Mat const &,class cv::Mat &,class cv::Mat &)
?cvtYUVtoBGR@hal@cv@@YAXPEBE_KPEAE1HHHH_N3@Z;void cv::hal::cvtYUVtoBGR(unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
?data@ByteMemoryOutStream@s11n@gapi@cv@@QEBAAEBV?$vector@DV?$allocator@D@std@@@std@@XZ;class std::vector<char,class std::allocator<char> > const & cv::gapi::s11n::ByteMemoryOutStream::data(void)
?dataNodeOf@detail@GModel@gimpl@cv@@YA?AV?$Handle@VNode@ade@@@ade@@AEBV?$ConstTypedGraph@ULayout@gimpl@cv@@@6@AEBUGOrigin@4@@Z;class ade::Handle<class ade::Node> cv::gimpl::GModel::detail::dataNodeOf(class ade::ConstTypedGraph<struct cv::gimpl::Layout> const &,struct cv::GOrigin const &)
?dct@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::dct(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?deallocate@Mat@cv@@QEAAXXZ;void cv::Mat::deallocate(void)
?deallocate@UMat@cv@@QEAAXXZ;void cv::UMat::deallocate(void)
?debug@Buffer@fluid@gapi@cv@@QEBAXAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z;void cv::gapi::fluid::Buffer::debug(class std::basic_ostream<char,struct std::char_traits<char> > &)
?debug@GIsland@gimpl@cv@@QEBAXXZ;void cv::gimpl::GIsland::debug(void)
?decode@QRCodeDetector@cv@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@2@0AEBV_OutputArray@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::QRCodeDetector::decode(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?decodeCurved@QRCodeDetector@cv@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@2@0AEBV_OutputArray@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::QRCodeDetector::decodeCurved(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?decodeMulti@QRCodeDetector@cv@@QEBA_NAEBV_InputArray@2@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV_OutputArray@2@@Z;bool cv::QRCodeDetector::decodeMulti(class cv::_InputArray const &,class cv::_InputArray const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class cv::_OutputArray const &)
?decolor@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1@Z;void cv::decolor(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?decomposeCovs@EMImpl@ml@cv@@QEAAXXZ;void cv::ml::EMImpl::decomposeCovs(void)
?decomposeEssentialMat@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@11@Z;void cv::decomposeEssentialMat(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?decomposeHomographyMat@cv@@YAHAEBV_InputArray@1@0AEBV_OutputArray@1@11@Z;int cv::decomposeHomographyMat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?decomposeProjectionMatrix@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@111111@Z;void cv::decomposeProjectionMatrix(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?defaultAllocator@GpuMat@cuda@cv@@SAPEAVAllocator@123@XZ;class cv::cuda::GpuMat::Allocator * cv::cuda::GpuMat::defaultAllocator(void)
?defaultNorm@Feature2D@cv@@UEBAHXZ;int cv::Feature2D::defaultNorm(void)
?deleteEdge@Subdiv2D@cv@@IEAAXH@Z;void cv::Subdiv2D::deleteEdge(int)
?deletePoint@Subdiv2D@cv@@IEAAXH@Z;void cv::Subdiv2D::deletePoint(int)
?demosaicing@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HH@Z;void cv::demosaicing(class cv::_InputArray const &,class cv::_OutputArray const &,int,int)
?denoise_TVL1@cv@@YAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEAVMat@1@NH@Z;void cv::denoise_TVL1(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class cv::Mat &,double,int)
?depth@Buffer@ogl@cv@@QEBAHXZ;int cv::ogl::Buffer::depth(void)
?depth@GpuMat@cuda@cv@@QEBAHXZ;int cv::cuda::GpuMat::depth(void)
?depth@HostMem@cuda@cv@@QEBAHXZ;int cv::cuda::HostMem::depth(void)
?depth@Mat@cv@@QEBAHXZ;int cv::Mat::depth(void)
?depth@SparseMat@cv@@QEBAHXZ;int cv::SparseMat::depth(void)
?depth@UMat@cv@@QEBAHXZ;int cv::UMat::depth(void)
?depth@View@RMat@cv@@QEBAHXZ;int cv::RMat::View::depth(void)
?depth@_InputArray@cv@@QEBAHH@Z;int cv::_InputArray::depth(int)
?depthToString@cv@@YAPEBDH@Z;char const * cv::depthToString(int)
?depthToString_@detail@cv@@YAPEBDH@Z;char const * cv::detail::depthToString_(int)
?desc@MediaFrame@cv@@QEBA?AUGFrameDesc@2@XZ;struct cv::GFrameDesc cv::MediaFrame::desc(void)
?desc@RMat@cv@@QEBA?AUGMatDesc@2@XZ;struct cv::GMatDesc cv::RMat::desc(void)
?desc@RMatMediaFrameAdapter@gimpl@cv@@UEBA?AUGMatDesc@3@XZ;struct cv::GMatDesc cv::gimpl::RMatMediaFrameAdapter::desc(void)
?descr_of@GSource@onevpl@wip@gapi@cv@@UEBA?AV?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@5@XZ;class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> cv::gapi::wip::onevpl::GSource::descr_of(void)
?descr_of@cv@@YA?AUGFrameDesc@1@AEBVMediaFrame@1@@Z;struct cv::GFrameDesc cv::descr_of(class cv::MediaFrame const &)
?descr_of@cv@@YA?AUGMatDesc@1@AEBVMat@1@@Z;struct cv::GMatDesc cv::descr_of(class cv::Mat const &)
?descr_of@cv@@YA?AUGMatDesc@1@AEBVRMat@1@@Z;struct cv::GMatDesc cv::descr_of(class cv::RMat const &)
?descr_of@cv@@YA?AUGMatDesc@1@AEBVUMat@1@@Z;struct cv::GMatDesc cv::descr_of(class cv::UMat const &)
?descr_of@cv@@YA?AUGScalarDesc@1@AEBV?$Scalar_@N@1@@Z;struct cv::GScalarDesc cv::descr_of(class cv::Scalar_<double> const &)
?descr_of@cv@@YA?AV?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@1@AEBUGRunArg@1@@Z;class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> cv::descr_of(struct cv::GRunArg const &)
?descr_of@cv@@YA?AV?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@1@AEBV?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@31@@Z;class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> cv::descr_of(class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> const &)
?descr_of@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@3@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::descr_of(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > const &)
?descr_of@own@gapi@cv@@YA?AUGMatDesc@3@AEBVMat@123@@Z;struct cv::GMatDesc cv::gapi::own::descr_of(class cv::gapi::own::Mat const &)
?descriptorSize@BOWImgDescriptorExtractor@cv@@QEBAHXZ;int cv::BOWImgDescriptorExtractor::descriptorSize(void)
?descriptorSize@Feature2D@cv@@UEBAHXZ;int cv::Feature2D::descriptorSize(void)
?descriptorType@BOWImgDescriptorExtractor@cv@@QEBAHXZ;int cv::BOWImgDescriptorExtractor::descriptorType(void)
?descriptorType@Feature2D@cv@@UEBAHXZ;int cv::Feature2D::descriptorType(void)
?descriptorsCount@BOWTrainer@cv@@QEBAHXZ;int cv::BOWTrainer::descriptorsCount(void)
?descrs_of@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@3@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::descrs_of(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
?descrs_of@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@3@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::descrs_of(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
?descrs_of@own@gapi@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@VMat@own@gapi@cv@@V?$allocator@VMat@own@gapi@cv@@@std@@@5@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::gapi::own::descrs_of(class std::vector<class cv::gapi::own::Mat,class std::allocator<class cv::gapi::own::Mat> > const &)
?deserialize@IAdapter@MediaFrame@cv@@UEAAXAEAUIIStream@s11n@gapi@3@@Z;void cv::MediaFrame::IAdapter::deserialize(struct cv::gapi::s11n::IIStream &)
?deserialize@s11n@gapi@cv@@YA?AUGSerialized@123@AEAUIIStream@123@@Z;struct cv::gapi::s11n::GSerialized cv::gapi::s11n::deserialize(struct cv::gapi::s11n::IIStream &)
?destroy@Region@details@trace@utils@cv@@QEAAXXZ;void cv::utils::trace::details::Region::destroy(void)
?destroyAllWindows@cv@@YAXXZ;void cv::destroyAllWindows(void)
?destroyWindow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::destroyWindow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?desync@streaming@gapi@cv@@YA?AVGFrame@3@AEBV43@@Z;class cv::GFrame cv::gapi::streaming::desync(class cv::GFrame const &)
?desync@streaming@gapi@cv@@YA?AVGMat@3@AEBV43@@Z;class cv::GMat cv::gapi::streaming::desync(class cv::GMat const &)
?detachData@TLSDataContainer@cv@@IEAAXAEAV?$vector@PEAXV?$allocator@PEAX@std@@@std@@@Z;void cv::TLSDataContainer::detachData(class std::vector<void *,class std::allocator<void *> > &)
?detailEnhance@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@MM@Z;void cv::detailEnhance(class cv::_InputArray const &,class cv::_OutputArray const &,float,float)
?detect@DetectionModel@dnn4_v20211004@dnn@cv@@QEAAXAEBV_InputArray@4@AEAV?$vector@HV?$allocator@H@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@7@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@7@MM@Z;void cv::dnn::dnn4_v20211004::DetectionModel::detect(class cv::_InputArray const &,class std::vector<int,class std::allocator<int> > &,class std::vector<float,class std::allocator<float> > &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,float,float)
?detect@Feature2D@cv@@UEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@V?$allocator@V?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@@2@@std@@0@Z;void cv::Feature2D::detect(class cv::_InputArray const &,class std::vector<class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> >,class std::allocator<class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > > > &,class cv::_InputArray const &)
?detect@Feature2D@cv@@UEAAXAEBV_InputArray@2@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@0@Z;void cv::Feature2D::detect(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::_InputArray const &)
?detect@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEAV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEAV?$vector@NV?$allocator@N@std@@@5@NV?$Size_@H@2@3AEBV45@@Z;void cv::HOGDescriptor::detect(class cv::_InputArray const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > &,class std::vector<double,class std::allocator<double> > &,double,class cv::Size_<int>,class cv::Size_<int>,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &)
?detect@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEAV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@NV?$Size_@H@2@2AEBV45@@Z;void cv::HOGDescriptor::detect(class cv::_InputArray const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > &,double,class cv::Size_<int>,class cv::Size_<int>,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &)
?detect@QRCodeDetector@cv@@QEBA_NAEBV_InputArray@2@AEBV_OutputArray@2@@Z;bool cv::QRCodeDetector::detect(class cv::_InputArray const &,class cv::_OutputArray const &)
?detect@SimpleBlobDetectorImpl@cv@@MEAAXAEBV_InputArray@2@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@0@Z;void cv::SimpleBlobDetectorImpl::detect(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::_InputArray const &)
?detect@TextDetectionModel@dnn4_v20211004@dnn@cv@@QEBAXAEBV_InputArray@4@AEAV?$vector@V?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@V?$allocator@V?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@@2@@std@@@Z;void cv::dnn::dnn4_v20211004::TextDetectionModel::detect(class cv::_InputArray const &,class std::vector<class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > >,class std::allocator<class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > > > &)
?detect@TextDetectionModel@dnn4_v20211004@dnn@cv@@QEBAXAEBV_InputArray@4@AEAV?$vector@V?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@V?$allocator@V?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@@2@@std@@AEAV?$vector@MV?$allocator@M@std@@@7@@Z;void cv::dnn::dnn4_v20211004::TextDetectionModel::detect(class cv::_InputArray const &,class std::vector<class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > >,class std::allocator<class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > > > &,class std::vector<float,class std::allocator<float> > &)
?detectAndCompute@Feature2D@cv@@UEAAXAEBV_InputArray@2@0AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@AEBV_OutputArray@2@_N@Z;void cv::Feature2D::detectAndCompute(class cv::_InputArray const &,class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::_OutputArray const &,bool)
?detectAndDecode@QRCodeDetector@cv@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@2@AEBV_OutputArray@2@1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::QRCodeDetector::detectAndDecode(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?detectAndDecodeCurved@QRCodeDetector@cv@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@2@AEBV_OutputArray@2@1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::QRCodeDetector::detectAndDecodeCurved(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?detectAndDecodeMulti@QRCodeDetector@cv@@QEBA_NAEBV_InputArray@2@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV_OutputArray@2@2@Z;bool cv::QRCodeDetector::detectAndDecodeMulti(class cv::_InputArray const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?detectInRegion@DetectionBasedTracker@cv@@IEAAXAEBVMat@2@AEBV?$Rect_@H@2@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@@Z;void cv::DetectionBasedTracker::detectInRegion(class cv::Mat const &,class cv::Rect_<int> const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &)
?detectMulti@QRCodeDetector@cv@@QEBA_NAEBV_InputArray@2@AEBV_OutputArray@2@@Z;bool cv::QRCodeDetector::detectMulti(class cv::_InputArray const &,class cv::_OutputArray const &)
?detectMultiScale@CascadeClassifier@cv@@QEAAXAEBV_InputArray@2@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@HV?$allocator@H@std@@@5@AEAV?$vector@NV?$allocator@N@std@@@5@NHHV?$Size_@H@2@4_N@Z;void cv::CascadeClassifier::detectMultiScale(class cv::_InputArray const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<int,class std::allocator<int> > &,class std::vector<double,class std::allocator<double> > &,double,int,int,class cv::Size_<int>,class cv::Size_<int>,bool)
?detectMultiScale@CascadeClassifier@cv@@QEAAXAEBV_InputArray@2@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@HV?$allocator@H@std@@@5@NHHV?$Size_@H@2@3@Z;void cv::CascadeClassifier::detectMultiScale(class cv::_InputArray const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<int,class std::allocator<int> > &,double,int,int,class cv::Size_<int>,class cv::Size_<int>)
?detectMultiScale@CascadeClassifier@cv@@QEAAXAEBV_InputArray@2@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@NHHV?$Size_@H@2@2@Z;void cv::CascadeClassifier::detectMultiScale(class cv::_InputArray const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,double,int,int,class cv::Size_<int>,class cv::Size_<int>)
?detectMultiScale@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@NV?$allocator@N@std@@@5@NV?$Size_@H@2@3NN_N@Z;void cv::HOGDescriptor::detectMultiScale(class cv::_InputArray const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<double,class std::allocator<double> > &,double,class cv::Size_<int>,class cv::Size_<int>,double,double,bool)
?detectMultiScale@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@NV?$Size_@H@2@2NN_N@Z;void cv::HOGDescriptor::detectMultiScale(class cv::_InputArray const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,double,class cv::Size_<int>,class cv::Size_<int>,double,double,bool)
?detectMultiScaleROI@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@UDetectionROI@cv@@V?$allocator@UDetectionROI@cv@@@std@@@5@NH@Z;void cv::HOGDescriptor::detectMultiScaleROI(class cv::_InputArray const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<struct cv::DetectionROI,class std::allocator<struct cv::DetectionROI> > &,double,int)
?detectROI@HOGDescriptor@cv@@UEBAXAEBV_InputArray@2@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEAV45@AEAV?$vector@NV?$allocator@N@std@@@5@NV?$Size_@H@2@4@Z;void cv::HOGDescriptor::detectROI(class cv::_InputArray const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > &,class std::vector<double,class std::allocator<double> > &,double,class cv::Size_<int>,class cv::Size_<int>)
?detectResultRoi@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@CylindricalPortraitWarper@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::CylindricalPortraitWarper::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@CylindricalWarper@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::CylindricalWarper::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@PlanePortraitWarper@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::PlanePortraitWarper::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@PlaneWarper@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::PlaneWarper::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@SphericalPortraitWarper@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::SphericalPortraitWarper::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoi@SphericalWarper@detail@cv@@MEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::SphericalWarper::detectResultRoi(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectResultRoiByBorder@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@IEAAXV?$Size_@H@3@AEAV?$Point_@H@3@1@Z;void cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::detectResultRoiByBorder(class cv::Size_<int>,class cv::Point_<int> &,class cv::Point_<int> &)
?detectTextRectangles@TextDetectionModel@dnn4_v20211004@dnn@cv@@QEBAXAEBV_InputArray@4@AEAV?$vector@VRotatedRect@cv@@V?$allocator@VRotatedRect@cv@@@std@@@std@@@Z;void cv::dnn::dnn4_v20211004::TextDetectionModel::detectTextRectangles(class cv::_InputArray const &,class std::vector<class cv::RotatedRect,class std::allocator<class cv::RotatedRect> > &)
?detectTextRectangles@TextDetectionModel@dnn4_v20211004@dnn@cv@@QEBAXAEBV_InputArray@4@AEAV?$vector@VRotatedRect@cv@@V?$allocator@VRotatedRect@cv@@@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@7@@Z;void cv::dnn::dnn4_v20211004::TextDetectionModel::detectTextRectangles(class cv::_InputArray const &,class std::vector<class cv::RotatedRect,class std::allocator<class cv::RotatedRect> > &,class std::vector<float,class std::allocator<float> > &)
?determinant@cv@@YANAEBV_InputArray@1@@Z;double cv::determinant(class cv::_InputArray const &)
?device@Context@ocl@cv@@QEBAAEAVDevice@23@_K@Z;class cv::ocl::Device & cv::ocl::Context::device(unsigned __int64)
?deviceCopyObsolete@UMatData@cv@@QEBA_NXZ;bool cv::UMatData::deviceCopyObsolete(void)
?deviceID@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::deviceID(void)
?deviceMemMapped@UMatData@cv@@QEBA_NXZ;bool cv::UMatData::deviceMemMapped(void)
?deviceNumber@PlatformInfo@ocl@cv@@QEBAHXZ;int cv::ocl::PlatformInfo::deviceNumber(void)
?deviceSupports@cuda@cv@@YA_NW4FeatureSet@12@@Z;bool cv::cuda::deviceSupports(enum cv::cuda::FeatureSet)
?deviceVersionMajor@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::deviceVersionMajor(void)
?deviceVersionMinor@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::deviceVersionMinor(void)
?dft@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HH@Z;void cv::dft(class cv::_InputArray const &,class cv::_OutputArray const &,int,int)
?diag@Mat@cv@@QEBA?AV12@H@Z;class cv::Mat cv::Mat::diag(int)
?diag@Mat@cv@@SA?AV12@AEBV12@@Z;class cv::Mat cv::Mat::diag(class cv::Mat const &)
?diag@MatExpr@cv@@QEBA?AV12@H@Z;class cv::MatExpr cv::MatExpr::diag(int)
?diag@MatOp@cv@@UEBAXAEBVMatExpr@2@HAEAV32@@Z;void cv::MatOp::diag(class cv::MatExpr const &,int,class cv::MatExpr &)
?diag@UMat@cv@@QEBA?AV12@H@Z;class cv::UMat cv::UMat::diag(int)
?diag@UMat@cv@@SA?AV12@AEBV12@@Z;class cv::UMat cv::UMat::diag(class cv::UMat const &)
?diag@UMat@cv@@SA?AV12@AEBV12@W4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::diag(class cv::UMat const &,enum cv::UMatUsageFlags)
?dilate3x3@gapi@cv@@YA?AVGMat@2@AEBV32@HHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::dilate3x3(class cv::GMat const &,int,int,class cv::Scalar_<double> const &)
?dilate@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0V?$Point_@H@1@HHAEBV?$Scalar_@N@1@@Z;void cv::dilate(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::Point_<int>,int,int,class cv::Scalar_<double> const &)
?dilate@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVMat@2@AEBV?$Point_@H@2@HHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::dilate(class cv::GMat const &,class cv::Mat const &,class cv::Point_<int> const &,int,int,class cv::Scalar_<double> const &)
?dims@KDTree@ml@cv@@QEBAHXZ;int cv::ml::KDTree::dims(void)
?dims@MatSize@cv@@QEBAHXZ;int cv::MatSize::dims(void)
?dims@SparseMat@cv@@QEBAHXZ;int cv::SparseMat::dims(void)
?dims@View@RMat@cv@@QEBAAEBV?$vector@HV?$allocator@H@std@@@std@@XZ;class std::vector<int,class std::allocator<int> > const & cv::RMat::View::dims(void)
?dims@_InputArray@cv@@QEBAHH@Z;int cv::_InputArray::dims(int)
?disableAutomaticLibraryUnloading@DynamicLib@impl@plugin@cv@@QEAAXXZ;void cv::plugin::impl::DynamicLib::disableAutomaticLibraryUnloading(void)
?displayOverlay@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0H@Z;void cv::displayOverlay(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?displayStatusBar@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0H@Z;void cv::displayStatusBar(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?distanceTransform@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1HHH@Z;void cv::distanceTransform(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,int,int)
?distanceTransform@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHH@Z;void cv::distanceTransform(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int)
?distortPoints@fisheye@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@00N@Z;void cv::fisheye::distortPoints(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,double)
?div16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::div16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?div16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::div16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?div32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::div32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?div32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::div32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?div64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::div64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?div8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::div8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?div8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::div8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?div@gapi@cv@@YA?AVGMat@2@AEBV32@0NH@Z;class cv::GMat cv::gapi::div(class cv::GMat const &,class cv::GMat const &,double,int)
?divC@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@NH@Z;class cv::GMat cv::gapi::divC(class cv::GMat const &,class cv::GScalar const &,double,int)
?divRC@gapi@cv@@YA?AVGMat@2@AEBVGScalar@2@AEBV32@NH@Z;class cv::GMat cv::gapi::divRC(class cv::GScalar const &,class cv::GMat const &,double,int)
?divSpectrums@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@H_N@Z;void cv::divSpectrums(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,bool)
?divide@MatOp@cv@@UEBAXAEBVMatExpr@2@0AEAV32@N@Z;void cv::MatOp::divide(class cv::MatExpr const &,class cv::MatExpr const &,class cv::MatExpr &,double)
?divide@MatOp@cv@@UEBAXNAEBVMatExpr@2@AEAV32@@Z;void cv::MatOp::divide(double,class cv::MatExpr const &,class cv::MatExpr &)
?divide@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@NH@Z;void cv::divide(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,double,int)
?divide@cv@@YAXNAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::divide(double,class cv::_InputArray const &,class cv::_OutputArray const &,int)
?doTrain@EMImpl@ml@cv@@QEAA_NHAEBV_OutputArray@3@00@Z;bool cv::ml::EMImpl::doTrain(int,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?dot@Mat@cv@@QEBANAEBV_InputArray@2@@Z;double cv::Mat::dot(class cv::_InputArray const &)
?dot@MatExpr@cv@@QEBANAEBVMat@2@@Z;double cv::MatExpr::dot(class cv::Mat const &)
?dot@UMat@cv@@QEBANAEBV_InputArray@2@@Z;double cv::UMat::dot(class cv::_InputArray const &)
?doubleFPConfig@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::doubleFPConfig(void)
?download@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@@Z;void cv::cuda::GpuMat::download(class cv::_OutputArray const &)
?download@GpuMat@cuda@cv@@QEBAXAEBV_OutputArray@3@AEAVStream@23@@Z;void cv::cuda::GpuMat::download(class cv::_OutputArray const &,class cv::cuda::Stream &)
?download@GpuMatND@cuda@cv@@QEBAXAEBV_OutputArray@3@@Z;void cv::cuda::GpuMatND::download(class cv::_OutputArray const &)
?download@GpuMatND@cuda@cv@@QEBAXAEBV_OutputArray@3@AEAVStream@23@@Z;void cv::cuda::GpuMatND::download(class cv::_OutputArray const &,class cv::cuda::Stream &)
?download@MatAllocator@cv@@UEBAXPEAUUMatData@2@PEAXHQEB_K222@Z;void cv::MatAllocator::download(struct cv::UMatData *,void *,int,unsigned __int64 const * const,unsigned __int64 const * const,unsigned __int64 const * const,unsigned __int64 const * const)
?drawChessboardCorners@cv@@YAXAEBV_InputOutputArray@1@V?$Size_@H@1@AEBV_InputArray@1@_N@Z;void cv::drawChessboardCorners(class cv::_InputOutputArray const &,class cv::Size_<int>,class cv::_InputArray const &,bool)
?drawContours@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@HAEBV?$Scalar_@N@1@HH1HV?$Point_@H@1@@Z;void cv::drawContours(class cv::_InputOutputArray const &,class cv::_InputArray const &,int,class cv::Scalar_<double> const &,int,int,class cv::_InputArray const &,int,class cv::Point_<int>)
?drawFrameAxes@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@111MH@Z;void cv::drawFrameAxes(class cv::_InputOutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,float,int)
?drawKeypoints@cv@@YAXAEBV_InputArray@1@AEBV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@AEBV_InputOutputArray@1@AEBV?$Scalar_@N@1@W4DrawMatchesFlags@1@@Z;void cv::drawKeypoints(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class cv::_InputOutputArray const &,class cv::Scalar_<double> const &,enum cv::DrawMatchesFlags)
?drawMarker@cv@@YAXAEBV_InputOutputArray@1@V?$Point_@H@1@AEBV?$Scalar_@N@1@HHHH@Z;void cv::drawMarker(class cv::_InputOutputArray const &,class cv::Point_<int>,class cv::Scalar_<double> const &,int,int,int,int)
?drawMatches@cv@@YAXAEBV_InputArray@1@AEBV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@01AEBV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@4@AEBV_InputOutputArray@1@AEBV?$Scalar_@N@1@4AEBV?$vector@V?$vector@DV?$allocator@D@std@@@std@@V?$allocator@V?$vector@DV?$allocator@D@std@@@std@@@2@@4@W4DrawMatchesFlags@1@@Z;void cv::drawMatches(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > const &,class cv::_InputOutputArray const &,class cv::Scalar_<double> const &,class cv::Scalar_<double> const &,class std::vector<class std::vector<char,class std::allocator<char> >,class std::allocator<class std::vector<char,class std::allocator<char> > > > const &,enum cv::DrawMatchesFlags)
?drawMatches@cv@@YAXAEBV_InputArray@1@AEBV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@01AEBV?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@4@AEBV_InputOutputArray@1@AEBV?$Scalar_@N@1@4AEBV?$vector@DV?$allocator@D@std@@@4@W4DrawMatchesFlags@1@@Z;void cv::drawMatches(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > const &,class cv::_InputOutputArray const &,class cv::Scalar_<double> const &,class cv::Scalar_<double> const &,class std::vector<char,class std::allocator<char> > const &,enum cv::DrawMatchesFlags)
?drawMatches@cv@@YAXAEBV_InputArray@1@AEBV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@01AEBV?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@4@AEBV_InputOutputArray@1@HAEBV?$Scalar_@N@1@4AEBV?$vector@DV?$allocator@D@std@@@4@W4DrawMatchesFlags@1@@Z;void cv::drawMatches(class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class cv::_InputArray const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &,class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > const &,class cv::_InputOutputArray const &,int,class cv::Scalar_<double> const &,class cv::Scalar_<double> const &,class std::vector<char,class std::allocator<char> > const &,enum cv::DrawMatchesFlags)
?drawPrimitivesOCVBGR@draw@wip@gapi@cv@@YAXAEAVMat@4@AEBV?$vector@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@V?$allocator@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@std@@@std@@AEAV?$shared_ptr@VFTTextRender@draw@wip@gapi@cv@@@7@@Z;void cv::gapi::wip::draw::drawPrimitivesOCVBGR(class cv::Mat &,class std::vector<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly>,class std::allocator<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > > const &,class std::shared_ptr<class cv::gapi::wip::draw::FTTextRender> &)
?drawPrimitivesOCVYUV@draw@wip@gapi@cv@@YAXAEAVMat@4@AEBV?$vector@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@V?$allocator@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@std@@@std@@AEAV?$shared_ptr@VFTTextRender@draw@wip@gapi@cv@@@7@@Z;void cv::gapi::wip::draw::drawPrimitivesOCVYUV(class cv::Mat &,class std::vector<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly>,class std::allocator<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > > const &,class std::shared_ptr<class cv::gapi::wip::draw::FTTextRender> &)
?driverVersion@Device@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Device::driverVersion(void)
?dtors@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@CA?AV?$array@P6AXQEAT?$_Align_type@N$0GA@@std@@@Z$07@std@@XZ;class std::array<void (*)(union std::_Align_type<double,96> * const),8> cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::dtors(void)
?dump@Net@dnn4_v20211004@dnn@cv@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::dnn::dnn4_v20211004::Net::dump(void)
?dumpInputArray@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::dumpInputArray(class cv::_InputArray const &)
?dumpInputArrayOfArrays@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::dumpInputArrayOfArrays(class cv::_InputArray const &)
?dumpInputOutputArray@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputOutputArray@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::dumpInputOutputArray(class cv::_InputOutputArray const &)
?dumpInputOutputArrayOfArrays@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputOutputArray@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::dumpInputOutputArrayOfArrays(class cv::_InputOutputArray const &)
?dumpToFile@Net@dnn4_v20211004@dnn@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::dnn::dnn4_v20211004::Net::dumpToFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?dumpVectorOfDouble@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@NV?$allocator@N@std@@@4@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::dumpVectorOfDouble(class std::vector<double,class std::allocator<double> > const &)
?dumpVectorOfInt@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@HV?$allocator@H@std@@@4@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::dumpVectorOfInt(class std::vector<int,class std::allocator<int> > const &)
?dumpVectorOfRect@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@4@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::dumpVectorOfRect(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > const &)
?durationNS@Timer@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Timer::durationNS(void)
?eStep@EMImpl@ml@cv@@QEAAXXZ;void cv::ml::EMImpl::eStep(void)
?edgeDst@Subdiv2D@cv@@QEBAHHPEAV?$Point_@M@2@@Z;int cv::Subdiv2D::edgeDst(int,class cv::Point_<float> *)
?edgeOrg@Subdiv2D@cv@@QEBAHHPEAV?$Point_@M@2@@Z;int cv::Subdiv2D::edgeOrg(int,class cv::Point_<float> *)
?edgePreservingFilter@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HMM@Z;void cv::edgePreservingFilter(class cv::_InputArray const &,class cv::_OutputArray const &,int,float,float)
?eigen@cv@@YA_NAEBV_InputArray@1@AEBV_OutputArray@1@1@Z;bool cv::eigen(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?eigenNonSymmetric@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1@Z;void cv::eigenNonSymmetric(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?eigenvalues@LDA@cv@@QEBA?AVMat@2@XZ;class cv::Mat cv::LDA::eigenvalues(void)
?eigenvectors@LDA@cv@@QEBA?AVMat@2@XZ;class cv::Mat cv::LDA::eigenvectors(void)
?elapsedTime@Event@cuda@cv@@SAMAEBV123@0@Z;float cv::cuda::Event::elapsedTime(class cv::cuda::Event const &,class cv::cuda::Event const &)
?elemSize1@Buffer@ogl@cv@@QEBAHXZ;int cv::ogl::Buffer::elemSize1(void)
?elemSize1@GpuMat@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::GpuMat::elemSize1(void)
?elemSize1@GpuMatND@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::GpuMatND::elemSize1(void)
?elemSize1@HostMem@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::HostMem::elemSize1(void)
?elemSize1@Mat@cv@@QEBA_KXZ;unsigned __int64 cv::Mat::elemSize1(void)
?elemSize1@SparseMat@cv@@QEBA_KXZ;unsigned __int64 cv::SparseMat::elemSize1(void)
?elemSize1@UMat@cv@@QEBA_KXZ;unsigned __int64 cv::UMat::elemSize1(void)
?elemSize@Buffer@ogl@cv@@QEBAHXZ;int cv::ogl::Buffer::elemSize(void)
?elemSize@GpuMat@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::GpuMat::elemSize(void)
?elemSize@GpuMatND@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::GpuMatND::elemSize(void)
?elemSize@HostMem@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::HostMem::elemSize(void)
?elemSize@Mat@cv@@QEBA_KXZ;unsigned __int64 cv::Mat::elemSize(void)
?elemSize@SparseMat@cv@@QEBA_KXZ;unsigned __int64 cv::SparseMat::elemSize(void)
?elemSize@UMat@cv@@QEBA_KXZ;unsigned __int64 cv::UMat::elemSize(void)
?elemSize@View@RMat@cv@@QEBA_KXZ;unsigned __int64 cv::RMat::View::elemSize(void)
?elementWise@MatOp@cv@@UEBA_NAEBVMatExpr@2@@Z;bool cv::MatOp::elementWise(class cv::MatExpr const &)
?ellipse2Poly@cv@@YAXV?$Point_@H@1@V?$Size_@H@1@HHHHAEAV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@@Z;void cv::ellipse2Poly(class cv::Point_<int>,class cv::Size_<int>,int,int,int,int,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > &)
?ellipse2Poly@cv@@YAXV?$Point_@N@1@V?$Size_@N@1@HHHHAEAV?$vector@V?$Point_@N@cv@@V?$allocator@V?$Point_@N@cv@@@std@@@std@@@Z;void cv::ellipse2Poly(class cv::Point_<double>,class cv::Size_<double>,int,int,int,int,class std::vector<class cv::Point_<double>,class std::allocator<class cv::Point_<double> > > &)
?ellipse@cv@@YAXAEBV_InputOutputArray@1@AEBVRotatedRect@1@AEBV?$Scalar_@N@1@HH@Z;void cv::ellipse(class cv::_InputOutputArray const &,class cv::RotatedRect const &,class cv::Scalar_<double> const &,int,int)
?ellipse@cv@@YAXAEBV_InputOutputArray@1@V?$Point_@H@1@V?$Size_@H@1@NNNAEBV?$Scalar_@N@1@HHH@Z;void cv::ellipse(class cv::_InputOutputArray const &,class cv::Point_<int>,class cv::Size_<int>,double,double,double,class cv::Scalar_<double> const &,int,int,int)
?empty@Algorithm@cv@@UEBA_NXZ;bool cv::Algorithm::empty(void)
?empty@Arrays@ogl@cv@@QEBA_NXZ;bool cv::ogl::Arrays::empty(void)
?empty@Buffer@ogl@cv@@QEBA_NXZ;bool cv::ogl::Buffer::empty(void)
?empty@CascadeClassifier@cv@@QEBA_NXZ;bool cv::CascadeClassifier::empty(void)
?empty@Context@ocl@cv@@QEBA_NXZ;bool cv::ocl::Context::empty(void)
?empty@DescriptorMatcher@cv@@UEBA_NXZ;bool cv::DescriptorMatcher::empty(void)
?empty@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::empty(void)
?empty@Feature2D@cv@@UEBA_NXZ;bool cv::Feature2D::empty(void)
?empty@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::empty(void)
?empty@GpuMat@cuda@cv@@QEBA_NXZ;bool cv::cuda::GpuMat::empty(void)
?empty@GpuMatND@cuda@cv@@QEBA_NXZ;bool cv::cuda::GpuMatND::empty(void)
?empty@HostMem@cuda@cv@@QEBA_NXZ;bool cv::cuda::HostMem::empty(void)
?empty@Kernel@ocl@cv@@QEBA_NXZ;bool cv::ocl::Kernel::empty(void)
?empty@Mat@cv@@QEBA_NXZ;bool cv::Mat::empty(void)
?empty@Net@dnn4_v20211004@dnn@cv@@QEBA_NXZ;bool cv::dnn::dnn4_v20211004::Net::empty(void)
?empty@OpenCLExecutionContext@ocl@cv@@QEBA_NXZ;bool cv::ocl::OpenCLExecutionContext::empty(void)
?empty@Platform@ocl@cv@@QEBA_NXZ;bool cv::ocl::Platform::empty(void)
?empty@PlatformInfo@ocl@cv@@QEBA_NXZ;bool cv::ocl::PlatformInfo::empty(void)
?empty@Program@ocl@cv@@QEBA_NXZ;bool cv::ocl::Program::empty(void)
?empty@ProgramSource@ocl@cv@@QEBA_NXZ;bool cv::ocl::ProgramSource::empty(void)
?empty@Queue@ocl@cv@@QEBA_NXZ;bool cv::ocl::Queue::empty(void)
?empty@Range@cv@@QEBA_NXZ;bool cv::Range::empty(void)
?empty@StatModel@ml@cv@@UEBA_NXZ;bool cv::ml::StatModel::empty(void)
?empty@Texture2D@ogl@cv@@QEBA_NXZ;bool cv::ogl::Texture2D::empty(void)
?empty@UMat@cv@@QEBA_NXZ;bool cv::UMat::empty(void)
?empty@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::empty(void)
?empty_array_desc@cv@@YA?AUGArrayDesc@1@XZ;struct cv::GArrayDesc cv::empty_array_desc(void)
?empty_gopaque_desc@cv@@YA?AUGOpaqueDesc@1@XZ;struct cv::GOpaqueDesc cv::empty_gopaque_desc(void)
?empty_scalar_desc@cv@@YA?AUGScalarDesc@1@XZ;struct cv::GScalarDesc cv::empty_scalar_desc(void)
?enableFusion@Net@dnn4_v20211004@dnn@cv@@QEAAX_N@Z;void cv::dnn::dnn4_v20211004::Net::enableFusion(bool)
?enableModelDiagnostics@dnn4_v20211004@dnn@cv@@YAX_N@Z;void cv::dnn::dnn4_v20211004::enableModelDiagnostics(bool)
?end@Dict@dnn4_v20211004@dnn@cv@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDictValue@dnn4_v20211004@dnn@cv@@@std@@@std@@@std@@@std@@XZ;class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cv::dnn::dnn4_v20211004::DictValue> > > > cv::dnn::dnn4_v20211004::Dict::end(void)
?end@FileNode@cv@@QEBA?AVFileNodeIterator@2@XZ;class cv::FileNodeIterator cv::FileNode::end(void)
?end@SparseMat@cv@@QEAA?AVSparseMatIterator@2@XZ;class cv::SparseMatIterator cv::SparseMat::end(void)
?end@SparseMat@cv@@QEBA?AVSparseMatConstIterator@2@XZ;class cv::SparseMatConstIterator cv::SparseMat::end(void)
?endWriteChunk@AVIWriteContainer@cv@@QEAAXXZ;void cv::AVIWriteContainer::endWriteChunk(void)
?endWriteStruct@FileStorage@cv@@QEAAXXZ;void cv::FileStorage::endWriteStruct(void)
?endianLittle@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::endianLittle(void)
?enqueueHostCallback@Stream@cuda@cv@@QEAAXP6AXHPEAX@Z0@Z;void cv::cuda::Stream::enqueueHostCallback(void (*)(int,void *),void *)
?ensureSizeIsEnough@cuda@cv@@YAXHHHAEBV_OutputArray@2@@Z;void cv::cuda::ensureSizeIsEnough(int,int,int,class cv::_OutputArray const &)
?eps@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::eps(void)
?eps@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::eps(void)
?equalTo@FileNodeIterator@cv@@QEBA_NAEBV12@@Z;bool cv::FileNodeIterator::equalTo(class cv::FileNodeIterator const &)
?equalizeHist@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::equalizeHist(class cv::_InputArray const &,class cv::_OutputArray const &)
?equalizeHist@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::equalizeHist(class cv::GMat const &)
?erase@Dict@dnn4_v20211004@dnn@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::dnn::dnn4_v20211004::Dict::erase(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?erase@SparseMat@cv@@QEAAXHHHPEA_K@Z;void cv::SparseMat::erase(int,int,int,unsigned __int64 *)
?erase@SparseMat@cv@@QEAAXHHPEA_K@Z;void cv::SparseMat::erase(int,int,unsigned __int64 *)
?erase@SparseMat@cv@@QEAAXPEBHPEA_K@Z;void cv::SparseMat::erase(int const *,unsigned __int64 *)
?erode3x3@gapi@cv@@YA?AVGMat@2@AEBV32@HHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::erode3x3(class cv::GMat const &,int,int,class cv::Scalar_<double> const &)
?erode@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0V?$Point_@H@1@HHAEBV?$Scalar_@N@1@@Z;void cv::erode(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::Point_<int>,int,int,class cv::Scalar_<double> const &)
?erode@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVMat@2@AEBV?$Point_@H@2@HHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::erode(class cv::GMat const &,class cv::Mat const &,class cv::Point_<int> const &,int,int,class cv::Scalar_<double> const &)
?error@cv@@YAXAEBVException@1@@Z;void cv::error(class cv::Exception const &)
?error@cv@@YAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD1H@Z;void cv::error(int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,char const *,char const *,int)
?errorCorrectionSupport@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::errorCorrectionSupport(void)
?estimate@AffineBasedEstimator@detail@cv@@EEAA_NAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEBV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@5@AEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@5@@Z;bool cv::detail::AffineBasedEstimator::estimate(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > const &,class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?estimate@BundleAdjusterBase@detail@cv@@MEAA_NAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEBV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@5@AEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@5@@Z;bool cv::detail::BundleAdjusterBase::estimate(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > const &,class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?estimate@HomographyBasedEstimator@detail@cv@@EEAA_NAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEBV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@5@AEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@5@@Z;bool cv::detail::HomographyBasedEstimator::estimate(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > const &,class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?estimate@KeypointsModel@dnn4_v20211004@dnn@cv@@QEAA?AV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@std@@AEBV_InputArray@4@M@Z;class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > cv::dnn::dnn4_v20211004::KeypointsModel::estimate(class cv::_InputArray const &,float)
?estimate@NoBundleAdjuster@detail@cv@@EEAA_NAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEBV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@5@AEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@5@@Z;bool cv::detail::NoBundleAdjuster::estimate(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > const &,class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?estimate@TrackerStateEstimator@tracking@detail@cv@@QEAA?AU?$Ptr@VTrackerTargetState@tracking@detail@cv@@@4@AEBV?$vector@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@@2@@std@@@Z;struct cv::Ptr<class cv::detail::tracking::TrackerTargetState> cv::detail::tracking::TrackerStateEstimator::estimate(class std::vector<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > >,class std::allocator<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > > > const &)
?estimateAffine2D@cv@@YA?AVMat@1@AEBV_InputArray@1@0AEBV_OutputArray@1@AEBUUsacParams@1@@Z;class cv::Mat cv::estimateAffine2D(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,struct cv::UsacParams const &)
?estimateAffine2D@cv@@YA?AVMat@1@AEBV_InputArray@1@0AEBV_OutputArray@1@HN_KN2@Z;class cv::Mat cv::estimateAffine2D(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,double,unsigned __int64,double,unsigned __int64)
?estimateAffine3D@cv@@YA?AVMat@1@AEBV_InputArray@1@0PEAN_N@Z;class cv::Mat cv::estimateAffine3D(class cv::_InputArray const &,class cv::_InputArray const &,double *,bool)
?estimateAffine3D@cv@@YAHAEBV_InputArray@1@0AEBV_OutputArray@1@1NN@Z;int cv::estimateAffine3D(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double,double)
?estimateAffinePartial2D@cv@@YA?AVMat@1@AEBV_InputArray@1@0AEBV_OutputArray@1@HN_KN2@Z;class cv::Mat cv::estimateAffinePartial2D(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,double,unsigned __int64,double,unsigned __int64)
?estimateCameraParams@Stitcher@cv@@AEAA?AW4Status@12@XZ;enum cv::Stitcher::Status cv::Stitcher::estimateCameraParams(void)
?estimateChessboardSharpness@cv@@YA?AV?$Scalar_@N@1@AEBV_InputArray@1@V?$Size_@H@1@0M_NAEBV_OutputArray@1@@Z;class cv::Scalar_<double> cv::estimateChessboardSharpness(class cv::_InputArray const &,class cv::Size_<int>,class cv::_InputArray const &,float,bool,class cv::_OutputArray const &)
?estimateFocal@detail@cv@@YAXAEBV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@std@@AEBV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@4@AEAV?$vector@NV?$allocator@N@std@@@4@@Z;void cv::detail::estimateFocal(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > const &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > const &,class std::vector<double,class std::allocator<double> > &)
?estimateImpl@TrackerStateEstimatorMILBoosting@tracking@detail@cv@@MEAA?AU?$Ptr@VTrackerTargetState@tracking@detail@cv@@@4@AEBV?$vector@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@@2@@std@@@Z;struct cv::Ptr<class cv::detail::tracking::TrackerTargetState> cv::detail::tracking::TrackerStateEstimatorMILBoosting::estimateImpl(class std::vector<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > >,class std::allocator<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > > > const &)
?estimateNewCameraMatrixForUndistortRectify@fisheye@cv@@YAXAEBV_InputArray@2@0AEBV?$Size_@H@2@0AEBV_OutputArray@2@N1N@Z;void cv::fisheye::estimateNewCameraMatrixForUndistortRectify(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int> const &,class cv::_InputArray const &,class cv::_OutputArray const &,double,class cv::Size_<int> const &,double)
?estimateRigidTransform@cv@@YA?AVMat@1@AEBV_InputArray@1@0_N@Z;class cv::Mat cv::estimateRigidTransform(class cv::_InputArray const &,class cv::_InputArray const &,bool)
?estimateSeam@DpSeamFinder@detail@cv@@AEAA_NAEBVMat@3@0V?$Point_@H@3@1H11AEAV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEA_N@Z;bool cv::detail::DpSeamFinder::estimateSeam(class cv::Mat const &,class cv::Mat const &,class cv::Point_<int>,class cv::Point_<int>,int,class cv::Point_<int>,class cv::Point_<int>,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > &,bool &)
?estimateTransform@Stitcher@cv@@QEAA?AW4Status@12@AEBV_InputArray@2@0@Z;enum cv::Stitcher::Status cv::Stitcher::estimateTransform(class cv::_InputArray const &,class cv::_InputArray const &)
?estimateTranslation3D@cv@@YAHAEBV_InputArray@1@0AEBV_OutputArray@1@1NN@Z;int cv::estimateTranslation3D(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double,double)
?estimator@Stitcher@cv@@QEAA?AU?$Ptr@VEstimator@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::Estimator> cv::Stitcher::estimator(void)
?estimator@Stitcher@cv@@QEBA?BU?$Ptr@VEstimator@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::Estimator> const cv::Stitcher::estimator(void)
?evaluateFeatureDetector@cv@@YAXAEBVMat@1@00PEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@1AEAMAEAHAEBU?$Ptr@VFeature2D@cv@@@1@@Z;void cv::evaluateFeatureDetector(class cv::Mat const &,class cv::Mat const &,class cv::Mat const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > *,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > *,float &,int &,struct cv::Ptr<class cv::Feature2D> const &)
?executionCapabilities@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::executionCapabilities(void)
?exists@fs@utils@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::utils::fs::exists(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?exp32f@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::exp32f(float const *,float *,int)
?exp64f@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::exp64f(double const *,double *,int)
?exp@cv@@YA?AUsoftdouble@1@AEBU21@@Z;struct cv::softdouble cv::exp(struct cv::softdouble const &)
?exp@cv@@YA?AUsoftfloat@1@AEBU21@@Z;struct cv::softfloat cv::exp(struct cv::softfloat const &)
?exp@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::exp(class cv::_InputArray const &,class cv::_OutputArray const &)
?exp@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::exp(float const *,float *,int)
?exp@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::exp(double const *,double *,int)
?exposureCompensator@Stitcher@cv@@QEAA?AU?$Ptr@VExposureCompensator@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::ExposureCompensator> cv::Stitcher::exposureCompensator(void)
?exposureCompensator@Stitcher@cv@@QEBA?BU?$Ptr@VExposureCompensator@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::ExposureCompensator> const cv::Stitcher::exposureCompensator(void)
?extensions@Device@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Device::extensions(void)
?external@GpuMatND@cuda@cv@@QEBA_NXZ;bool cv::cuda::GpuMatND::external(void)
?extractChannel@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::extractChannel(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?extractImageCOI@cv@@YAXPEBXAEBV_OutputArray@1@H@Z;void cv::extractImageCOI(void const *,class cv::_OutputArray const &,int)
?extraction@TrackerFeatureSet@tracking@detail@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::tracking::TrackerFeatureSet::extraction(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
?eye@Mat@cv@@SA?AVMatExpr@2@HHH@Z;class cv::MatExpr cv::Mat::eye(int,int,int)
?eye@Mat@cv@@SA?AVMatExpr@2@V?$Size_@H@2@H@Z;class cv::MatExpr cv::Mat::eye(class cv::Size_<int>,int)
?eye@UMat@cv@@SA?AV12@HHH@Z;class cv::UMat cv::UMat::eye(int,int,int)
?eye@UMat@cv@@SA?AV12@HHHW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::eye(int,int,int,enum cv::UMatUsageFlags)
?eye@UMat@cv@@SA?AV12@V?$Size_@H@2@H@Z;class cv::UMat cv::UMat::eye(class cv::Size_<int>,int)
?eye@UMat@cv@@SA?AV12@V?$Size_@H@2@HW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::eye(class cv::Size_<int>,int,enum cv::UMatUsageFlags)
?fastAtan2@cv@@YAMMM@Z;float cv::fastAtan2(float,float)
?fastAtan2@hal@cv@@YAXPEBM0PEAMH_N@Z;void cv::hal::fastAtan2(float const *,float const *,float *,int,bool)
?fastAtan32f@hal@cv@@YAXPEBM0PEAMH_N@Z;void cv::hal::fastAtan32f(float const *,float const *,float *,int,bool)
?fastAtan64f@hal@cv@@YAXPEBN0PEANH_N@Z;void cv::hal::fastAtan64f(double const *,double const *,double *,int,bool)
?fastFree@cv@@YAXPEAX@Z;void cv::fastFree(void *)
?fastMalloc@cv@@YAPEAX_K@Z;void * cv::fastMalloc(unsigned __int64)
?fastNlMeansDenoising@cuda@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@MHHAEAVStream@12@@Z;void cv::cuda::fastNlMeansDenoising(class cv::_InputArray const &,class cv::_OutputArray const &,float,int,int,class cv::cuda::Stream &)
?fastNlMeansDenoising@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@AEBV?$vector@MV?$allocator@M@std@@@std@@HHH@Z;void cv::fastNlMeansDenoising(class cv::_InputArray const &,class cv::_OutputArray const &,class std::vector<float,class std::allocator<float> > const &,int,int,int)
?fastNlMeansDenoising@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@MHH@Z;void cv::fastNlMeansDenoising(class cv::_InputArray const &,class cv::_OutputArray const &,float,int,int)
?fastNlMeansDenoisingColored@cuda@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@MMHHAEAVStream@12@@Z;void cv::cuda::fastNlMeansDenoisingColored(class cv::_InputArray const &,class cv::_OutputArray const &,float,float,int,int,class cv::cuda::Stream &)
?fastNlMeansDenoisingColored@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@MMHH@Z;void cv::fastNlMeansDenoisingColored(class cv::_InputArray const &,class cv::_OutputArray const &,float,float,int,int)
?fastNlMeansDenoisingColoredMulti@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHMMHH@Z;void cv::fastNlMeansDenoisingColoredMulti(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,float,float,int,int)
?fastNlMeansDenoisingMulti@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHAEBV?$vector@MV?$allocator@M@std@@@std@@HHH@Z;void cv::fastNlMeansDenoisingMulti(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,class std::vector<float,class std::allocator<float> > const &,int,int,int)
?fastNlMeansDenoisingMulti@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHMHH@Z;void cv::fastNlMeansDenoisingMulti(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,float,int,int)
?featuresFinder@Stitcher@cv@@QEAA?AU?$Ptr@VFeature2D@cv@@@2@XZ;struct cv::Ptr<class cv::Feature2D> cv::Stitcher::featuresFinder(void)
?featuresFinder@Stitcher@cv@@QEBA?BU?$Ptr@VFeature2D@cv@@@2@XZ;struct cv::Ptr<class cv::Feature2D> const cv::Stitcher::featuresFinder(void)
?featuresMatcher@Stitcher@cv@@QEAA?AU?$Ptr@VFeaturesMatcher@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::FeaturesMatcher> cv::Stitcher::featuresMatcher(void)
?featuresMatcher@Stitcher@cv@@QEBA?BU?$Ptr@VFeaturesMatcher@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::FeaturesMatcher> const cv::Stitcher::featuresMatcher(void)
?feed@Blender@detail@cv@@UEAAXAEBV_InputArray@3@0V?$Point_@H@3@@Z;void cv::detail::Blender::feed(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Point_<int>)
?feed@BlocksChannelsCompensator@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@AEBV?$vector@U?$pair@VUMat@cv@@E@std@@V?$allocator@U?$pair@VUMat@cv@@E@std@@@2@@5@@Z;void cv::detail::BlocksChannelsCompensator::feed(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<struct std::pair<class cv::UMat,unsigned char>,class std::allocator<struct std::pair<class cv::UMat,unsigned char> > > const &)
?feed@BlocksGainCompensator@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@AEBV?$vector@U?$pair@VUMat@cv@@E@std@@V?$allocator@U?$pair@VUMat@cv@@E@std@@@2@@5@@Z;void cv::detail::BlocksGainCompensator::feed(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<struct std::pair<class cv::UMat,unsigned char>,class std::allocator<struct std::pair<class cv::UMat,unsigned char> > > const &)
?feed@ChannelsCompensator@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@AEBV?$vector@U?$pair@VUMat@cv@@E@std@@V?$allocator@U?$pair@VUMat@cv@@E@std@@@2@@5@@Z;void cv::detail::ChannelsCompensator::feed(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<struct std::pair<class cv::UMat,unsigned char>,class std::allocator<struct std::pair<class cv::UMat,unsigned char> > > const &)
?feed@ExposureCompensator@detail@cv@@QEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@1@Z;void cv::detail::ExposureCompensator::feed(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
?feed@FeatherBlender@detail@cv@@UEAAXAEBV_InputArray@3@0V?$Point_@H@3@@Z;void cv::detail::FeatherBlender::feed(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Point_<int>)
?feed@GainCompensator@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@AEBV?$vector@U?$pair@VUMat@cv@@E@std@@V?$allocator@U?$pair@VUMat@cv@@E@std@@@2@@5@@Z;void cv::detail::GainCompensator::feed(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<struct std::pair<class cv::UMat,unsigned char>,class std::allocator<struct std::pair<class cv::UMat,unsigned char> > > const &)
?feed@MultiBandBlender@detail@cv@@UEAAXAEBV_InputArray@3@0V?$Point_@H@3@@Z;void cv::detail::MultiBandBlender::feed(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Point_<int>)
?feed@NoExposureCompensator@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@AEBV?$vector@U?$pair@VUMat@cv@@E@std@@V?$allocator@U?$pair@VUMat@cv@@E@std@@@2@@5@@Z;void cv::detail::NoExposureCompensator::feed(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<struct std::pair<class cv::UMat,unsigned char>,class std::allocator<struct std::pair<class cv::UMat,unsigned char> > > const &)
?fill@RNG@cv@@QEAAXAEBV_InputOutputArray@2@HAEBV_InputArray@2@1_N@Z;void cv::RNG::fill(class cv::_InputOutputArray const &,int,class cv::_InputArray const &,class cv::_InputArray const &,bool)
?fillConvexPoly@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@AEBV?$Scalar_@N@1@HH@Z;void cv::fillConvexPoly(class cv::_InputOutputArray const &,class cv::_InputArray const &,class cv::Scalar_<double> const &,int,int)
?fillConvexPoly@cv@@YAXAEBV_InputOutputArray@1@PEBV?$Point_@H@1@HAEBV?$Scalar_@N@1@HH@Z;void cv::fillConvexPoly(class cv::_InputOutputArray const &,class cv::Point_<int> const *,int,class cv::Scalar_<double> const &,int,int)
?fillPoly@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@AEBV?$Scalar_@N@1@HHV?$Point_@H@1@@Z;void cv::fillPoly(class cv::_InputOutputArray const &,class cv::_InputArray const &,class cv::Scalar_<double> const &,int,int,class cv::Point_<int>)
?fillPoly@cv@@YAXAEBV_InputOutputArray@1@PEAPEBV?$Point_@H@1@PEBHHAEBV?$Scalar_@N@1@HHV31@@Z;void cv::fillPoly(class cv::_InputOutputArray const &,class cv::Point_<int> const * *,int const *,int,class cv::Scalar_<double> const &,int,int,class cv::Point_<int>)
?filter2D@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H0V?$Point_@H@1@NH@Z;void cv::filter2D(class cv::_InputArray const &,class cv::_OutputArray const &,int,class cv::_InputArray const &,class cv::Point_<int>,double,int)
?filter2D@gapi@cv@@YA?AVGMat@2@AEBV32@HAEBVMat@2@AEBV?$Point_@H@2@AEBV?$Scalar_@N@2@H3@Z;class cv::GMat cv::gapi::filter2D(class cv::GMat const &,int,class cv::Mat const &,class cv::Point_<int> const &,class cv::Scalar_<double> const &,int,class cv::Scalar_<double> const &)
?filter2D@hal@cv@@YAXHHHPEAE_K01HHHHHH01HHHHNH_N@Z;void cv::hal::filter2D(int,int,int,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,int,int,unsigned char *,unsigned __int64,int,int,int,int,double,int,bool)
?filterHomographyDecompByVisibleRefpoints@cv@@YAXAEBV_InputArray@1@000AEBV_OutputArray@1@0@Z;void cv::filterHomographyDecompByVisibleRefpoints(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?filterSpeckles@cv@@YAXAEBV_InputOutputArray@1@NHN0@Z;void cv::filterSpeckles(class cv::_InputOutputArray const &,double,int,double,class cv::_InputOutputArray const &)
?finalize@Layer@dnn4_v20211004@dnn@cv@@QEAA?AV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEBV56@@Z;class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > cv::dnn::dnn4_v20211004::Layer::finalize(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
?finalize@Layer@dnn4_v20211004@dnn@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEAV56@@Z;void cv::dnn::dnn4_v20211004::Layer::finalize(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?finalize@Layer@dnn4_v20211004@dnn@cv@@UEAAXAEBV?$vector@PEAVMat@cv@@V?$allocator@PEAVMat@cv@@@std@@@std@@AEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@6@@Z;void cv::dnn::dnn4_v20211004::Layer::finalize(class std::vector<class cv::Mat *,class std::allocator<class cv::Mat *> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?finalize@Layer@dnn4_v20211004@dnn@cv@@UEAAXAEBV_InputArray@4@AEBV_OutputArray@4@@Z;void cv::dnn::dnn4_v20211004::Layer::finalize(class cv::_InputArray const &,class cv::_OutputArray const &)
?find4QuadCornerSubpix@cv@@YA_NAEBV_InputArray@1@AEBV_InputOutputArray@1@V?$Size_@H@1@@Z;bool cv::find4QuadCornerSubpix(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::Size_<int>)
?find@DpSeamFinder@detail@cv@@UEAAXAEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@5@AEAV45@@Z;void cv::detail::DpSeamFinder::find(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?find@GraphCutSeamFinder@detail@cv@@UEAAXAEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@5@AEAV45@@Z;void cv::detail::GraphCutSeamFinder::find(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?find@NoSeamFinder@detail@cv@@UEAAXAEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@5@AEAV45@@Z;void cv::detail::NoSeamFinder::find(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?find@PairwiseSeamFinder@detail@cv@@UEAAXAEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@5@AEAV45@@Z;void cv::detail::PairwiseSeamFinder::find(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?find@VoronoiSeamFinder@detail@cv@@UEAAXAEBV?$vector@V?$Size_@H@cv@@V?$allocator@V?$Size_@H@cv@@@std@@@std@@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@5@AEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@@Z;void cv::detail::VoronoiSeamFinder::find(class std::vector<class cv::Size_<int>,class std::allocator<class cv::Size_<int> > > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?find@VoronoiSeamFinder@detail@cv@@UEAAXAEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@5@AEAV45@@Z;void cv::detail::VoronoiSeamFinder::find(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?findBlobs@SimpleBlobDetectorImpl@cv@@MEBAXAEBV_InputArray@2@0AEAV?$vector@UCenter@SimpleBlobDetectorImpl@cv@@V?$allocator@UCenter@SimpleBlobDetectorImpl@cv@@@std@@@std@@@Z;void cv::SimpleBlobDetectorImpl::findBlobs(class cv::_InputArray const &,class cv::_InputArray const &,class std::vector<struct cv::SimpleBlobDetectorImpl::Center,class std::allocator<struct cv::SimpleBlobDetectorImpl::Center> > &)
?findChessboardCorners@cv@@YA_NAEBV_InputArray@1@V?$Size_@H@1@AEBV_OutputArray@1@H@Z;bool cv::findChessboardCorners(class cv::_InputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,int)
?findChessboardCornersSB@cv@@YA_NAEBV_InputArray@1@V?$Size_@H@1@AEBV_OutputArray@1@H2@Z;bool cv::findChessboardCornersSB(class cv::_InputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,int,class cv::_OutputArray const &)
?findChessboardCornersSB@cv@@YA_NAEBV_InputArray@1@V?$Size_@H@1@AEBV_OutputArray@1@H@Z;bool cv::findChessboardCornersSB(class cv::_InputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,int)
?findCirclesGrid@cv@@YA_NAEBV_InputArray@1@V?$Size_@H@1@AEBV_OutputArray@1@HAEBU?$Ptr@VFeature2D@cv@@@1@@Z;bool cv::findCirclesGrid(class cv::_InputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,int,struct cv::Ptr<class cv::Feature2D> const &)
?findCirclesGrid@cv@@YA_NAEBV_InputArray@1@V?$Size_@H@1@AEBV_OutputArray@1@HAEBU?$Ptr@VFeature2D@cv@@@1@AEBUCirclesGridFinderParameters@1@@Z;bool cv::findCirclesGrid(class cv::_InputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,int,struct cv::Ptr<class cv::Feature2D> const &,struct cv::CirclesGridFinderParameters const &)
?findComponents@DpSeamFinder@detail@cv@@AEAAXXZ;void cv::detail::DpSeamFinder::findComponents(void)
?findContours@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1HHV?$Point_@H@1@@Z;void cv::findContours(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,int,class cv::Point_<int>)
?findContours@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHV?$Point_@H@1@@Z;void cv::findContours(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,class cv::Point_<int>)
?findContours@gapi@cv@@YA?AV?$GArray@V?$GArray@V?$Point_@H@cv@@@cv@@@2@AEBVGMat@2@W4RetrievalModes@2@W4ContourApproximationModes@2@@Z;class cv::GArray<class cv::GArray<class cv::Point_<int> > > cv::gapi::findContours(class cv::GMat const &,enum cv::RetrievalModes,enum cv::ContourApproximationModes)
?findContours@gapi@cv@@YA?AV?$GArray@V?$GArray@V?$Point_@H@cv@@@cv@@@2@AEBVGMat@2@W4RetrievalModes@2@W4ContourApproximationModes@2@AEBV?$GOpaque@V?$Point_@H@cv@@@2@@Z;class cv::GArray<class cv::GArray<class cv::Point_<int> > > cv::gapi::findContours(class cv::GMat const &,enum cv::RetrievalModes,enum cv::ContourApproximationModes,class cv::GOpaque<class cv::Point_<int> > const &)
?findContoursH@gapi@cv@@YA?AV?$tuple@V?$GArray@V?$GArray@V?$Point_@H@cv@@@cv@@@cv@@V?$GArray@V?$Vec@H$03@cv@@@2@@std@@AEBVGMat@2@W4RetrievalModes@2@W4ContourApproximationModes@2@@Z;class std::tuple<class cv::GArray<class cv::GArray<class cv::Point_<int> > >,class cv::GArray<class cv::Vec<int,4> > > cv::gapi::findContoursH(class cv::GMat const &,enum cv::RetrievalModes,enum cv::ContourApproximationModes)
?findContoursH@gapi@cv@@YA?AV?$tuple@V?$GArray@V?$GArray@V?$Point_@H@cv@@@cv@@@cv@@V?$GArray@V?$Vec@H$03@cv@@@2@@std@@AEBVGMat@2@W4RetrievalModes@2@W4ContourApproximationModes@2@AEBV?$GOpaque@V?$Point_@H@cv@@@2@@Z;class std::tuple<class cv::GArray<class cv::GArray<class cv::Point_<int> > >,class cv::GArray<class cv::Vec<int,4> > > cv::gapi::findContoursH(class cv::GMat const &,enum cv::RetrievalModes,enum cv::ContourApproximationModes,class cv::GOpaque<class cv::Point_<int> > const &)
?findDataFile@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@PEBDPEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@2@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::findDataFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,char const *,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const *,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const *)
?findDataFile@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@_NPEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::findDataFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool,char const *)
?findEdges@DpSeamFinder@detail@cv@@AEAAXXZ;void cv::detail::DpSeamFinder::findEdges(void)
?findEssentialMat@cv@@YA?AVMat@1@AEBV_InputArray@1@00000AEBV_OutputArray@1@AEBUUsacParams@1@@Z;class cv::Mat cv::findEssentialMat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,struct cv::UsacParams const &)
?findEssentialMat@cv@@YA?AVMat@1@AEBV_InputArray@1@00000HNNAEBV_OutputArray@1@@Z;class cv::Mat cv::findEssentialMat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,double,double,class cv::_OutputArray const &)
?findEssentialMat@cv@@YA?AVMat@1@AEBV_InputArray@1@00HNNAEBV_OutputArray@1@@Z;class cv::Mat cv::findEssentialMat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,double,double,class cv::_OutputArray const &)
?findEssentialMat@cv@@YA?AVMat@1@AEBV_InputArray@1@00HNNHAEBV_OutputArray@1@@Z;class cv::Mat cv::findEssentialMat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,double,double,int,class cv::_OutputArray const &)
?findEssentialMat@cv@@YA?AVMat@1@AEBV_InputArray@1@0NV?$Point_@N@1@HNNAEBV_OutputArray@1@@Z;class cv::Mat cv::findEssentialMat(class cv::_InputArray const &,class cv::_InputArray const &,double,class cv::Point_<double>,int,double,double,class cv::_OutputArray const &)
?findEssentialMat@cv@@YA?AVMat@1@AEBV_InputArray@1@0NV?$Point_@N@1@HNNHAEBV_OutputArray@1@@Z;class cv::Mat cv::findEssentialMat(class cv::_InputArray const &,class cv::_InputArray const &,double,class cv::Point_<double>,int,double,double,int,class cv::_OutputArray const &)
?findFile@samples@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@_N1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::samples::findFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool,bool)
?findFileOrKeep@samples@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@_N@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::samples::findFileOrKeep(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)
?findFundamentalMat@cv@@YA?AVMat@1@AEBV_InputArray@1@0AEBV_OutputArray@1@AEBUUsacParams@1@@Z;class cv::Mat cv::findFundamentalMat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,struct cv::UsacParams const &)
?findFundamentalMat@cv@@YA?AVMat@1@AEBV_InputArray@1@0AEBV_OutputArray@1@HNN@Z;class cv::Mat cv::findFundamentalMat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,double,double)
?findFundamentalMat@cv@@YA?AVMat@1@AEBV_InputArray@1@0HNNAEBV_OutputArray@1@@Z;class cv::Mat cv::findFundamentalMat(class cv::_InputArray const &,class cv::_InputArray const &,int,double,double,class cv::_OutputArray const &)
?findFundamentalMat@cv@@YA?AVMat@1@AEBV_InputArray@1@0HNNHAEBV_OutputArray@1@@Z;class cv::Mat cv::findFundamentalMat(class cv::_InputArray const &,class cv::_InputArray const &,int,double,double,int,class cv::_OutputArray const &)
?findHomography@cv@@YA?AVMat@1@AEBV_InputArray@1@0AEBV_OutputArray@1@AEBUUsacParams@1@@Z;class cv::Mat cv::findHomography(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,struct cv::UsacParams const &)
?findHomography@cv@@YA?AVMat@1@AEBV_InputArray@1@0AEBV_OutputArray@1@HN@Z;class cv::Mat cv::findHomography(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,double)
?findHomography@cv@@YA?AVMat@1@AEBV_InputArray@1@0HNAEBV_OutputArray@1@HN@Z;class cv::Mat cv::findHomography(class cv::_InputArray const &,class cv::_InputArray const &,int,double,class cv::_OutputArray const &,int,double)
?findInPair@VoronoiSeamFinder@detail@cv@@EEAAX_K0V?$Rect_@H@3@@Z;void cv::detail::VoronoiSeamFinder::findInPair(unsigned __int64,unsigned __int64,class cv::Rect_<int>)
?findMatches@gimpl@cv@@YA?AUSubgraphMatch@12@AEBV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@0@Z;struct cv::gimpl::SubgraphMatch cv::gimpl::findMatches(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> const &,class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMe
?findMaxSpanningTree@detail@cv@@YAXHAEBV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@std@@AEAVGraph@12@AEAV?$vector@HV?$allocator@H@std@@@4@@Z;void cv::detail::findMaxSpanningTree(int,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > const &,class cv::detail::Graph &,class std::vector<int,class std::allocator<int> > &)
?findNearest@KDTree@ml@cv@@QEBAHAEBV_InputArray@3@HHAEBV_OutputArray@3@111@Z;int cv::ml::KDTree::findNearest(class cv::_InputArray const &,int,int,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?findNearest@Subdiv2D@cv@@QEAAHV?$Point_@M@2@PEAV32@@Z;int cv::Subdiv2D::findNearest(class cv::Point_<float>,class cv::Point_<float> *)
?findNonZero@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::findNonZero(class cv::_InputArray const &,class cv::_OutputArray const &)
?findOrthoRange@KDTree@ml@cv@@QEBAXAEBV_InputArray@3@0AEBV_OutputArray@3@11@Z;void cv::ml::KDTree::findOrthoRange(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?findSetByElem@DisjointSets@detail@cv@@QEAAHH@Z;int cv::detail::DisjointSets::findSetByElem(int)
?findTransformECC@cv@@YANAEBV_InputArray@1@0AEBV_InputOutputArray@1@HVTermCriteria@1@0@Z;double cv::findTransformECC(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,int,class cv::TermCriteria,class cv::_InputArray const &)
?findTransformECC@cv@@YANAEBV_InputArray@1@0AEBV_InputOutputArray@1@HVTermCriteria@1@0H@Z;double cv::findTransformECC(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,int,class cv::TermCriteria,class cv::_InputArray const &,int)
?finish@Queue@ocl@cv@@QEAAXXZ;void cv::ocl::Queue::finish(void)
?finish@ocl@cv@@YAXXZ;void cv::ocl::finish(void)
?finishWriteAVI@AVIWriteContainer@cv@@QEAAXXZ;void cv::AVIWriteContainer::finishWriteAVI(void)
?fitEllipse@cv@@YA?AVRotatedRect@1@AEBV_InputArray@1@@Z;class cv::RotatedRect cv::fitEllipse(class cv::_InputArray const &)
?fitEllipseAMS@cv@@YA?AVRotatedRect@1@AEBV_InputArray@1@@Z;class cv::RotatedRect cv::fitEllipseAMS(class cv::_InputArray const &)
?fitEllipseDirect@cv@@YA?AVRotatedRect@1@AEBV_InputArray@1@@Z;class cv::RotatedRect cv::fitEllipseDirect(class cv::_InputArray const &)
?fitLine2D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$03@cv@@@2@AEBV?$GArray@V?$Point_@H@cv@@@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,4> > cv::gapi::fitLine2D(class cv::GArray<class cv::Point_<int> > const &,enum cv::DistanceTypes,double,double,double)
?fitLine2D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$03@cv@@@2@AEBV?$GArray@V?$Point_@M@cv@@@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,4> > cv::gapi::fitLine2D(class cv::GArray<class cv::Point_<float> > const &,enum cv::DistanceTypes,double,double,double)
?fitLine2D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$03@cv@@@2@AEBV?$GArray@V?$Point_@N@cv@@@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,4> > cv::gapi::fitLine2D(class cv::GArray<class cv::Point_<double> > const &,enum cv::DistanceTypes,double,double,double)
?fitLine2D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$03@cv@@@2@AEBVGMat@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,4> > cv::gapi::fitLine2D(class cv::GMat const &,enum cv::DistanceTypes,double,double,double)
?fitLine3D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$05@cv@@@2@AEBV?$GArray@V?$Point3_@H@cv@@@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,6> > cv::gapi::fitLine3D(class cv::GArray<class cv::Point3_<int> > const &,enum cv::DistanceTypes,double,double,double)
?fitLine3D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$05@cv@@@2@AEBV?$GArray@V?$Point3_@M@cv@@@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,6> > cv::gapi::fitLine3D(class cv::GArray<class cv::Point3_<float> > const &,enum cv::DistanceTypes,double,double,double)
?fitLine3D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$05@cv@@@2@AEBV?$GArray@V?$Point3_@N@cv@@@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,6> > cv::gapi::fitLine3D(class cv::GArray<class cv::Point3_<double> > const &,enum cv::DistanceTypes,double,double,double)
?fitLine3D@gapi@cv@@YA?AV?$GOpaque@V?$Vec@M$05@cv@@@2@AEBVGMat@2@W4DistanceTypes@2@NNN@Z;class cv::GOpaque<class cv::Vec<float,6> > cv::gapi::fitLine3D(class cv::GMat const &,enum cv::DistanceTypes,double,double,double)
?fitLine@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HNNN@Z;void cv::fitLine(class cv::_InputArray const &,class cv::_OutputArray const &,int,double,double,double)
?fixedSize@_OutputArray@cv@@QEBA_NXZ;bool cv::_OutputArray::fixedSize(void)
?fixedType@_OutputArray@cv@@QEBA_NXZ;bool cv::_OutputArray::fixedType(void)
?flann_distance_type@cvflann@@YA?AW4flann_distance_t@1@XZ;enum cvflann::flann_distance_t cvflann::flann_distance_type(void)
?flip@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::flip(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?flip@gapi@cv@@YA?AVGMat@2@AEBV32@H@Z;class cv::GMat cv::gapi::flip(class cv::GMat const &,int)
?floodFill@cv@@YAHAEBV_InputOutputArray@1@0V?$Point_@H@1@V?$Scalar_@N@1@PEAV?$Rect_@H@1@22H@Z;int cv::floodFill(class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::Point_<int>,class cv::Scalar_<double>,class cv::Rect_<int> *,class cv::Scalar_<double>,class cv::Scalar_<double>,int)
?floodFill@cv@@YAHAEBV_InputOutputArray@1@V?$Point_@H@1@V?$Scalar_@N@1@PEAV?$Rect_@H@1@22H@Z;int cv::floodFill(class cv::_InputOutputArray const &,class cv::Point_<int>,class cv::Scalar_<double>,class cv::Rect_<int> *,class cv::Scalar_<double>,class cv::Scalar_<double>,int)
?focalsFromHomography@detail@cv@@YAXAEBVMat@2@AEAN1AEA_N2@Z;void cv::detail::focalsFromHomography(class cv::Mat const &,double &,double &,bool &,bool &)
?fontQt@cv@@YA?AUQtFont@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HV?$Scalar_@N@1@HHH@Z;struct cv::QtFont cv::fontQt(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class cv::Scalar_<double>,int,int,int)
?format@Texture2D@ogl@cv@@QEBA?AW4Format@123@XZ;enum cv::ogl::Texture2D::Format cv::ogl::Texture2D::format(void)
?format@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::format(char const *,...)
?formatMessage@Exception@cv@@QEAAXXZ;void cv::Exception::formatMessage(void)
?forward@Layer@dnn4_v20211004@dnn@cv@@UEAAXAEAV?$vector@PEAVMat@cv@@V?$allocator@PEAVMat@cv@@@std@@@std@@AEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@6@1@Z;void cv::dnn::dnn4_v20211004::Layer::forward(class std::vector<class cv::Mat *,class std::allocator<class cv::Mat *> > &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?forward@Layer@dnn4_v20211004@dnn@cv@@UEAAXAEBV_InputArray@4@AEBV_OutputArray@4@1@Z;void cv::dnn::dnn4_v20211004::Layer::forward(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?forward@Net@dnn4_v20211004@dnn@cv@@QEAA?AVMat@4@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::Mat cv::dnn::dnn4_v20211004::Net::forward(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?forward@Net@dnn4_v20211004@dnn@cv@@QEAAXAEAV?$vector@V?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@V?$allocator@V?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@2@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@6@@Z;void cv::dnn::dnn4_v20211004::Net::forward(class std::vector<class std::vector<class cv::Mat,class std::allocator<class cv::Mat> >,class std::allocator<class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > > > &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?forward@Net@dnn4_v20211004@dnn@cv@@QEAAXAEBV_OutputArray@4@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::dnn::dnn4_v20211004::Net::forward(class cv::_OutputArray const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?forward@Net@dnn4_v20211004@dnn@cv@@QEAAXAEBV_OutputArray@4@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z;void cv::dnn::dnn4_v20211004::Net::forward(class cv::_OutputArray const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?forwardAsync@Net@dnn4_v20211004@dnn@cv@@QEAA?AVAsyncArray@4@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::AsyncArray cv::dnn::dnn4_v20211004::Net::forwardAsync(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?forwardSlice@ActivationLayer@dnn4_v20211004@dnn@cv@@UEBAXPEBC0PEACH_KHH@Z;void cv::dnn::dnn4_v20211004::ActivationLayer::forwardSlice(signed char const *,signed char const *,signed char *,int,unsigned __int64,int,int)
?forwardSlice@ActivationLayer@dnn4_v20211004@dnn@cv@@UEBAXPEBH0PEAHH_KHH@Z;void cv::dnn::dnn4_v20211004::ActivationLayer::forwardSlice(int const *,int const *,int *,int,unsigned __int64,int,int)
?forwardSlice@ActivationLayer@dnn4_v20211004@dnn@cv@@UEBAXPEBMPEAMH_KHH@Z;void cv::dnn::dnn4_v20211004::ActivationLayer::forwardSlice(float const *,float *,int,unsigned __int64,int,int)
?forward_fallback@Layer@dnn4_v20211004@dnn@cv@@QEAAXAEBV_InputArray@4@AEBV_OutputArray@4@1@Z;void cv::dnn::dnn4_v20211004::Layer::forward_fallback(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?fourcc@VideoWriter@cv@@SAHDDDD@Z;int cv::VideoWriter::fourcc(char,char,char,char)
?freeMemory@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::freeMemory(void)
?fromBinary@ProgramSource@ocl@cv@@SA?AV123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PEBE_K0@Z;class cv::ocl::ProgramSource cv::ocl::ProgramSource::fromBinary(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned char const *,unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?fromDevice@Context@ocl@cv@@SA?AV123@AEBVDevice@23@@Z;class cv::ocl::Context cv::ocl::Context::fromDevice(class cv::ocl::Device const &)
?fromHandle@Context@ocl@cv@@SA?AV123@PEAX@Z;class cv::ocl::Context cv::ocl::Context::fromHandle(void *)
?fromHandle@Device@ocl@cv@@SA?AV123@PEAX@Z;class cv::ocl::Device cv::ocl::Device::fromHandle(void *)
?fromRaw@softdouble@cv@@SA?AU12@_K@Z;struct cv::softdouble cv::softdouble::fromRaw(unsigned __int64)
?fromRaw@softfloat@cv@@SA?BU12@I@Z;struct cv::softfloat const cv::softfloat::fromRaw(unsigned int)
?fromSPIR@ProgramSource@ocl@cv@@SA?AV123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PEBE_K0@Z;class cv::ocl::ProgramSource cv::ocl::ProgramSource::fromSPIR(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned char const *,unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?full@Priv@Buffer@fluid@gapi@cv@@QEBA_NXZ;bool cv::gapi::fluid::Buffer::Priv::full(void)
?gains@ChannelsCompensator@detail@cv@@QEBA?AV?$vector@V?$Scalar_@N@cv@@V?$allocator@V?$Scalar_@N@cv@@@std@@@std@@XZ;class std::vector<class cv::Scalar_<double>,class std::allocator<class cv::Scalar_<double> > > cv::detail::ChannelsCompensator::gains(void)
?gains@GainCompensator@detail@cv@@QEBA?AV?$vector@NV?$allocator@N@std@@@std@@XZ;class std::vector<double,class std::allocator<double> > cv::detail::GainCompensator::gains(void)
?gapi_itt_domain@gimpl@cv@@3PEAU___itt_domain@@EA;struct ___itt_domain * cv::gimpl::gapi_itt_domain
?gatherData@TLSDataContainer@cv@@IEBAXAEAV?$vector@PEAXV?$allocator@PEAX@std@@@std@@@Z;void cv::TLSDataContainer::gatherData(class std::vector<void *,class std::allocator<void *> > &)
?gaussian@RNG@cv@@QEAANN@Z;double cv::RNG::gaussian(double)
?gaussianBlur@gapi@cv@@YA?AVGMat@2@AEBV32@AEBV?$Size_@H@2@NNHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::gaussianBlur(class cv::GMat const &,class cv::Size_<int> const &,double,double,int,class cv::Scalar_<double> const &)
?gemm32f@hal@cv@@YAXPEBM_K01M01MPEAM1HHHH@Z;void cv::hal::gemm32f(float const *,unsigned __int64,float const *,unsigned __int64,float,float const *,unsigned __int64,float,float *,unsigned __int64,int,int,int,int)
?gemm32fc@hal@cv@@YAXPEBM_K01M01MPEAM1HHHH@Z;void cv::hal::gemm32fc(float const *,unsigned __int64,float const *,unsigned __int64,float,float const *,unsigned __int64,float,float *,unsigned __int64,int,int,int,int)
?gemm64f@hal@cv@@YAXPEBN_K01N01NPEAN1HHHH@Z;void cv::hal::gemm64f(double const *,unsigned __int64,double const *,unsigned __int64,double,double const *,unsigned __int64,double,double *,unsigned __int64,int,int,int,int)
?gemm64fc@hal@cv@@YAXPEBN_K01N01NPEAN1HHHH@Z;void cv::hal::gemm64fc(double const *,unsigned __int64,double const *,unsigned __int64,double,double const *,unsigned __int64,double,double *,unsigned __int64,int,int,int,int)
?gemm@cv@@YAXAEBV_InputArray@1@0N0NAEBV_OutputArray@1@H@Z;void cv::gemm(class cv::_InputArray const &,class cv::_InputArray const &,double,class cv::_InputArray const &,double,class cv::_OutputArray const &,int)
?generateGraph@GCompiler@gimpl@cv@@QEAA?AV?$unique_ptr@VGraph@ade@@U?$default_delete@VGraph@ade@@@std@@@std@@XZ;class std::unique_ptr<class ade::Graph,struct std::default_delete<class ade::Graph> > cv::gimpl::GCompiler::generateGraph(void)
?get@AsyncArray@cv@@QEBAXAEBV_OutputArray@2@@Z;void cv::AsyncArray::get(class cv::_OutputArray const &)
?get@AsyncArray@cv@@QEBA_NAEBV_OutputArray@2@N@Z;bool cv::AsyncArray::get(class cv::_OutputArray const &,double)
?get@AsyncArray@cv@@QEBA_NAEBV_OutputArray@2@_J@Z;bool cv::AsyncArray::get(class cv::_OutputArray const &,__int64)
?get@Dict@dnn4_v20211004@dnn@cv@@QEBAAEBUDictValue@234@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::dnn::dnn4_v20211004::DictValue const & cv::dnn::dnn4_v20211004::Dict::get(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?get@Formatter@cv@@SA?AU?$Ptr@VFormatter@cv@@@2@W4FormatType@12@@Z;struct cv::Ptr<class cv::Formatter> cv::Formatter::get(enum cv::Formatter::FormatType)
?get@VideoCapture@cv@@UEBANH@Z;double cv::VideoCapture::get(int)
?get@VideoWriter@cv@@UEBANH@Z;double cv::VideoWriter::get(int)
?getAVIIndex@AVIWriteContainer@cv@@QEAAHHW4StreamType@2@@Z;int cv::AVIWriteContainer::getAVIIndex(int,enum cv::StreamType)
?getAdapter@MediaFrame@cv@@AEBAPEAVIAdapter@12@XZ;class cv::MediaFrame::IAdapter * cv::MediaFrame::getAdapter(void)
?getAffineTransform@cv@@YA?AVMat@1@AEBV_InputArray@1@0@Z;class cv::Mat cv::getAffineTransform(class cv::_InputArray const &,class cv::_InputArray const &)
?getAffineTransform@cv@@YA?AVMat@1@QEBV?$Point_@M@1@0@Z;class cv::Mat cv::getAffineTransform(class cv::Point_<float> const * const,class cv::Point_<float> const * const)
?getAlgorithm@Index@flann@cv@@QEBA?AW4flann_algorithm_t@cvflann@@XZ;enum cvflann::flann_algorithm_t cv::flann::Index::getAlgorithm(void)
?getAll@IndexParams@flann@cv@@QEBAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAV?$vector@W4FlannIndexType@flann@cv@@V?$allocator@W4FlannIndexType@flann@cv@@@std@@@5@0AEAV?$vector@NV?$allocator@N@std@@@5@@Z;void cv::flann::IndexParams::getAll(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class std::vector<enum cv::flann::FlannIndexType,class std::allocator<enum cv::flann::FlannIndexType> > &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class std::vector<double,class std::allocator<double> > &)
?getAllocator@BufferPool@cuda@cv@@QEBA?AU?$Ptr@VAllocator@GpuMat@cuda@cv@@@3@XZ;struct cv::Ptr<class cv::cuda::GpuMat::Allocator> cv::cuda::BufferPool::getAllocator(void)
?getAllocator@HostMem@cuda@cv@@SAPEAVMatAllocator@3@W4AllocType@123@@Z;class cv::MatAllocator * cv::cuda::HostMem::getAllocator(enum cv::cuda::HostMem::AllocType)
?getAllocatorStatistics@cv@@YAAEAVAllocatorStatisticsInterface@utils@1@XZ;class cv::utils::AllocatorStatisticsInterface & cv::getAllocatorStatistics(void)
?getArrayResult@AsyncPromise@cv@@QEAA?AVAsyncArray@2@XZ;class cv::AsyncArray cv::AsyncPromise::getArrayResult(void)
?getAvailableBackends@dnn4_v20211004@dnn@cv@@YA?AV?$vector@U?$pair@W4Backend@dnn4_v20211004@dnn@cv@@W4Target@234@@std@@V?$allocator@U?$pair@W4Backend@dnn4_v20211004@dnn@cv@@W4Target@234@@std@@@2@@std@@XZ;class std::vector<struct std::pair<enum cv::dnn::dnn4_v20211004::Backend,enum cv::dnn::dnn4_v20211004::Target>,class std::allocator<struct std::pair<enum cv::dnn::dnn4_v20211004::Backend,enum cv::dnn::dnn4_v20211004::Target> > > cv::dnn::dnn4_v20211004::getAvailableBackends(void)
?getAvailableTargets@dnn4_v20211004@dnn@cv@@YA?AV?$vector@W4Target@dnn4_v20211004@dnn@cv@@V?$allocator@W4Target@dnn4_v20211004@dnn@cv@@@std@@@std@@W4Backend@123@@Z;class std::vector<enum cv::dnn::dnn4_v20211004::Target,class std::allocator<enum cv::dnn::dnn4_v20211004::Target> > cv::dnn::dnn4_v20211004::getAvailableTargets(enum cv::dnn::dnn4_v20211004::Backend)
?getAvgTimeMilli@TickMeter@cv@@QEBANXZ;double cv::TickMeter::getAvgTimeMilli(void)
?getAvgTimeSec@TickMeter@cv@@QEBANXZ;double cv::TickMeter::getAvgTimeSec(void)
?getBackendName@VideoCapture@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::VideoCapture::getBackendName(void)
?getBackendName@VideoWriter@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::VideoWriter::getBackendName(void)
?getBackendName@videoio_registry@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4VideoCaptureAPIs@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::videoio_registry::getBackendName(enum cv::VideoCaptureAPIs)
?getBackends@videoio_registry@cv@@YA?AV?$vector@W4VideoCaptureAPIs@cv@@V?$allocator@W4VideoCaptureAPIs@cv@@@std@@@std@@XZ;class std::vector<enum cv::VideoCaptureAPIs,class std::allocator<enum cv::VideoCaptureAPIs> > cv::videoio_registry::getBackends(void)
?getBinLocation@utils@cv@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::utils::getBinLocation(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
?getBinLocation@utils@cv@@YA_NAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z;bool cv::utils::getBinLocation(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > &)
?getBinary@Program@ocl@cv@@QEBAXAEAV?$vector@DV?$allocator@D@std@@@std@@@Z;void cv::ocl::Program::getBinary(class std::vector<char,class std::allocator<char> > &)
?getBinaryThreshold@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEBAMXZ;float cv::dnn::dnn4_v20211004::TextDetectionModel_DB::getBinaryThreshold(void)
?getBlockSize@BlocksCompensator@detail@cv@@QEBA?AV?$Size_@H@3@XZ;class cv::Size_<int> cv::detail::BlocksCompensator::getBlockSize(void)
?getBuffer@BufferPool@cuda@cv@@QEAA?AVGpuMat@23@HHH@Z;class cv::cuda::GpuMat cv::cuda::BufferPool::getBuffer(int,int,int)
?getBuffer@BufferPool@cuda@cv@@QEAA?AVGpuMat@23@V?$Size_@H@3@H@Z;class cv::cuda::GpuMat cv::cuda::BufferPool::getBuffer(class cv::Size_<int>,int)
?getBufferPoolController@MatAllocator@cv@@UEBAPEAVBufferPoolController@2@PEBD@Z;class cv::BufferPoolController * cv::MatAllocator::getBufferPoolController(char const *)
?getBuildInformation@cv@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & cv::getBuildInformation(void)
?getByIndex@CommandLineParser@cv@@IEBAXH_NW4Param@2@PEAX@Z;void cv::CommandLineParser::getByIndex(int,bool,enum cv::Param,void *)
?getByName@CommandLineParser@cv@@IEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4Param@2@PEAX@Z;void cv::CommandLineParser::getByName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool,enum cv::Param,void *)
?getCPUFeaturesLine@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::getCPUFeaturesLine(void)
?getCPUTickCount@cv@@YA_JXZ;__int64 cv::getCPUTickCount(void)
?getCacheDirectory@fs@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::fs::getCacheDirectory(char const *,char const *)
?getCacheDirectoryForDownloads@fs@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::fs::getCacheDirectoryForDownloads(void)
?getCameraBackendPluginVersion@videoio_registry@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4VideoCaptureAPIs@2@AEAH1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::videoio_registry::getCameraBackendPluginVersion(enum cv::VideoCaptureAPIs,int &,int &)
?getCameraBackends@videoio_registry@cv@@YA?AV?$vector@W4VideoCaptureAPIs@cv@@V?$allocator@W4VideoCaptureAPIs@cv@@@std@@@std@@XZ;class std::vector<enum cv::VideoCaptureAPIs,class std::allocator<enum cv::VideoCaptureAPIs> > cv::videoio_registry::getCameraBackends(void)
?getChannels@AVIWriteContainer@cv@@QEBAHXZ;int cv::AVIWriteContainer::getChannels(void)
?getClassName@TrackerStateEstimator@tracking@detail@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::detail::tracking::TrackerStateEstimator::getClassName(void)
?getClustersNumber@EMImpl@ml@cv@@UEBAHXZ;int cv::ml::EMImpl::getClustersNumber(void)
?getConfidenceMaps@TrackerModel@tracking@detail@cv@@QEBAAEBV?$vector@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@@2@@std@@XZ;class std::vector<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > >,class std::allocator<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > > > const & cv::detail::tracking::TrackerModel::getConfidenceMaps(void)
?getConfidenceThreshold@TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEBAMXZ;float cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::getConfidenceThreshold(void)
?getConfigurationParameterBool@utils@cv@@YA_NPEBD_N@Z;bool cv::utils::getConfigurationParameterBool(char const *,bool)
?getConfigurationParameterPaths@utils@cv@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PEBDAEBV34@@Z;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > cv::utils::getConfigurationParameterPaths(char const *,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?getConfigurationParameterSizeT@utils@cv@@YA_KPEBD_K@Z;unsigned __int64 cv::utils::getConfigurationParameterSizeT(char const *,unsigned __int64)
?getConfigurationParameterString@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::getConfigurationParameterString(char const *,char const *)
?getContext@OpenCLExecutionContext@ocl@cv@@QEBAAEAVContext@23@XZ;class cv::ocl::Context & cv::ocl::OpenCLExecutionContext::getContext(void)
?getContour@IntelligentScissorsMB@segmentation@cv@@QEBAXAEBV?$Point_@H@3@AEBV_OutputArray@3@_N@Z;void cv::segmentation::IntelligentScissorsMB::getContour(class cv::Point_<int> const &,class cv::_OutputArray const &,bool)
?getCounter@TickMeter@cv@@QEBA_JXZ;__int64 cv::TickMeter::getCounter(void)
?getCovarianceMatrixType@EMImpl@ml@cv@@UEBAHXZ;int cv::ml::EMImpl::getCovarianceMatrixType(void)
?getCovs@EMImpl@ml@cv@@UEBAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::ml::EMImpl::getCovs(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getCudaDriverApiErrorMessage@cuda@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::cuda::getCudaDriverApiErrorMessage(int)
?getCudaEnabledDeviceCount@cuda@cv@@YAHXZ;int cv::cuda::getCudaEnabledDeviceCount(void)
?getCurrent@OpenCLExecutionContext@ocl@cv@@SAAEAV123@XZ;class cv::ocl::OpenCLExecutionContext & cv::ocl::OpenCLExecutionContext::getCurrent(void)
?getCurrentRef@OpenCLExecutionContext@ocl@cv@@SAAEAV123@XZ;class cv::ocl::OpenCLExecutionContext & cv::ocl::OpenCLExecutionContext::getCurrentRef(void)
?getDaimlerPeopleDetector@HOGDescriptor@cv@@SA?AV?$vector@MV?$allocator@M@std@@@std@@XZ;class std::vector<float,class std::allocator<float> > cv::HOGDescriptor::getDaimlerPeopleDetector(void)
?getData@TLSDataContainer@cv@@IEBAPEAXXZ;void * cv::TLSDataContainer::getData(void)
?getDecodeType@TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & cv::dnn::dnn4_v20211004::TextRecognitionModel::getDecodeType(void)
?getDefault@Context@ocl@cv@@SAAEAV123@_N@Z;class cv::ocl::Context & cv::ocl::Context::getDefault(bool)
?getDefault@Device@ocl@cv@@SAAEBV123@XZ;class cv::ocl::Device const & cv::ocl::Device::getDefault(void)
?getDefault@Platform@ocl@cv@@SAAEAV123@XZ;class cv::ocl::Platform & cv::ocl::Platform::getDefault(void)
?getDefault@Queue@ocl@cv@@SAAEAV123@XZ;class cv::ocl::Queue & cv::ocl::Queue::getDefault(void)
?getDefaultAllocator@Mat@cv@@SAPEAVMatAllocator@2@XZ;class cv::MatAllocator * cv::Mat::getDefaultAllocator(void)
?getDefaultGrid@SVM@ml@cv@@SA?AVParamGrid@23@H@Z;class cv::ml::ParamGrid cv::ml::SVM::getDefaultGrid(int)
?getDefaultGridPtr@SVM@ml@cv@@SA?AU?$Ptr@VParamGrid@ml@cv@@@3@H@Z;struct cv::Ptr<class cv::ml::ParamGrid> cv::ml::SVM::getDefaultGridPtr(int)
?getDefaultName@AKAZE@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::AKAZE::getDefaultName(void)
?getDefaultName@AffineFeature@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::AffineFeature::getDefaultName(void)
?getDefaultName@AgastFeatureDetector@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::AgastFeatureDetector::getDefaultName(void)
?getDefaultName@Algorithm@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::Algorithm::getDefaultName(void)
?getDefaultName@BRISK@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::BRISK::getDefaultName(void)
?getDefaultName@EMImpl@ml@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ml::EMImpl::getDefaultName(void)
?getDefaultName@FastFeatureDetector@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::FastFeatureDetector::getDefaultName(void)
?getDefaultName@Feature2D@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::Feature2D::getDefaultName(void)
?getDefaultName@GFTTDetector@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::GFTTDetector::getDefaultName(void)
?getDefaultName@KAZE@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::KAZE::getDefaultName(void)
?getDefaultName@MSER@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::MSER::getDefaultName(void)
?getDefaultName@ORB@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ORB::getDefaultName(void)
?getDefaultName@SIFT@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::SIFT::getDefaultName(void)
?getDefaultName@SimpleBlobDetector@cv@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::SimpleBlobDetector::getDefaultName(void)
?getDefaultNewCameraMatrix@cv@@YA?AVMat@1@AEBV_InputArray@1@V?$Size_@H@1@_N@Z;class cv::Mat cv::getDefaultNewCameraMatrix(class cv::_InputArray const &,class cv::Size_<int>,bool)
?getDefaultObjectName@FileStorage@cv@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::FileStorage::getDefaultObjectName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getDefaultPeopleDetector@HOGDescriptor@cv@@SA?AV?$vector@MV?$allocator@M@std@@@std@@XZ;class std::vector<float,class std::allocator<float> > cv::HOGDescriptor::getDefaultPeopleDetector(void)
?getDerivKernels@cv@@YAXAEBV_OutputArray@1@0HHH_NH@Z;void cv::getDerivKernels(class cv::_OutputArray const &,class cv::_OutputArray const &,int,int,int,bool,int)
?getDescriptor@DescriptorCollection@DescriptorMatcher@cv@@QEBA?BVMat@3@H@Z;class cv::Mat const cv::DescriptorMatcher::DescriptorCollection::getDescriptor(int)
?getDescriptor@DescriptorCollection@DescriptorMatcher@cv@@QEBA?BVMat@3@HH@Z;class cv::Mat const cv::DescriptorMatcher::DescriptorCollection::getDescriptor(int,int)
?getDescriptorSize@HOGDescriptor@cv@@QEBA_KXZ;unsigned __int64 cv::HOGDescriptor::getDescriptorSize(void)
?getDescriptors@BOWTrainer@cv@@QEBAAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@XZ;class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const & cv::BOWTrainer::getDescriptors(void)
?getDescriptors@DescriptorCollection@DescriptorMatcher@cv@@QEBAAEBVMat@3@XZ;class cv::Mat const & cv::DescriptorMatcher::DescriptorCollection::getDescriptors(void)
?getDevice@OpenCLExecutionContext@ocl@cv@@QEBAAEAVDevice@23@XZ;class cv::ocl::Device & cv::ocl::OpenCLExecutionContext::getDevice(void)
?getDevice@PlatformInfo@ocl@cv@@QEBAXAEAVDevice@23@H@Z;void cv::ocl::PlatformInfo::getDevice(class cv::ocl::Device &,int)
?getDevice@cuda@cv@@YAHXZ;int cv::cuda::getDevice(void)
?getDevicePtr@GpuMatND@cuda@cv@@QEBAPEAEXZ;unsigned char * cv::cuda::GpuMatND::getDevicePtr(void)
?getDistance@Index@flann@cv@@QEBA?AW4flann_distance_t@cvflann@@XZ;enum cvflann::flann_distance_t cv::flann::Index::getDistance(void)
?getDouble@IndexParams@flann@cv@@QEBANAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z;double cv::flann::IndexParams::getDouble(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double)
?getDst@Timelapser@detail@cv@@UEAAAEBVUMat@3@XZ;class cv::UMat const & cv::detail::Timelapser::getDst(void)
?getEdge@Subdiv2D@cv@@QEBAHHH@Z;int cv::Subdiv2D::getEdge(int,int)
?getEdgeList@Subdiv2D@cv@@QEBAXAEAV?$vector@V?$Vec@M$03@cv@@V?$allocator@V?$Vec@M$03@cv@@@std@@@std@@@Z;void cv::Subdiv2D::getEdgeList(class std::vector<class cv::Vec<float,4>,class std::allocator<class cv::Vec<float,4> > > &)
?getExceptionMode@VideoCapture@cv@@QEAA_NXZ;bool cv::VideoCapture::getExceptionMode(void)
?getExp@softdouble@cv@@QEBAHXZ;int cv::softdouble::getExp(void)
?getExp@softfloat@cv@@QEBAHXZ;int cv::softfloat::getExp(void)
?getFLOPS@Layer@dnn4_v20211004@dnn@cv@@UEBA_JAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@0@Z;__int64 cv::dnn::dnn4_v20211004::Layer::getFLOPS(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &)
?getFLOPS@Net@dnn4_v20211004@dnn@cv@@QEBA_JAEBV?$vector@HV?$allocator@H@std@@@std@@@Z;__int64 cv::dnn::dnn4_v20211004::Net::getFLOPS(class std::vector<int,class std::allocator<int> > const &)
?getFLOPS@Net@dnn4_v20211004@dnn@cv@@QEBA_JAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@Z;__int64 cv::dnn::dnn4_v20211004::Net::getFLOPS(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &)
?getFLOPS@Net@dnn4_v20211004@dnn@cv@@QEBA_JHAEBV?$vector@HV?$allocator@H@std@@@std@@@Z;__int64 cv::dnn::dnn4_v20211004::Net::getFLOPS(int,class std::vector<int,class std::allocator<int> > const &)
?getFLOPS@Net@dnn4_v20211004@dnn@cv@@QEBA_JHAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@Z;__int64 cv::dnn::dnn4_v20211004::Net::getFLOPS(int,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &)
?getFPS@TickMeter@cv@@QEBANXZ;double cv::TickMeter::getFPS(void)
?getFeatureType@CascadeClassifier@cv@@QEBAHXZ;int cv::CascadeClassifier::getFeatureType(void)
?getFirstTopLevelNode@FileStorage@cv@@QEBA?AVFileNode@2@XZ;class cv::FileNode cv::FileStorage::getFirstTopLevelNode(void)
?getFlags@_InputArray@cv@@QEBAHXZ;int cv::_InputArray::getFlags(void)
?getFlags@instr@cv@@YA?AW4FLAGS@12@XZ;enum cv::instr::FLAGS cv::instr::getFlags(void)
?getFontScaleFromHeight@cv@@YANHHH@Z;double cv::getFontScaleFromHeight(int,int,int)
?getFormat@FileStorage@cv@@QEBAHXZ;int cv::FileStorage::getFormat(void)
?getFps@AVIReadContainer@cv@@QEAANXZ;double cv::AVIReadContainer::getFps(void)
?getFrac@softdouble@cv@@QEBA?AU12@XZ;struct cv::softdouble cv::softdouble::getFrac(void)
?getFrac@softfloat@cv@@QEBA?AU12@XZ;struct cv::softfloat cv::softfloat::getFrac(void)
?getFrames@AVIReadContainer@cv@@QEAAAEAV?$deque@U?$pair@_KI@std@@V?$allocator@U?$pair@_KI@std@@@2@@std@@XZ;class std::deque<struct std::pair<unsigned __int64,unsigned int>,class std::allocator<struct std::pair<unsigned __int64,unsigned int> > > & cv::AVIReadContainer::getFrames(void)
?getFramesCount@AVIReadContainer@cv@@QEAA_KXZ;unsigned __int64 cv::AVIReadContainer::getFramesCount(void)
?getGaborKernel@cv@@YA?AVMat@1@V?$Size_@H@1@NNNNNH@Z;class cv::Mat cv::getGaborKernel(class cv::Size_<int>,double,double,double,double,double,int)
?getGainMap@BlocksCompensator@detail@cv@@AEAA?AVUMat@3@AEBVChannelsCompensator@23@HV?$Size_@H@3@@Z;class cv::UMat cv::detail::BlocksCompensator::getGainMap(class cv::detail::ChannelsCompensator const &,int,class cv::Size_<int>)
?getGainMap@BlocksCompensator@detail@cv@@AEAA?AVUMat@3@AEBVGainCompensator@23@HV?$Size_@H@3@@Z;class cv::UMat cv::detail::BlocksCompensator::getGainMap(class cv::detail::GainCompensator const &,int,class cv::Size_<int>)
?getGaussianKernel@cv@@YA?AVMat@1@HNH@Z;class cv::Mat cv::getGaussianKernel(int,double,int)
?getGlobalLogTag@internal@logging@utils@cv@@YAPEAULogTag@234@XZ;struct cv::utils::logging::LogTag * cv::utils::logging::internal::getGlobalLogTag(void)
?getGpuMat@_InputArray@cv@@QEBA?AVGpuMat@cuda@2@XZ;class cv::cuda::GpuMat cv::_InputArray::getGpuMat(void)
?getGpuMatRef@_OutputArray@cv@@QEBAAEAVGpuMat@cuda@2@XZ;class cv::cuda::GpuMat & cv::_OutputArray::getGpuMatRef(void)
?getGpuMatVecRef@_OutputArray@cv@@QEBAAEAV?$vector@VGpuMat@cuda@cv@@V?$allocator@VGpuMat@cuda@cv@@@std@@@std@@XZ;class std::vector<class cv::cuda::GpuMat,class std::allocator<class cv::cuda::GpuMat> > & cv::_OutputArray::getGpuMatVecRef(void)
?getGpuMatVector@_InputArray@cv@@QEBAXAEAV?$vector@VGpuMat@cuda@cv@@V?$allocator@VGpuMat@cuda@cv@@@std@@@std@@@Z;void cv::_InputArray::getGpuMatVector(class std::vector<class cv::cuda::GpuMat,class std::allocator<class cv::cuda::GpuMat> > &)
?getGradient@Function@MinProblemSolver@cv@@UEAAXPEBNPEAN@Z;void cv::MinProblemSolver::Function::getGradient(double const *,double *)
?getGradientEps@Function@MinProblemSolver@cv@@UEBANXZ;double cv::MinProblemSolver::Function::getGradientEps(void)
?getGraph@detail@gapi@cv@@YA?AVGComputation@3@AEBV?$vector@DV?$allocator@D@std@@@std@@@Z;class cv::GComputation cv::gapi::detail::getGraph(class std::vector<char,class std::allocator<char> > const &)
?getHardwareFeatureName@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::getHardwareFeatureName(int)
?getHeight@AVIReadContainer@cv@@QEAAIXZ;unsigned int cv::AVIReadContainer::getHeight(void)
?getHeight@AVIWriteContainer@cv@@QEBAHXZ;int cv::AVIWriteContainer::getHeight(void)
?getHostMemRef@_OutputArray@cv@@QEBAAEAVHostMem@cuda@2@XZ;class cv::cuda::HostMem & cv::_OutputArray::getHostMemRef(void)
?getImpl@Context@ocl@cv@@QEBAPEAUImpl@123@XZ;struct cv::ocl::Context::Impl * cv::ocl::Context::getImpl(void)
?getImpl@Device@ocl@cv@@QEBAPEAUImpl@123@XZ;struct cv::ocl::Device::Impl * cv::ocl::Device::getImpl(void)
?getImpl@IntelligentScissorsMB@segmentation@cv@@QEBAPEAUImpl@123@XZ;struct cv::segmentation::IntelligentScissorsMB::Impl * cv::segmentation::IntelligentScissorsMB::getImpl(void)
?getImpl@Model@dnn4_v20211004@dnn@cv@@QEBAPEAUImpl@1234@XZ;struct cv::dnn::dnn4_v20211004::Model::Impl * cv::dnn::dnn4_v20211004::Model::getImpl(void)
?getImpl@Platform@ocl@cv@@QEBAPEAUImpl@123@XZ;struct cv::ocl::Platform::Impl * cv::ocl::Platform::getImpl(void)
?getImpl@Program@ocl@cv@@QEBAPEAUImpl@123@XZ;struct cv::ocl::Program::Impl * cv::ocl::Program::getImpl(void)
?getImpl@ProgramSource@ocl@cv@@QEBAPEAUImpl@123@XZ;struct cv::ocl::ProgramSource::Impl * cv::ocl::ProgramSource::getImpl(void)
?getImpl@Queue@ocl@cv@@QEBAPEAUImpl@123@XZ;struct cv::ocl::Queue::Impl * cv::ocl::Queue::getImpl(void)
?getImplRef@Model@dnn4_v20211004@dnn@cv@@QEBAAEAUImpl@1234@XZ;struct cv::dnn::dnn4_v20211004::Model::Impl & cv::dnn::dnn4_v20211004::Model::getImplRef(void)
?getInEdgeByPort@GModel@gimpl@cv@@YA?AV?$Handle@VEdge@ade@@@ade@@AEBV?$ConstTypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@5@AEBV?$Handle@VNode@ade@@@5@_K@Z;class ade::Handle<class ade::Edge> cv::gimpl::GModel::getInEdgeByPort(class ade::ConstTypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> const &,class ade::Handle<class ade::Node> const &,unsigned __int64)
?getInStream@detail@s11n@gapi@cv@@YA?AV?$unique_ptr@UIIStream@s11n@gapi@cv@@U?$default_delete@UIIStream@s11n@gapi@cv@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@6@@Z;class std::unique_ptr<struct cv::gapi::s11n::IIStream,struct std::default_delete<struct cv::gapi::s11n::IIStream> > cv::gapi::s11n::detail::getInStream(class std::vector<char,class std::allocator<char> > const &)
?getInferenceEngineBackendType@dnn4_v20211004@dnn@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::dnn::dnn4_v20211004::getInferenceEngineBackendType(void)
?getInferenceEngineCPUType@dnn4_v20211004@dnn@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::dnn::dnn4_v20211004::getInferenceEngineCPUType(void)
?getInferenceEngineVPUType@dnn4_v20211004@dnn@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::dnn::dnn4_v20211004::getInferenceEngineVPUType(void)
?getInliers@MatchesInfo@detail@cv@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ;class std::vector<unsigned char,class std::allocator<unsigned char> > cv::detail::MatchesInfo::getInliers(void)
?getInputDetails@Net@dnn4_v20211004@dnn@cv@@QEBAXAEAV?$vector@MV?$allocator@M@std@@@std@@AEAV?$vector@HV?$allocator@H@std@@@6@@Z;void cv::dnn::dnn4_v20211004::Net::getInputDetails(class std::vector<float,class std::allocator<float> > &,class std::vector<int,class std::allocator<int> > &)
?getInputMat@cuda@cv@@YA?AVGpuMat@12@AEBV_InputArray@2@AEAVStream@12@@Z;class cv::cuda::GpuMat cv::cuda::getInputMat(class cv::_InputArray const &,class cv::cuda::Stream &)
?getInt@IndexParams@flann@cv@@QEBAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;int cv::flann::IndexParams::getInt(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?getIntValue@DictValue@dnn4_v20211004@dnn@cv@@QEBAHH@Z;int cv::dnn::dnn4_v20211004::DictValue::getIntValue(int)
?getIppErrorLocation@ipp@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ipp::getIppErrorLocation(void)
?getIppFeatures@ipp@cv@@YA_KXZ;unsigned __int64 cv::ipp::getIppFeatures(void)
?getIppStatus@ipp@cv@@YAHXZ;int cv::ipp::getIppStatus(void)
?getIppTopFeatures@ipp@cv@@YA_KXZ;unsigned __int64 cv::ipp::getIppTopFeatures(void)
?getIppVersion@ipp@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ipp::getIppVersion(void)
?getKeypoints@ImageFeatures@detail@cv@@QEAA?AV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@XZ;class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > cv::detail::ImageFeatures::getKeypoints(void)
?getLastConfidenceMap@TrackerModel@tracking@detail@cv@@QEBAAEBV?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@XZ;class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > const & cv::detail::tracking::TrackerModel::getLastConfidenceMap(void)
?getLastTargetState@TrackerModel@tracking@detail@cv@@QEBA?AU?$Ptr@VTrackerTargetState@tracking@detail@cv@@@4@XZ;struct cv::Ptr<class cv::detail::tracking::TrackerTargetState> cv::detail::tracking::TrackerModel::getLastTargetState(void)
?getLayer@Net@dnn4_v20211004@dnn@cv@@QEAA?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@UDictValue@234@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> cv::dnn::dnn4_v20211004::Net::getLayer(struct cv::dnn::dnn4_v20211004::DictValue)
?getLayerId@Net@dnn4_v20211004@dnn@cv@@QEAAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;int cv::dnn::dnn4_v20211004::Net::getLayerId(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getLayerInputs@Net@dnn4_v20211004@dnn@cv@@QEAA?AV?$vector@U?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@cv@@V?$allocator@U?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@cv@@@std@@@std@@UDictValue@234@@Z;class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> > > cv::dnn::dnn4_v20211004::Net::getLayerInputs(struct cv::dnn::dnn4_v20211004::DictValue)
?getLayerNames@Net@dnn4_v20211004@dnn@cv@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > cv::dnn::dnn4_v20211004::Net::getLayerNames(void)
?getLayerShapes@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@HV?$allocator@H@std@@@std@@HAEAV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@6@1@Z;void cv::dnn::dnn4_v20211004::Net::getLayerShapes(class std::vector<int,class std::allocator<int> > const &,int,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &)
?getLayerShapes@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@HAEAV56@1@Z;void cv::dnn::dnn4_v20211004::Net::getLayerShapes(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,int,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &)
?getLayerTypes@Net@dnn4_v20211004@dnn@cv@@QEBAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z;void cv::dnn::dnn4_v20211004::Net::getLayerTypes(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &)
?getLayersCount@Net@dnn4_v20211004@dnn@cv@@QEBAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;int cv::dnn::dnn4_v20211004::Net::getLayersCount(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getLayersShapes@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@HV?$allocator@H@std@@@std@@AEAV56@AEAV?$vector@V?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@V?$allocator@V?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@2@@6@2@Z;void cv::dnn::dnn4_v20211004::Net::getLayersShapes(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > &,class std::vector<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >,class std::allocator<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > > > &,class std::vector<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >,class std::allocator<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > > > &)
?getLayersShapes@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@AEAV?$vector@HV?$allocator@H@std@@@6@AEAV?$vector@V?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@V?$allocator@V?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@2@@6@2@Z;void cv::dnn::dnn4_v20211004::Net::getLayersShapes(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,class std::vector<int,class std::allocator<int> > &,class std::vector<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >,class std::allocator<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > > > &,class std::vector<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >,class std::allocator<class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > > > &)
?getLeadingEdgeList@Subdiv2D@cv@@QEBAXAEAV?$vector@HV?$allocator@H@std@@@std@@@Z;void cv::Subdiv2D::getLeadingEdgeList(class std::vector<int,class std::allocator<int> > &)
?getLocalIdx@DescriptorCollection@DescriptorMatcher@cv@@QEBAXHAEAH0@Z;void cv::DescriptorMatcher::DescriptorCollection::getLocalIdx(int,int &,int &)
?getLogLevel@logging@utils@cv@@YA?AW4LogLevel@123@XZ;enum cv::utils::logging::LogLevel cv::utils::logging::getLogLevel(void)
?getLogTagLevel@logging@utils@cv@@YA?AW4LogLevel@123@PEBD@Z;enum cv::utils::logging::LogLevel cv::utils::logging::getLogTagLevel(char const *)
?getMaskGenerator@CascadeClassifier@cv@@QEAA?AU?$Ptr@VMaskGenerator@BaseCascadeClassifier@cv@@@2@XZ;struct cv::Ptr<class cv::BaseCascadeClassifier::MaskGenerator> cv::CascadeClassifier::getMaskGenerator(void)
?getMat@UMat@cv@@QEBA?AVMat@2@W4AccessFlag@2@@Z;class cv::Mat cv::UMat::getMat(enum cv::AccessFlag)
?getMat@_InputArray@cv@@QEBA?AVMat@2@H@Z;class cv::Mat cv::_InputArray::getMat(int)
?getMatGains@BlocksCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::BlocksCompensator::getMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getMatGains@BlocksGainCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::BlocksGainCompensator::getMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getMatGains@ChannelsCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::ChannelsCompensator::getMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getMatGains@ExposureCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::ExposureCompensator::getMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getMatGains@GainCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::GainCompensator::getMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getMatGains@NoExposureCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::NoExposureCompensator::getMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getMatRef@_OutputArray@cv@@QEBAAEAVMat@2@H@Z;class cv::Mat & cv::_OutputArray::getMatRef(int)
?getMatVector@_InputArray@cv@@QEBAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::_InputArray::getMatVector(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?getMat_@_InputArray@cv@@QEBA?AVMat@2@H@Z;class cv::Mat cv::_InputArray::getMat_(int)
?getMatches@MatchesInfo@detail@cv@@QEAA?AV?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@XZ;class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > cv::detail::MatchesInfo::getMatches(void)
?getMaxCandidates@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEBAHXZ;int cv::dnn::dnn4_v20211004::TextDetectionModel_DB::getMaxCandidates(void)
?getMeanMs@NodeData@instr@cv@@QEBANXZ;double cv::instr::NodeData::getMeanMs(void)
?getMeans@EMImpl@ml@cv@@UEBA?AVMat@3@XZ;class cv::Mat cv::ml::EMImpl::getMeans(void)
?getMemoryConsumption@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@HV?$allocator@H@std@@@std@@AEAV56@AEAV?$vector@_KV?$allocator@_K@std@@@6@2@Z;void cv::dnn::dnn4_v20211004::Net::getMemoryConsumption(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > &,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > &,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > &)
?getMemoryConsumption@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@HV?$allocator@H@std@@@std@@AEA_K1@Z;void cv::dnn::dnn4_v20211004::Net::getMemoryConsumption(class std::vector<int,class std::allocator<int> > const &,unsigned __int64 &,unsigned __int64 &)
?getMemoryConsumption@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@AEAV?$vector@HV?$allocator@H@std@@@6@AEAV?$vector@_KV?$allocator@_K@std@@@6@2@Z;void cv::dnn::dnn4_v20211004::Net::getMemoryConsumption(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,class std::vector<int,class std::allocator<int> > &,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > &,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > &)
?getMemoryConsumption@Net@dnn4_v20211004@dnn@cv@@QEBAXAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@AEA_K1@Z;void cv::dnn::dnn4_v20211004::Net::getMemoryConsumption(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,unsigned __int64 &,unsigned __int64 &)
?getMemoryConsumption@Net@dnn4_v20211004@dnn@cv@@QEBAXHAEBV?$vector@HV?$allocator@H@std@@@std@@AEA_K1@Z;void cv::dnn::dnn4_v20211004::Net::getMemoryConsumption(int,class std::vector<int,class std::allocator<int> > const &,unsigned __int64 &,unsigned __int64 &)
?getMemoryConsumption@Net@dnn4_v20211004@dnn@cv@@QEBAXHAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@AEA_K1@Z;void cv::dnn::dnn4_v20211004::Net::getMemoryConsumption(int,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,unsigned __int64 &,unsigned __int64 &)
?getMemoryShapes@Layer@dnn4_v20211004@dnn@cv@@UEBA_NAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@HAEAV56@1@Z;bool cv::dnn::dnn4_v20211004::Layer::getMemoryShapes(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,int,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &)
?getMetaArgs@detail@gapi@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@5@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::gapi::detail::getMetaArgs(class std::vector<char,class std::allocator<char> > const &)
?getMouseWheelDelta@cv@@YAHH@Z;int cv::getMouseWheelDelta(int)
?getMoviPointer@AVIWriteContainer@cv@@QEBA_KXZ;unsigned __int64 cv::AVIWriteContainer::getMoviPointer(void)
?getNMSThreshold@TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEBAMXZ;float cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::getNMSThreshold(void)
?getName@DynamicLib@impl@plugin@cv@@QEBA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const cv::plugin::impl::DynamicLib::getName(void)
?getNearestPoint@cv@@YAHAEBV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@std@@M@Z;int cv::getNearestPoint(class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > const &,float)
?getNetwork_@Model@dnn4_v20211004@dnn@cv@@QEAAAEAVNet@234@XZ;class cv::dnn::dnn4_v20211004::Net & cv::dnn::dnn4_v20211004::Model::getNetwork_(void)
?getNetwork_@Model@dnn4_v20211004@dnn@cv@@QEBAAEAVNet@234@XZ;class cv::dnn::dnn4_v20211004::Net & cv::dnn::dnn4_v20211004::Model::getNetwork_(void)
?getNmsAcrossClasses@DetectionModel@dnn4_v20211004@dnn@cv@@QEAA_NXZ;bool cv::dnn::dnn4_v20211004::DetectionModel::getNmsAcrossClasses(void)
?getNppErrorMessage@cuda@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::cuda::getNppErrorMessage(int)
?getNrFeeds@BlocksCompensator@detail@cv@@QEAAHXZ;int cv::detail::BlocksCompensator::getNrFeeds(void)
?getNrFeeds@ChannelsCompensator@detail@cv@@QEAAHXZ;int cv::detail::ChannelsCompensator::getNrFeeds(void)
?getNrFeeds@GainCompensator@detail@cv@@QEAAHXZ;int cv::detail::GainCompensator::getNrFeeds(void)
?getNrGainsFilteringIterations@BlocksCompensator@detail@cv@@QEBAHXZ;int cv::detail::BlocksCompensator::getNrGainsFilteringIterations(void)
?getNumThreads@cv@@YAHXZ;int cv::getNumThreads(void)
?getNumberOfCPUs@cv@@YAHXZ;int cv::getNumberOfCPUs(void)
?getOGlBuffer@_InputArray@cv@@QEBA?AVBuffer@ogl@2@XZ;class cv::ogl::Buffer cv::_InputArray::getOGlBuffer(void)
?getOGlBufferRef@_OutputArray@cv@@QEBAAEAVBuffer@ogl@2@XZ;class cv::ogl::Buffer & cv::_OutputArray::getOGlBufferRef(void)
?getOOBError@RTrees@ml@cv@@UEBANXZ;double cv::ml::RTrees::getOOBError(void)
?getObj@_InputArray@cv@@QEBAPEAXXZ;void * cv::_InputArray::getObj(void)
?getObjects@DetectionBasedTracker@cv@@UEBAXAEAV?$vector@U?$pair@V?$Rect_@H@cv@@H@std@@V?$allocator@U?$pair@V?$Rect_@H@cv@@H@std@@@2@@std@@@Z;void cv::DetectionBasedTracker::getObjects(class std::vector<struct std::pair<class cv::Rect_<int>,int>,class std::allocator<struct std::pair<class cv::Rect_<int>,int> > > &)
?getObjects@DetectionBasedTracker@cv@@UEBAXAEAV?$vector@UExtObject@DetectionBasedTracker@cv@@V?$allocator@UExtObject@DetectionBasedTracker@cv@@@std@@@std@@@Z;void cv::DetectionBasedTracker::getObjects(class std::vector<struct cv::DetectionBasedTracker::ExtObject,class std::allocator<struct cv::DetectionBasedTracker::ExtObject> > &)
?getObjects@DetectionBasedTracker@cv@@UEBAXAEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@@Z;void cv::DetectionBasedTracker::getObjects(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &)
?getOctaves@BRISK@cv@@UEBAHXZ;int cv::BRISK::getOctaves(void)
?getOldCascade@CascadeClassifier@cv@@QEAAPEAXXZ;void * cv::CascadeClassifier::getOldCascade(void)
?getOpenCLAllocator@ocl@cv@@YAPEAVMatAllocator@2@XZ;class cv::MatAllocator * cv::ocl::getOpenCLAllocator(void)
?getOpenCLAllocatorStatistics@ocl@cv@@YAAEAVAllocatorStatisticsInterface@utils@2@XZ;class cv::utils::AllocatorStatisticsInterface & cv::ocl::getOpenCLAllocatorStatistics(void)
?getOpenCLContextProperty@Context@ocl@cv@@QEBAPEAXH@Z;void * cv::ocl::Context::getOpenCLContextProperty(int)
?getOpenCLErrorString@ocl@cv@@YAPEBDH@Z;char const * cv::ocl::getOpenCLErrorString(int)
?getOptimalDFTSize@cv@@YAHH@Z;int cv::getOptimalDFTSize(int)
?getOptimalNewCameraMatrix@cv@@YA?AVMat@1@AEBV_InputArray@1@0V?$Size_@H@1@N1PEAV?$Rect_@H@1@_N@Z;class cv::Mat cv::getOptimalNewCameraMatrix(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,double,class cv::Size_<int>,class cv::Rect_<int> *,bool)
?getOriginalWindowSize@CascadeClassifier@cv@@QEBA?AV?$Size_@H@2@XZ;class cv::Size_<int> cv::CascadeClassifier::getOriginalWindowSize(void)
?getOutputDetails@Net@dnn4_v20211004@dnn@cv@@QEBAXAEAV?$vector@MV?$allocator@M@std@@@std@@AEAV?$vector@HV?$allocator@H@std@@@6@@Z;void cv::dnn::dnn4_v20211004::Net::getOutputDetails(class std::vector<float,class std::allocator<float> > &,class std::vector<int,class std::allocator<int> > &)
?getOutputMat@cuda@cv@@YA?AVGpuMat@12@AEBV_OutputArray@2@HHHAEAVStream@12@@Z;class cv::cuda::GpuMat cv::cuda::getOutputMat(class cv::_OutputArray const &,int,int,int,class cv::cuda::Stream &)
?getParam@Net@dnn4_v20211004@dnn@cv@@QEAA?AVMat@4@UDictValue@234@H@Z;class cv::Mat cv::dnn::dnn4_v20211004::Net::getParam(struct cv::dnn::dnn4_v20211004::DictValue,int)
?getParameters@DetectionBasedTracker@cv@@QEBAAEBUParameters@12@XZ;struct cv::DetectionBasedTracker::Parameters const & cv::DetectionBasedTracker::getParameters(void)
?getParent@fs@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV45@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::fs::getParent(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getParent@fs@utils@cv@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV45@@Z;class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > cv::utils::fs::getParent(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &)
?getPathToApplication@CommandLineParser@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::CommandLineParser::getPathToApplication(void)
?getPerfProfile@Net@dnn4_v20211004@dnn@cv@@QEAA_JAEAV?$vector@NV?$allocator@N@std@@@std@@@Z;__int64 cv::dnn::dnn4_v20211004::Net::getPerfProfile(class std::vector<double,class std::allocator<double> > &)
?getPerspectiveTransform@cv@@YA?AVMat@1@AEBV_InputArray@1@0H@Z;class cv::Mat cv::getPerspectiveTransform(class cv::_InputArray const &,class cv::_InputArray const &,int)
?getPerspectiveTransform@cv@@YA?AVMat@1@QEBV?$Point_@M@1@0H@Z;class cv::Mat cv::getPerspectiveTransform(class cv::Point_<float> const * const,class cv::Point_<float> const * const,int)
?getPlatfomsInfo@ocl@cv@@YAXAEAV?$vector@VPlatformInfo@ocl@cv@@V?$allocator@VPlatformInfo@ocl@cv@@@std@@@std@@@Z;void cv::ocl::getPlatfomsInfo(class std::vector<class cv::ocl::PlatformInfo,class std::allocator<class cv::ocl::PlatformInfo> > &)
?getPoint@KDTree@ml@cv@@QEBAPEBMHPEAH@Z;float const * cv::ml::KDTree::getPoint(int,int *)
?getPoints@KDTree@ml@cv@@QEBAXAEBV_InputArray@3@AEBV_OutputArray@3@1@Z;void cv::ml::KDTree::getPoints(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?getPolygonThreshold@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEBAMXZ;float cv::dnn::dnn4_v20211004::TextDetectionModel_DB::getPolygonThreshold(void)
?getPrefix@Program@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Program::getPrefix(void)
?getPrefix@Program@ocl@cv@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV45@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Program::getPrefix(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getProfilingQueue@Queue@ocl@cv@@QEBAAEBV123@XZ;class cv::ocl::Queue const & cv::ocl::Queue::getProfilingQueue(void)
?getProg@Context@ocl@cv@@QEAA?AVProgram@23@AEBVProgramSource@23@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV67@@Z;class cv::ocl::Program cv::ocl::Context::getProg(class cv::ocl::ProgramSource const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
?getQueue@OpenCLExecutionContext@ocl@cv@@QEBAAEAVQueue@23@XZ;class cv::ocl::Queue & cv::ocl::OpenCLExecutionContext::getQueue(void)
?getRTfromHomogeneous@AffineWarper@detail@cv@@IEAAXAEBV_InputArray@3@AEAVMat@3@1@Z;void cv::detail::AffineWarper::getRTfromHomogeneous(class cv::_InputArray const &,class cv::Mat &,class cv::Mat &)
?getRealValue@DictValue@dnn4_v20211004@dnn@cv@@QEBANH@Z;double cv::dnn::dnn4_v20211004::DictValue::getRealValue(int)
?getRecall@cv@@YAMAEBV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@std@@M@Z;float cv::getRecall(class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > const &,float)
?getRectSubPix@cv@@YAXAEBV_InputArray@1@V?$Size_@H@1@V?$Point_@M@1@AEBV_OutputArray@1@H@Z;void cv::getRectSubPix(class cv::_InputArray const &,class cv::Size_<int>,class cv::Point_<float>,class cv::_OutputArray const &,int)
?getResponses@TrackerFeatureSet@tracking@detail@cv@@QEBAAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@XZ;class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const & cv::detail::tracking::TrackerFeatureSet::getResponses(void)
?getRotationMatrix2D@cv@@YA?AVMat@1@V?$Point_@M@1@NN@Z;class cv::Mat cv::getRotationMatrix2D(class cv::Point_<float>,double,double)
?getRotationMatrix2D_@cv@@YA?AV?$Matx@N$01$02@1@V?$Point_@M@1@NN@Z;class cv::Matx<double,2,3> cv::getRotationMatrix2D_(class cv::Point_<float>,double,double)
?getRunArgs@detail@gapi@cv@@YA?AV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@5@@Z;class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > cv::gapi::detail::getRunArgs(class std::vector<char,class std::allocator<char> > const &)
?getSamplers@TrackerSampler@tracking@detail@cv@@QEBAAEBV?$vector@U?$Ptr@VTrackerSamplerAlgorithm@tracking@detail@cv@@@cv@@V?$allocator@U?$Ptr@VTrackerSamplerAlgorithm@tracking@detail@cv@@@cv@@@std@@@std@@XZ;class std::vector<struct cv::Ptr<class cv::detail::tracking::TrackerSamplerAlgorithm>,class std::allocator<struct cv::Ptr<class cv::detail::tracking::TrackerSamplerAlgorithm> > > const & cv::detail::tracking::TrackerSampler::getSamplers(void)
?getSamples@TrackerSampler@tracking@detail@cv@@QEBAAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@XZ;class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const & cv::detail::tracking::TrackerSampler::getSamples(void)
?getScale@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::getScale(void)
?getScale@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::getScale(void)
?getScale@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::getScale(void)
?getScale@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::getScale(void)
?getScale@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::getScale(void)
?getScale@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::getScale(void)
?getScale@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::getScale(void)
?getScale@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::getScale(void)
?getScale@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::getScale(void)
?getScale@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::getScale(void)
?getScale@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::getScale(void)
?getScale@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::getScale(void)
?getScale@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::getScale(void)
?getScale@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEBAMXZ;float cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::getScale(void)
?getScale@PyRotationWarper@cv@@QEBAMXZ;float cv::PyRotationWarper::getScale(void)
?getScale@RotationWarper@detail@cv@@UEBAMXZ;float cv::detail::RotationWarper::getScale(void)
?getScaleShift@Layer@dnn4_v20211004@dnn@cv@@UEBAXAEAVMat@4@0@Z;void cv::dnn::dnn4_v20211004::Layer::getScaleShift(class cv::Mat &,class cv::Mat &)
?getScaleZeropoint@Layer@dnn4_v20211004@dnn@cv@@UEBAXAEAMAEAH@Z;void cv::dnn::dnn4_v20211004::Layer::getScaleZeropoint(float &,int &)
?getSeamTips@DpSeamFinder@detail@cv@@AEAA_NHHAEAV?$Point_@H@3@0@Z;bool cv::detail::DpSeamFinder::getSeamTips(int,int,class cv::Point_<int> &,class cv::Point_<int> &)
?getSeqElem@cv@@YAPEACPEBUCvSeq@@H@Z;signed char * cv::getSeqElem(struct CvSeq const *,int)
?getSign@softdouble@cv@@QEBA_NXZ;bool cv::softdouble::getSign(void)
?getSign@softfloat@cv@@QEBA_NXZ;bool cv::softfloat::getSign(void)
?getSimilarityThreshold@BlocksCompensator@detail@cv@@QEBANXZ;double cv::detail::BlocksCompensator::getSimilarityThreshold(void)
?getSimilarityThreshold@ChannelsCompensator@detail@cv@@QEBANXZ;double cv::detail::ChannelsCompensator::getSimilarityThreshold(void)
?getSimilarityThreshold@GainCompensator@detail@cv@@QEBANXZ;double cv::detail::GainCompensator::getSimilarityThreshold(void)
?getStdAllocator@Mat@cv@@SAPEAVMatAllocator@2@XZ;class cv::MatAllocator * cv::Mat::getStdAllocator(void)
?getStdAllocator@UMat@cv@@SAPEAVMatAllocator@2@XZ;class cv::MatAllocator * cv::UMat::getStdAllocator(void)
?getStreamBackendPluginVersion@videoio_registry@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4VideoCaptureAPIs@2@AEAH1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::videoio_registry::getStreamBackendPluginVersion(enum cv::VideoCaptureAPIs,int &,int &)
?getStreamBackends@videoio_registry@cv@@YA?AV?$vector@W4VideoCaptureAPIs@cv@@V?$allocator@W4VideoCaptureAPIs@cv@@@std@@@std@@XZ;class std::vector<enum cv::VideoCaptureAPIs,class std::allocator<enum cv::VideoCaptureAPIs> > cv::videoio_registry::getStreamBackends(void)
?getStreamPos@AVIWriteContainer@cv@@QEBA_KXZ;unsigned __int64 cv::AVIWriteContainer::getStreamPos(void)
?getString@IndexParams@flann@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV45@0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::flann::IndexParams::getString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getStringValue@DictValue@dnn4_v20211004@dnn@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::dnn::dnn4_v20211004::DictValue::getStringValue(int)
?getStructuringElement@cv@@YA?AVMat@1@HV?$Size_@H@1@V?$Point_@H@1@@Z;class cv::Mat cv::getStructuringElement(int,class cv::Size_<int>,class cv::Point_<int>)
?getSubMatrix@TrainData@ml@cv@@SA?AVMat@3@AEBV43@0H@Z;class cv::Mat cv::ml::TrainData::getSubMatrix(class cv::Mat const &,class cv::Mat const &,int)
?getSubVector@TrainData@ml@cv@@SA?AVMat@3@AEBV43@0@Z;class cv::Mat cv::ml::TrainData::getSubVector(class cv::Mat const &,class cv::Mat const &)
?getSymbol@DynamicLib@impl@plugin@cv@@QEBAPEAXPEBD@Z;void * cv::plugin::impl::DynamicLib::getSymbol(char const *)
?getSz@_InputArray@cv@@QEBA?AV?$Size_@H@2@XZ;class cv::Size_<int> cv::_InputArray::getSz(void)
?getTargetHeight@TrackerTargetState@tracking@detail@cv@@QEBAHXZ;int cv::detail::tracking::TrackerTargetState::getTargetHeight(void)
?getTargetPosition@TrackerTargetState@tracking@detail@cv@@QEBA?AV?$Point_@M@4@XZ;class cv::Point_<float> cv::detail::tracking::TrackerTargetState::getTargetPosition(void)
?getTargetWidth@TrackerTargetState@tracking@detail@cv@@QEBAHXZ;int cv::detail::tracking::TrackerTargetState::getTargetWidth(void)
?getTermCriteria@EMImpl@ml@cv@@UEBA?AVTermCriteria@3@XZ;class cv::TermCriteria cv::ml::EMImpl::getTermCriteria(void)
?getTextSize@FTTextRender@draw@wip@gapi@cv@@QEAA?AV?$Size_@H@5@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HPEAH@Z;class cv::Size_<int> cv::gapi::wip::draw::FTTextRender::getTextSize(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,int,int *)
?getTextSize@cv@@YA?AV?$Size_@H@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HNHPEAH@Z;class cv::Size_<int> cv::getTextSize(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,double,int,int *)
?getThreadID@utils@cv@@YAHXZ;int cv::utils::getThreadID(void)
?getThreadNum@cv@@YAHXZ;int cv::getThreadNum(void)
?getThreshold@BRISK@cv@@UEBAHXZ;int cv::BRISK::getThreshold(void)
?getTickCount@cv@@YA_JXZ;__int64 cv::getTickCount(void)
?getTickFrequency@cv@@YANXZ;double cv::getTickFrequency(void)
?getTimeMicro@TickMeter@cv@@QEBANXZ;double cv::TickMeter::getTimeMicro(void)
?getTimeMilli@TickMeter@cv@@QEBANXZ;double cv::TickMeter::getTimeMilli(void)
?getTimeSec@TickMeter@cv@@QEBANXZ;double cv::TickMeter::getTimeSec(void)
?getTimeTicks@TickMeter@cv@@QEBA_JXZ;__int64 cv::TickMeter::getTimeTicks(void)
?getTotalMs@NodeData@instr@cv@@QEBANXZ;double cv::instr::NodeData::getTotalMs(void)
?getTrace@instr@cv@@YAPEAV?$Node@VNodeData@instr@cv@@@2@XZ;class cv::Node<class cv::instr::NodeData> * cv::instr::getTrace(void)
?getTraceManager@details@trace@utils@cv@@YAAEAVTraceManager@1234@XZ;class cv::utils::trace::details::TraceManager & cv::utils::trace::details::getTraceManager(void)
?getTrackbarPos@cv@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;int cv::getTrackbarPos(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getTrackerFeatures@TrackerFeatureSet@tracking@detail@cv@@QEBAAEBV?$vector@U?$Ptr@VTrackerFeature@tracking@detail@cv@@@cv@@V?$allocator@U?$Ptr@VTrackerFeature@tracking@detail@cv@@@cv@@@std@@@std@@XZ;class std::vector<struct cv::Ptr<class cv::detail::tracking::TrackerFeature>,class std::allocator<struct cv::Ptr<class cv::detail::tracking::TrackerFeature> > > const & cv::detail::tracking::TrackerFeatureSet::getTrackerFeatures(void)
?getTrackerStateEstimator@TrackerModel@tracking@detail@cv@@QEBA?AU?$Ptr@VTrackerStateEstimator@tracking@detail@cv@@@4@XZ;struct cv::Ptr<class cv::detail::tracking::TrackerStateEstimator> cv::detail::tracking::TrackerModel::getTrackerStateEstimator(void)
?getTrainDescriptors@DescriptorMatcher@cv@@QEBAAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@XZ;class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const & cv::DescriptorMatcher::getTrainDescriptors(void)
?getTriangleList@Subdiv2D@cv@@QEBAXAEAV?$vector@V?$Vec@M$05@cv@@V?$allocator@V?$Vec@M$05@cv@@@std@@@std@@@Z;void cv::Subdiv2D::getTriangleList(class std::vector<class cv::Vec<float,6>,class std::allocator<class cv::Vec<float,6> > > &)
?getTypeFromD3DFORMAT@directx@cv@@YAHH@Z;int cv::directx::getTypeFromD3DFORMAT(int)
?getTypeFromDXGI_FORMAT@directx@cv@@YAHH@Z;int cv::directx::getTypeFromDXGI_FORMAT(int)
?getU32@ByteMemoryInStream@s11n@gapi@cv@@AEAAIXZ;unsigned int cv::gapi::s11n::ByteMemoryInStream::getU32(void)
?getUMat@Mat@cv@@QEBA?AVUMat@2@W4AccessFlag@2@W4UMatUsageFlags@2@@Z;class cv::UMat cv::Mat::getUMat(enum cv::AccessFlag,enum cv::UMatUsageFlags)
?getUMat@_InputArray@cv@@QEBA?AVUMat@2@H@Z;class cv::UMat cv::_InputArray::getUMat(int)
?getUMatRef@_OutputArray@cv@@QEBAAEAVUMat@2@H@Z;class cv::UMat & cv::_OutputArray::getUMatRef(int)
?getUMatVector@_InputArray@cv@@QEBAXAEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;void cv::_InputArray::getUMatVector(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?getUnclipRatio@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEBANXZ;double cv::dnn::dnn4_v20211004::TextDetectionModel_DB::getUnclipRatio(void)
?getUnconnectedOutLayers@Net@dnn4_v20211004@dnn@cv@@QEBA?AV?$vector@HV?$allocator@H@std@@@std@@XZ;class std::vector<int,class std::allocator<int> > cv::dnn::dnn4_v20211004::Net::getUnconnectedOutLayers(void)
?getUnconnectedOutLayersNames@Net@dnn4_v20211004@dnn@cv@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > cv::dnn::dnn4_v20211004::Net::getUnconnectedOutLayersNames(void)
?getUpdateGain@ExposureCompensator@detail@cv@@QEAA_NXZ;bool cv::detail::ExposureCompensator::getUpdateGain(void)
?getUserContext@Context@ocl@cv@@QEAA?AV?$shared_ptr@VUserContext@Context@ocl@cv@@@std@@Vtype_index@5@@Z;class std::shared_ptr<class cv::ocl::Context::UserContext> cv::ocl::Context::getUserContext(class std::type_index)
?getValidDisparityROI@cv@@YA?AV?$Rect_@H@1@V21@0HHH@Z;class cv::Rect_<int> cv::getValidDisparityROI(class cv::Rect_<int>,class cv::Rect_<int>,int,int,int)
?getVarCount@EMImpl@ml@cv@@UEBAHXZ;int cv::ml::EMImpl::getVarCount(void)
?getVarCount@StatModel@ml@cv@@UEBAHXZ;int cv::ml::StatModel::getVarCount(void)
?getVectorOfStrings@detail@gapi@cv@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$vector@DV?$allocator@D@std@@@5@@Z;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > cv::gapi::detail::getVectorOfStrings(class std::vector<char,class std::allocator<char> > const &)
?getVersionMajor@cv@@YAHXZ;int cv::getVersionMajor(void)
?getVersionMinor@cv@@YAHXZ;int cv::getVersionMinor(void)
?getVersionRevision@cv@@YAHXZ;int cv::getVersionRevision(void)
?getVersionString@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::getVersionString(void)
?getVertex@Subdiv2D@cv@@QEBA?AV?$Point_@M@2@HPEAH@Z;class cv::Point_<float> cv::Subdiv2D::getVertex(int,int *)
?getVocabulary@BOWImgDescriptorExtractor@cv@@QEBAAEBVMat@2@XZ;class cv::Mat const & cv::BOWImgDescriptorExtractor::getVocabulary(void)
?getVocabulary@TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEBAAEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & cv::dnn::dnn4_v20211004::TextRecognitionModel::getVocabulary(void)
?getVoronoiFacetList@Subdiv2D@cv@@QEAAXAEBV?$vector@HV?$allocator@H@std@@@std@@AEAV?$vector@V?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@std@@V?$allocator@V?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@std@@@2@@4@AEAV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@4@@Z;void cv::Subdiv2D::getVoronoiFacetList(class std::vector<int,class std::allocator<int> > const &,class std::vector<class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > >,class std::allocator<class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > > > &,class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > &)
?getWeights@EMImpl@ml@cv@@UEBA?AVMat@3@XZ;class cv::Mat cv::ml::EMImpl::getWeights(void)
?getWidth@AVIReadContainer@cv@@QEAAIXZ;unsigned int cv::AVIReadContainer::getWidth(void)
?getWidth@AVIWriteContainer@cv@@QEBAHXZ;int cv::AVIWriteContainer::getWidth(void)
?getWinSigma@HOGDescriptor@cv@@QEBANXZ;double cv::HOGDescriptor::getWinSigma(void)
?getWindowImageRect@cv@@YA?AV?$Rect_@H@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::Rect_<int> cv::getWindowImageRect(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?getWindowMutex@cv@@YAAEAVrecursive_mutex@std@@XZ;class std::recursive_mutex & cv::getWindowMutex(void)
?getWindowProperty@cv@@YANAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;double cv::getWindowProperty(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?getWriterBackendPluginVersion@videoio_registry@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4VideoCaptureAPIs@2@AEAH1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::videoio_registry::getWriterBackendPluginVersion(enum cv::VideoCaptureAPIs,int &,int &)
?getWriterBackends@videoio_registry@cv@@YA?AV?$vector@W4VideoCaptureAPIs@cv@@V?$allocator@W4VideoCaptureAPIs@cv@@@std@@@std@@XZ;class std::vector<enum cv::VideoCaptureAPIs,class std::allocator<enum cv::VideoCaptureAPIs> > cv::videoio_registry::getWriterBackends(void)
?get_kernel_ids@GKernelPackage@gapi@cv@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > cv::gapi::GKernelPackage::get_kernel_ids(void)
?get_name@CfgParam@onevpl@wip@gapi@cv@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & cv::gapi::wip::onevpl::CfgParam::get_name(void)
?get_transformations@GKernelPackage@gapi@cv@@QEBAAEBV?$vector@UGTransform@cv@@V?$allocator@UGTransform@cv@@@std@@@std@@XZ;class std::vector<struct cv::GTransform,class std::allocator<struct cv::GTransform> > const & cv::gapi::GKernelPackage::get_transformations(void)
?get_value@CfgParam@onevpl@wip@gapi@cv@@QEBAAEBV?$variant@ECGFIH_K_JMNPEAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@util@5@XZ;class cv::util::variant<unsigned char,signed char,unsigned short,short,unsigned int,int,unsigned __int64,__int64,float,double,void *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & cv::gapi::wip::onevpl::CfgParam::get_value(void)
?getcwd@fs@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::fs::getcwd(void)
?glob@cv@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@_N@Z;void cv::glob(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,bool)
?glob@fs@utils@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@5@_N2@Z;void cv::utils::fs::glob(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,bool,bool)
?glob_relative@fs@utils@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@5@_N2@Z;void cv::utils::fs::glob_relative(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,bool,bool)
?globalMemCacheLineSize@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::globalMemCacheLineSize(void)
?globalMemCacheSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::globalMemCacheSize(void)
?globalMemCacheType@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::globalMemCacheType(void)
?globalMemSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::globalMemSize(void)
?goodFeaturesToTrack@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HNN01HH_NN@Z;void cv::goodFeaturesToTrack(class cv::_InputArray const &,class cv::_OutputArray const &,int,double,double,class cv::_InputArray const &,class cv::_OutputArray const &,int,int,bool,double)
?goodFeaturesToTrack@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HNN0HH_NN@Z;void cv::goodFeaturesToTrack(class cv::_InputArray const &,class cv::_OutputArray const &,int,double,double,class cv::_InputArray const &,int,int,bool,double)
?goodFeaturesToTrack@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HNN0H_NN@Z;void cv::goodFeaturesToTrack(class cv::_InputArray const &,class cv::_OutputArray const &,int,double,double,class cv::_InputArray const &,int,bool,double)
?goodFeaturesToTrack@gapi@cv@@YA?AV?$GArray@V?$Point_@M@cv@@@2@AEBVGMat@2@HNNAEBVMat@2@H_NN@Z;class cv::GArray<class cv::Point_<float> > cv::gapi::goodFeaturesToTrack(class cv::GMat const &,int,double,double,class cv::Mat const &,int,bool,double)
?grab@VideoCapture@cv@@UEAA_NXZ;bool cv::VideoCapture::grab(void)
?grabCut@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@V?$Rect_@H@1@11HH@Z;void cv::grabCut(class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::Rect_<int>,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,int,int)
?groupRectangles@HOGDescriptor@cv@@QEBAXAEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@NV?$allocator@N@std@@@4@HN@Z;void cv::HOGDescriptor::groupRectangles(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<double,class std::allocator<double> > &,int,double)
?groupRectangles@cv@@YAXAEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@HV?$allocator@H@std@@@3@AEAV?$vector@NV?$allocator@N@std@@@3@HN@Z;void cv::groupRectangles(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<int,class std::allocator<int> > &,class std::vector<double,class std::allocator<double> > &,int,double)
?groupRectangles@cv@@YAXAEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@HV?$allocator@H@std@@@3@HN@Z;void cv::groupRectangles(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<int,class std::allocator<int> > &,int,double)
?groupRectangles@cv@@YAXAEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@HN@Z;void cv::groupRectangles(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,int,double)
?groupRectangles@cv@@YAXAEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@HNPEAV?$vector@HV?$allocator@H@std@@@3@PEAV?$vector@NV?$allocator@N@std@@@3@@Z;void cv::groupRectangles(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,int,double,class std::vector<int,class std::allocator<int> > *,class std::vector<double,class std::allocator<double> > *)
?groupRectangles_meanshift@cv@@YAXAEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEAV?$vector@NV?$allocator@N@std@@@3@1NV?$Size_@H@1@@Z;void cv::groupRectangles_meanshift(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,class std::vector<double,class std::allocator<double> > &,class std::vector<double,class std::allocator<double> > &,double,class cv::Size_<int>)
?halfFPConfig@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::halfFPConfig(void)
?handle@UMat@cv@@QEBAPEAXW4AccessFlag@2@@Z;void * cv::UMat::handle(enum cv::AccessFlag)
?handleNewStream@GIslandExecutable@gimpl@cv@@UEAAXXZ;void cv::gimpl::GIslandExecutable::handleNewStream(void)
?handleStopStream@GIslandExecutable@gimpl@cv@@UEAAXXZ;void cv::gimpl::GIslandExecutable::handleStopStream(void)
?has@CommandLineParser@cv@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::CommandLineParser::has(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?has@Dict@dnn4_v20211004@dnn@cv@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::dnn::dnn4_v20211004::Dict::has(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?has@TargetArchs@cuda@cv@@SA_NHH@Z;bool cv::cuda::TargetArchs::has(int,int)
?hasBackend@videoio_registry@cv@@YA_NW4VideoCaptureAPIs@2@@Z;bool cv::videoio_registry::hasBackend(enum cv::VideoCaptureAPIs)
?hasBin@TargetArchs@cuda@cv@@SA_NHH@Z;bool cv::cuda::TargetArchs::hasBin(int,int)
?hasEqualOrGreater@TargetArchs@cuda@cv@@SA_NHH@Z;bool cv::cuda::TargetArchs::hasEqualOrGreater(int,int)
?hasEqualOrGreaterBin@TargetArchs@cuda@cv@@SA_NHH@Z;bool cv::cuda::TargetArchs::hasEqualOrGreaterBin(int,int)
?hasEqualOrGreaterPtx@TargetArchs@cuda@cv@@SA_NHH@Z;bool cv::cuda::TargetArchs::hasEqualOrGreaterPtx(int,int)
?hasEqualOrLessPtx@TargetArchs@cuda@cv@@SA_NHH@Z;bool cv::cuda::TargetArchs::hasEqualOrLessPtx(int,int)
?hasOnlyOneNeighbor@DpSeamFinder@detail@cv@@AEAA_NH@Z;bool cv::detail::DpSeamFinder::hasOnlyOneNeighbor(int)
?hasPtx@TargetArchs@cuda@cv@@SA_NHH@Z;bool cv::cuda::TargetArchs::hasPtx(int,int)
?hash@GBackend@gapi@cv@@QEBA_KXZ;unsigned __int64 cv::gapi::GBackend::hash(void)
?hash@KeyPoint@cv@@QEBA_KXZ;unsigned __int64 cv::KeyPoint::hash(void)
?hash@ProgramSource@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::ProgramSource::hash(void)
?hash@SparseMat@cv@@QEBA_KH@Z;unsigned __int64 cv::SparseMat::hash(int)
?hash@SparseMat@cv@@QEBA_KHH@Z;unsigned __int64 cv::SparseMat::hash(int,int)
?hash@SparseMat@cv@@QEBA_KHHH@Z;unsigned __int64 cv::SparseMat::hash(int,int,int)
?hash@SparseMat@cv@@QEBA_KPEBH@Z;unsigned __int64 cv::SparseMat::hash(int const *)
?haveAmdBlas@ocl@cv@@YA_NXZ;bool cv::ocl::haveAmdBlas(void)
?haveAmdFft@ocl@cv@@YA_NXZ;bool cv::ocl::haveAmdFft(void)
?haveImageReader@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::haveImageReader(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?haveImageWriter@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::haveImageWriter(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?haveOpenCL@ocl@cv@@YA_NXZ;bool cv::ocl::haveOpenCL(void)
?haveOpenVX@cv@@YA_NXZ;bool cv::haveOpenVX(void)
?haveSVM@ocl@cv@@YA_NXZ;bool cv::ocl::haveSVM(void)
?hconcat@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::hconcat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?hconcat@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::hconcat(class cv::_InputArray const &,class cv::_OutputArray const &)
?hconcat@cv@@YAXPEBVMat@1@_KAEBV_OutputArray@1@@Z;void cv::hconcat(class cv::Mat const *,unsigned __int64,class cv::_OutputArray const &)
?hostCopyObsolete@UMatData@cv@@QEBA_NXZ;bool cv::UMatData::hostCopyObsolete(void)
?hostUnifiedMemory@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::hostUnifiedMemory(void)
?idct@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::idct(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?idft@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HH@Z;void cv::idft(class cv::_InputArray const &,class cv::_OutputArray const &,int,int)
?illuminationChange@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@MM@Z;void cv::illuminationChange(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,float,float)
?image2DMaxHeight@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::image2DMaxHeight(void)
?image2DMaxWidth@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::image2DMaxWidth(void)
?image3DMaxDepth@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::image3DMaxDepth(void)
?image3DMaxHeight@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::image3DMaxHeight(void)
?image3DMaxWidth@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::image3DMaxWidth(void)
?imageBaseAddressAlignment@Device@ocl@cv@@QEBAIXZ;unsigned int cv::ocl::Device::imageBaseAddressAlignment(void)
?imageFromBufferSupport@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::imageFromBufferSupport(void)
?imageMaxArraySize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::imageMaxArraySize(void)
?imageMaxBufferSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::imageMaxBufferSize(void)
?imagePitchAlignment@Device@ocl@cv@@QEBAIXZ;unsigned int cv::ocl::Device::imagePitchAlignment(void)
?imageSupport@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::imageSupport(void)
?imagesFromBlob@dnn4_v20211004@dnn@cv@@YAXAEBVMat@3@AEBV_OutputArray@3@@Z;void cv::dnn::dnn4_v20211004::imagesFromBlob(class cv::Mat const &,class cv::_OutputArray const &)
?imcount@cv@@YA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;unsigned __int64 cv::imcount(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?imdecode@cv@@YA?AVMat@1@AEBV_InputArray@1@H@Z;class cv::Mat cv::imdecode(class cv::_InputArray const &,int)
?imdecode@cv@@YA?AVMat@1@AEBV_InputArray@1@HPEAV21@@Z;class cv::Mat cv::imdecode(class cv::_InputArray const &,int,class cv::Mat *)
?imencode@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@1@AEAV?$vector@EV?$allocator@E@std@@@3@AEBV?$vector@HV?$allocator@H@std@@@3@@Z;bool cv::imencode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &,class std::vector<unsigned char,class std::allocator<unsigned char> > &,class std::vector<int,class std::allocator<int> > const &)
?impl@GPythonFunctor@python@gapi@cv@@UEBA?AUGKernelImpl@4@XZ;struct cv::GKernelImpl cv::gapi::python::GPythonFunctor::impl(void)
?imread@cv@@YA?AVMat@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;class cv::Mat cv::imread(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?imreadmulti@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@3@H@Z;bool cv::imreadmulti(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &,int)
?imreadmulti@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@3@HHH@Z;bool cv::imreadmulti(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &,int,int,int)
?imshow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVTexture2D@ogl@1@@Z;void cv::imshow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::ogl::Texture2D const &)
?imshow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@1@@Z;void cv::imshow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &)
?imwrite@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@1@AEBV?$vector@HV?$allocator@H@std@@@3@@Z;bool cv::imwrite(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &,class std::vector<int,class std::allocator<int> > const &)
?inInfo@Priv@GStreamingCompiled@cv@@QEBAAEBV?$vector@UGTypeInfo@cv@@V?$allocator@UGTypeInfo@cv@@@std@@@std@@XZ;class std::vector<struct cv::GTypeInfo,class std::allocator<struct cv::GTypeInfo> > const & cv::GStreamingCompiled::Priv::inInfo(void)
?inMat@GCPUContext@cv@@QEAAAEBVMat@2@H@Z;class cv::Mat const & cv::GCPUContext::inMat(int)
?inMat@GOCLContext@cv@@QEAAAEBVUMat@2@H@Z;class cv::UMat const & cv::GOCLContext::inMat(int)
?inRange@cv@@YAXAEBV_InputArray@1@00AEBV_OutputArray@1@@Z;void cv::inRange(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?inRange@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@1@Z;class cv::GMat cv::gapi::inRange(class cv::GMat const &,class cv::GScalar const &,class cv::GScalar const &)
?inVal@GCPUContext@cv@@QEAAAEBV?$Scalar_@N@2@H@Z;class cv::Scalar_<double> const & cv::GCPUContext::inVal(int)
?inVal@GOCLContext@cv@@QEAAAEBV?$Scalar_@N@2@H@Z;class cv::Scalar_<double> const & cv::GOCLContext::inVal(int)
?in_ops@GIsland@gimpl@cv@@QEBAAEBV?$unordered_set@V?$Handle@VNode@ade@@@ade@@U?$HandleHasher@VNode@ade@@@2@U?$equal_to@V?$Handle@VNode@ade@@@ade@@@std@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@5@@std@@XZ;class std::unordered_set<class ade::Handle<class ade::Node>,struct ade::HandleHasher<class ade::Node>,struct std::equal_to<class ade::Handle<class ade::Node> >,class std::allocator<class ade::Handle<class ade::Node> > > const & cv::gimpl::GIsland::in_ops(void)
?include@GKernelPackage@gapi@cv@@QEAAXAEBVGBackend@23@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::gapi::GKernelPackage::include(class cv::gapi::GBackend const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?include@GKernelPackage@gapi@cv@@QEAAXAEBVGFunctor@23@@Z;void cv::gapi::GKernelPackage::include(class cv::gapi::GFunctor const &)
?includesAPI@GKernelPackage@gapi@cv@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::gapi::GKernelPackage::includesAPI(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?index@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEBA_KXZ;unsigned __int64 cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::index(void)
?inf@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::inf(void)
?inf@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::inf(void)
?init@ClfMilBoost@tracking@detail@cv@@QEAAXAEBUParams@1234@@Z;void cv::detail::tracking::ClfMilBoost::init(struct cv::detail::tracking::ClfMilBoost::Params const &)
?init@CvLevMarq@@QEAAXHHUCvTermCriteria@@_N@Z;void CvLevMarq::init(int,int,struct CvTermCriteria,bool)
?init@GModel@gimpl@cv@@YAXAEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@@Z;void cv::gimpl::GModel::init(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &)
?init@KalmanFilter@cv@@QEAAXHHHH@Z;void cv::KalmanFilter::init(int,int,int,int)
?init@LineIterator@cv@@QEAAXPEBVMat@2@V?$Rect_@H@2@V?$Point_@H@2@2H_N@Z;void cv::LineIterator::init(class cv::Mat const *,class cv::Rect_<int>,class cv::Point_<int>,class cv::Point_<int>,int,bool)
?init@NAryMatIterator@cv@@QEAAXPEAPEBVMat@2@PEAV32@PEAPEAEH@Z;void cv::NAryMatIterator::init(class cv::Mat const * *,class cv::Mat *,unsigned char * *,int)
?init@Priv@Buffer@fluid@gapi@cv@@QEAAXAEBUGMatDesc@5@HHV?$Rect_@H@5@@Z;void cv::gapi::fluid::Buffer::Priv::init(struct cv::GMatDesc const &,int,int,class cv::Rect_<int>)
?init@_InputArray@cv@@IEAAXHPEBX@Z;void cv::_InputArray::init(int,void const *)
?init@_InputArray@cv@@IEAAXHPEBXV?$Size_@H@2@@Z;void cv::_InputArray::init(int,void const *,class cv::Size_<int>)
?initAll@cv@@YA_NXZ;bool cv::initAll(void)
?initCUDA@Layer@dnn4_v20211004@dnn@cv@@UEAA?AU?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@4@PEAXAEBV?$vector@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@V?$allocator@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@@std@@@std@@1@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> cv::dnn::dnn4_v20211004::Layer::initCUDA(void *,class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper> > > const &,class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper> > > const &)
?initCache@Priv@View@fluid@gapi@cv@@QEAAXH@Z;void cv::gapi::fluid::View::Priv::initCache(int)
?initCameraMatrix2D@cv@@YA?AVMat@1@AEBV_InputArray@1@0V?$Size_@H@1@N@Z;class cv::Mat cv::initCameraMatrix2D(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,double)
?initContainer@AVIWriteContainer@cv@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NV?$Size_@H@2@_N@Z;bool cv::AVIWriteContainer::initContainer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double,class cv::Size_<int>,bool)
?initDelaunay@Subdiv2D@cv@@QEAAXV?$Rect_@H@2@@Z;void cv::Subdiv2D::initDelaunay(class cv::Rect_<int>)
?initHalide@Layer@dnn4_v20211004@dnn@cv@@UEAA?AU?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@4@AEBV?$vector@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@V?$allocator@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@@std@@@std@@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> cv::dnn::dnn4_v20211004::Layer::initHalide(class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper> > > const &)
?initInfEngine@Layer@dnn4_v20211004@dnn@cv@@UEAA?AU?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@4@AEBV?$vector@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@V?$allocator@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@@std@@@std@@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> cv::dnn::dnn4_v20211004::Layer::initInfEngine(class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper> > > const &)
?initInverseRectificationMap@cv@@YAXAEBV_InputArray@1@000AEBV?$Size_@H@1@HAEBV_OutputArray@1@2@Z;void cv::initInverseRectificationMap(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int> const &,int,class cv::_OutputArray const &,class cv::_OutputArray const &)
?initNgraph@Layer@dnn4_v20211004@dnn@cv@@UEAA?AU?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@4@AEBV?$vector@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@V?$allocator@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@@std@@@std@@AEBV?$vector@U?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@cv@@V?$allocator@U?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@cv@@@std@@@7@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> cv::dnn::dnn4_v20211004::Layer::initNgraph(class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper> > > const &,class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> > > const &)
?initStream@AVIReadContainer@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::AVIReadContainer::initStream(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?initStream@AVIReadContainer@cv@@QEAAXU?$Ptr@VVideoInputStream@cv@@@2@@Z;void cv::AVIReadContainer::initStream(struct cv::Ptr<class cv::VideoInputStream>)
?initUndistortRectifyMap@cv@@YAXAEBV_InputArray@1@000V?$Size_@H@1@HAEBV_OutputArray@1@2@Z;void cv::initUndistortRectifyMap(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,int,class cv::_OutputArray const &,class cv::_OutputArray const &)
?initUndistortRectifyMap@fisheye@cv@@YAXAEBV_InputArray@2@000AEBV?$Size_@H@2@HAEBV_OutputArray@2@2@Z;void cv::fisheye::initUndistortRectifyMap(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int> const &,int,class cv::_OutputArray const &,class cv::_OutputArray const &)
?initVkCom@Layer@dnn4_v20211004@dnn@cv@@UEAA?AU?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@4@AEBV?$vector@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@V?$allocator@U?$Ptr@VBackendWrapper@dnn4_v20211004@dnn@cv@@@cv@@@std@@@std@@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> cv::dnn::dnn4_v20211004::Layer::initVkCom(class std::vector<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper>,class std::allocator<struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendWrapper> > > const &)
?initWideAngleProjMap@cv@@YAMAEBV_InputArray@1@0V?$Size_@H@1@HHAEBV_OutputArray@1@2W4UndistortTypes@1@N@Z;float cv::initWideAngleProjMap(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,int,int,class cv::_OutputArray const &,class cv::_OutputArray const &,enum cv::UndistortTypes,double)
?initialize@Timelapser@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@V?$Size_@H@cv@@V?$allocator@V?$Size_@H@cv@@@std@@@5@@Z;void cv::detail::Timelapser::initialize(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::Size_<int>,class std::allocator<class cv::Size_<int> > > const &)
?initialize@TimelapserCrop@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@V?$Size_@H@cv@@V?$allocator@V?$Size_@H@cv@@@std@@@5@@Z;void cv::detail::TimelapserCrop::initialize(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::Size_<int>,class std::allocator<class cv::Size_<int> > > const &)
?initializeContextFromD3D10Device@ocl@directx@cv@@YAAEAVContext@13@PEAUID3D10Device@@@Z;class cv::ocl::Context & cv::directx::ocl::initializeContextFromD3D10Device(struct ID3D10Device *)
?initializeContextFromD3D11Device@ocl@directx@cv@@YAAEAVContext@13@PEAUID3D11Device@@@Z;class cv::ocl::Context & cv::directx::ocl::initializeContextFromD3D11Device(struct ID3D11Device *)
?initializeContextFromDirect3DDevice9@ocl@directx@cv@@YAAEAVContext@13@PEAUIDirect3DDevice9@@@Z;class cv::ocl::Context & cv::directx::ocl::initializeContextFromDirect3DDevice9(struct IDirect3DDevice9 *)
?initializeContextFromDirect3DDevice9Ex@ocl@directx@cv@@YAAEAVContext@13@PEAUIDirect3DDevice9Ex@@@Z;class cv::ocl::Context & cv::directx::ocl::initializeContextFromDirect3DDevice9Ex(struct IDirect3DDevice9Ex *)
?initializeContextFromGL@ocl@ogl@cv@@YAAEAVContext@13@XZ;class cv::ocl::Context & cv::ogl::ocl::initializeContextFromGL(void)
?initializeContextFromVA@ocl@va_intel@cv@@YAAEAVContext@13@PEAX_N@Z;class cv::ocl::Context & cv::va_intel::ocl::initializeContextFromVA(void *,bool)
?initializeMask@MaskGenerator@BaseCascadeClassifier@cv@@UEAAXAEBVMat@3@@Z;void cv::BaseCascadeClassifier::MaskGenerator::initializeMask(class cv::Mat const &)
?inpaint@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@NH@Z;void cv::inpaint(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,double,int)
?inputNameToIndex@LSTMLayer@dnn4_v20211004@dnn@cv@@UEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;int cv::dnn::dnn4_v20211004::LSTMLayer::inputNameToIndex(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)
?inputNameToIndex@Layer@dnn4_v20211004@dnn@cv@@UEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;int cv::dnn::dnn4_v20211004::Layer::inputNameToIndex(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)
?insert@Subdiv2D@cv@@QEAAHV?$Point_@M@2@@Z;int cv::Subdiv2D::insert(class cv::Point_<float>)
?insert@Subdiv2D@cv@@QEAAXAEBV?$vector@V?$Point_@M@cv@@V?$allocator@V?$Point_@M@cv@@@std@@@std@@@Z;void cv::Subdiv2D::insert(class std::vector<class cv::Point_<float>,class std::allocator<class cv::Point_<float> > > const &)
?insertChannel@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@H@Z;void cv::insertChannel(class cv::_InputArray const &,class cv::_InputOutputArray const &,int)
?insertImageCOI@cv@@YAXAEBV_InputArray@1@PEAXH@Z;void cv::insertImageCOI(class cv::_InputArray const &,void *,int)
?integral@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@11HH@Z;void cv::integral(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,int)
?integral@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1HH@Z;void cv::integral(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,int)
?integral@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::integral(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?integral@gapi@cv@@YA?AV?$tuple@VGMat@cv@@V12@@std@@AEBVGMat@2@HH@Z;class std::tuple<class cv::GMat,class cv::GMat> cv::gapi::integral(class cv::GMat const &,int,int)
?integral@hal@cv@@YAXHHHPEBE_KPEAE12121HHH@Z;void cv::hal::integral(int,int,int,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
?integrated@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::integrated(void)
?intelSubgroupsSupport@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::intelSubgroupsSupport(void)
?interpolationFlags@Stitcher@cv@@QEBA?AW4InterpolationFlags@2@XZ;enum cv::InterpolationFlags cv::Stitcher::interpolationFlags(void)
?intersectConvexConvex@cv@@YAMAEBV_InputArray@1@0AEBV_OutputArray@1@_N@Z;float cv::intersectConvexConvex(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,bool)
?inv@Mat@cv@@QEBA?AVMatExpr@2@H@Z;class cv::MatExpr cv::Mat::inv(int)
?inv@MatExpr@cv@@QEBA?AV12@H@Z;class cv::MatExpr cv::MatExpr::inv(int)
?inv@UMat@cv@@QEBA?AV12@H@Z;class cv::UMat cv::UMat::inv(int)
?invSqrt32f@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::invSqrt32f(float const *,float *,int)
?invSqrt64f@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::invSqrt64f(double const *,double *,int)
?invSqrt@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::invSqrt(float const *,float *,int)
?invSqrt@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::invSqrt(double const *,double *,int)
?invert@MatOp@cv@@UEBAXAEBVMatExpr@2@HAEAV32@@Z;void cv::MatOp::invert(class cv::MatExpr const &,int,class cv::MatExpr &)
?invert@cv@@YANAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;double cv::invert(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?invertAffineTransform@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::invertAffineTransform(class cv::_InputArray const &,class cv::_OutputArray const &)
?isAMD@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::isAMD(void)
?isActivated@TraceManager@details@trace@utils@cv@@SA_NXZ;bool cv::utils::trace::details::TraceManager::isActivated(void)
?isActive@GModel@gimpl@cv@@YA_NAEBV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@AEBVGBackend@gapi@3@@Z;bool cv::gimpl::GModel::isActive(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> const &,class cv::gapi::GBackend const &)
?isActive@Region@details@trace@utils@cv@@QEBA_NXZ;bool cv::utils::trace::details::Region::isActive(void)
?isBackendBuiltIn@videoio_registry@cv@@YA_NW4VideoCaptureAPIs@2@@Z;bool cv::videoio_registry::isBackendBuiltIn(enum cv::VideoCaptureAPIs)
?isCLBuffer@internal@ocl@cv@@YA_NAEAVUMat@3@@Z;bool cv::ocl::internal::isCLBuffer(class cv::UMat &)
?isCanceled@GAsyncContext@wip@gapi@cv@@QEBA_NXZ;bool cv::gapi::wip::GAsyncContext::isCanceled(void)
?isClassifier@EMImpl@ml@cv@@UEBA_NXZ;bool cv::ml::EMImpl::isClassifier(void)
?isCollection@FileNode@cv@@SA_NH@Z;bool cv::FileNode::isCollection(int)
?isCompatible@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::isCompatible(void)
?isContinuous@GpuMat@cuda@cv@@QEBA_NXZ;bool cv::cuda::GpuMat::isContinuous(void)
?isContinuous@GpuMatND@cuda@cv@@QEBA_NXZ;bool cv::cuda::GpuMatND::isContinuous(void)
?isContinuous@HostMem@cuda@cv@@QEBA_NXZ;bool cv::cuda::HostMem::isContinuous(void)
?isContinuous@Mat@cv@@QEBA_NXZ;bool cv::Mat::isContinuous(void)
?isContinuous@UMat@cv@@QEBA_NXZ;bool cv::UMat::isContinuous(void)
?isContinuous@_InputArray@cv@@QEBA_NH@Z;bool cv::_InputArray::isContinuous(int)
?isContourConvex@cv@@YA_NAEBV_InputArray@1@@Z;bool cv::isContourConvex(class cv::_InputArray const &)
?isDirectory@fs@utils@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::utils::fs::isDirectory(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?isEmpty@Priv@GCompiled@cv@@QEBA_NXZ;bool cv::GCompiled::Priv::isEmpty(void)
?isEmpty@Priv@GStreamingCompiled@cv@@QEBA_NXZ;bool cv::GStreamingCompiled::Priv::isEmpty(void)
?isEmptyCollection@FileNode@cv@@SA_NH@Z;bool cv::FileNode::isEmptyCollection(int)
?isEmptyFrameOffset@AVIWriteContainer@cv@@QEBA_NXZ;bool cv::AVIWriteContainer::isEmptyFrameOffset(void)
?isEmptyFrameSize@AVIWriteContainer@cv@@QEBA_NXZ;bool cv::AVIWriteContainer::isEmptyFrameSize(void)
?isExtensionSupported@Device@ocl@cv@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::ocl::Device::isExtensionSupported(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?isFlow@FileNode@cv@@SA_NH@Z;bool cv::FileNode::isFlow(int)
?isFormatSupported@Image2D@ocl@cv@@SA_NHH_N@Z;bool cv::ocl::Image2D::isFormatSupported(int,int,bool)
?isGpuMat@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isGpuMat(void)
?isGpuMatVector@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isGpuMatVector(void)
?isInf@softdouble@cv@@QEBA_NXZ;bool cv::softdouble::isInf(void)
?isInf@softfloat@cv@@QEBA_NXZ;bool cv::softfloat::isInf(void)
?isInt@DictValue@dnn4_v20211004@dnn@cv@@QEBA_NXZ;bool cv::dnn::dnn4_v20211004::DictValue::isInt(void)
?isInt@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::isInt(void)
?isIntel@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::isIntel(void)
?isLoaded@DynamicLib@impl@plugin@cv@@QEBA_NXZ;bool cv::plugin::impl::DynamicLib::isLoaded(void)
?isMap@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::isMap(void)
?isMap@FileNode@cv@@SA_NH@Z;bool cv::FileNode::isMap(int)
?isMaskSupported@BFMatcher@cv@@UEBA_NXZ;bool cv::BFMatcher::isMaskSupported(void)
?isMaskSupported@FlannBasedMatcher@cv@@UEBA_NXZ;bool cv::FlannBasedMatcher::isMaskSupported(void)
?isMaskedOut@DescriptorMatcher@cv@@KA_NAEBV_InputArray@2@H@Z;bool cv::DescriptorMatcher::isMaskedOut(class cv::_InputArray const &,int)
?isMat@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isMat(void)
?isMatVector@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isMatVector(void)
?isMatx@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isMatx(void)
?isND@GMatDesc@cv@@QEBA_NXZ;bool cv::GMatDesc::isND(void)
?isNVidia@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::isNVidia(void)
?isNaN@softdouble@cv@@QEBA_NXZ;bool cv::softdouble::isNaN(void)
?isNaN@softfloat@cv@@QEBA_NXZ;bool cv::softfloat::isNaN(void)
?isNamed@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::isNamed(void)
?isNone@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::isNone(void)
?isOldFormatCascade@CascadeClassifier@cv@@QEBA_NXZ;bool cv::CascadeClassifier::isOldFormatCascade(void)
?isOpenCLActivated@ocl@cv@@YA_NXZ;bool cv::ocl::isOpenCLActivated(void)
?isOpenCLForced@internal@ocl@cv@@YA_NXZ;bool cv::ocl::internal::isOpenCLForced(void)
?isOpened@FileStorage@cv@@UEBA_NXZ;bool cv::FileStorage::isOpened(void)
?isOpened@VideoCapture@cv@@UEBA_NXZ;bool cv::VideoCapture::isOpened(void)
?isOpened@VideoWriter@cv@@UEBA_NXZ;bool cv::VideoWriter::isOpened(void)
?isOpenedStream@AVIWriteContainer@cv@@QEBA_NXZ;bool cv::AVIWriteContainer::isOpenedStream(void)
?isPerformanceCheckBypassed@internal@ocl@cv@@YA_NXZ;bool cv::ocl::internal::isPerformanceCheckBypassed(void)
?isPossibleMatch@DescriptorMatcher@cv@@KA_NAEBV_InputArray@2@HH@Z;bool cv::DescriptorMatcher::isPossibleMatch(class cv::_InputArray const &,int,int)
?isReal@DictValue@dnn4_v20211004@dnn@cv@@QEBA_NXZ;bool cv::dnn::dnn4_v20211004::DictValue::isReal(void)
?isReal@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::isReal(void)
?isRightOf@Subdiv2D@cv@@IEBAHV?$Point_@M@2@H@Z;int cv::Subdiv2D::isRightOf(class cv::Point_<float>,int)
?isSeq@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::isSeq(void)
?isSeq@FileNode@cv@@SA_NH@Z;bool cv::FileNode::isSeq(int)
?isString@DictValue@dnn4_v20211004@dnn@cv@@QEBA_NXZ;bool cv::dnn::dnn4_v20211004::DictValue::isString(void)
?isString@FileNode@cv@@QEBA_NXZ;bool cv::FileNode::isString(void)
?isSubmatrix@GpuMatND@cuda@cv@@QEBA_NXZ;bool cv::cuda::GpuMatND::isSubmatrix(void)
?isSubmatrix@Mat@cv@@QEBA_NXZ;bool cv::Mat::isSubmatrix(void)
?isSubmatrix@UMat@cv@@QEBA_NXZ;bool cv::UMat::isSubmatrix(void)
?isSubmatrix@_InputArray@cv@@QEBA_NH@Z;bool cv::_InputArray::isSubmatrix(int)
?isSubnormal@softdouble@cv@@QEBA_NXZ;bool cv::softdouble::isSubnormal(void)
?isSubnormal@softfloat@cv@@QEBA_NXZ;bool cv::softfloat::isSubnormal(void)
?isThreadSafe@FeaturesMatcher@detail@cv@@QEBA_NXZ;bool cv::detail::FeaturesMatcher::isThreadSafe(void)
?isTrained@EMImpl@ml@cv@@UEBA_NXZ;bool cv::ml::EMImpl::isTrained(void)
?isUMat@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isUMat(void)
?isUMatVector@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isUMatVector(void)
?isValid@TermCriteria@cv@@QEBA_NXZ;bool cv::TermCriteria::isValid(void)
?isVector@_InputArray@cv@@QEBA_NXZ;bool cv::_InputArray::isVector(void)
?is_major@CfgParam@onevpl@wip@gapi@cv@@QEBA_NXZ;bool cv::gapi::wip::onevpl::CfgParam::is_major(void)
?is_user_specified@GIsland@gimpl@cv@@QEBA_NXZ;bool cv::gimpl::GIsland::is_user_specified(void)
?isfree@QuadEdge@Subdiv2D@cv@@QEBA_NXZ;bool cv::Subdiv2D::QuadEdge::isfree(void)
?isfree@Vertex@Subdiv2D@cv@@QEBA_NXZ;bool cv::Subdiv2D::Vertex::isfree(void)
?island@gapi@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$QEAU?$GIOProtoArgs@UIn_Tag@cv@@@2@$$QEAU?$GIOProtoArgs@UOut_Tag@cv@@@2@@Z;void cv::gapi::island(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,struct cv::GIOProtoArgs<struct cv::In_Tag> &&,struct cv::GIOProtoArgs<struct cv::Out_Tag> &&)
?isvirtual@Vertex@Subdiv2D@cv@@QEBA_NXZ;bool cv::Subdiv2D::Vertex::isvirtual(void)
?jflushStream@AVIWriteContainer@cv@@QEAAXIH@Z;void cv::AVIWriteContainer::jflushStream(unsigned int,int)
?join@fs@utils@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV45@0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::utils::fs::join(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?jputStream@AVIWriteContainer@cv@@QEAAXI@Z;void cv::AVIWriteContainer::jputStream(unsigned int)
?jputStreamShort@AVIWriteContainer@cv@@QEAAXH@Z;void cv::AVIWriteContainer::jputStreamShort(int)
?kBytes@ORB@cv@@2HB;int const cv::ORB::kBytes
?kernel@GCall@cv@@QEAAAEAUGKernel@2@XZ;struct cv::GKernel & cv::GCall::kernel(void)
?kernelExecTimeoutEnabled@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::kernelExecTimeoutEnabled(void)
?kernelToStr@ocl@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@2@HPEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::kernelToStr(class cv::_InputArray const &,int,char const *)
?kernels@cpu@calib3d@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::calib3d::cpu::kernels(void)
?kernels@cpu@core@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::core::cpu::kernels(void)
?kernels@cpu@imgproc@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::imgproc::cpu::kernels(void)
?kernels@cpu@video@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::video::cpu::kernels(void)
?kernels@fluid@core@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::core::fluid::kernels(void)
?kernels@fluid@imgproc@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::imgproc::fluid::kernels(void)
?kernels@ocl@core@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::core::ocl::kernels(void)
?kernels@ocl@imgproc@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::imgproc::ocl::kernels(void)
?kernels@ocv@render@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::render::ocv::kernels(void)
?kernels@plaidml@core@gapi@cv@@YA?AVGKernelPackage@34@XZ;class cv::gapi::GKernelPackage cv::gapi::core::plaidml::kernels(void)
?kernels@streaming@gapi@cv@@YA?AVGKernelPackage@23@XZ;class cv::gapi::GKernelPackage cv::gapi::streaming::kernels(void)
?keys@FileNode@cv@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > cv::FileNode::keys(void)
?kind@_InputArray@cv@@QEBA?AW4KindFlag@12@XZ;enum cv::_InputArray::KindFlag cv::_InputArray::kind(void)
?kmeans@cv@@YANAEBV_InputArray@1@HAEBV_InputOutputArray@1@VTermCriteria@1@HHAEBV_OutputArray@1@@Z;double cv::kmeans(class cv::_InputArray const &,int,class cv::_InputOutputArray const &,class cv::TermCriteria,int,int,class cv::_OutputArray const &)
?kmeans@gapi@cv@@YA?AV?$tuple@V?$GOpaque@N@cv@@V?$GArray@H@2@V?$GArray@V?$Point3_@M@cv@@@2@@std@@AEBV?$GArray@V?$Point3_@M@cv@@@2@HAEBV?$GArray@H@2@AEBVTermCriteria@2@HW4KmeansFlags@2@@Z;class std::tuple<class cv::GOpaque<double>,class cv::GArray<int>,class cv::GArray<class cv::Point3_<float> > > cv::gapi::kmeans(class cv::GArray<class cv::Point3_<float> > const &,int,class cv::GArray<int> const &,class cv::TermCriteria const &,int,enum cv::KmeansFlags)
?kmeans@gapi@cv@@YA?AV?$tuple@V?$GOpaque@N@cv@@V?$GArray@H@2@V?$GArray@V?$Point_@M@cv@@@2@@std@@AEBV?$GArray@V?$Point_@M@cv@@@2@HAEBV?$GArray@H@2@AEBVTermCriteria@2@HW4KmeansFlags@2@@Z;class std::tuple<class cv::GOpaque<double>,class cv::GArray<int>,class cv::GArray<class cv::Point_<float> > > cv::gapi::kmeans(class cv::GArray<class cv::Point_<float> > const &,int,class cv::GArray<int> const &,class cv::TermCriteria const &,int,enum cv::KmeansFlags)
?kmeans@gapi@cv@@YA?AV?$tuple@V?$GOpaque@N@cv@@VGMat@2@V32@@std@@AEBVGMat@2@H0AEBVTermCriteria@2@HW4KmeansFlags@2@@Z;class std::tuple<class cv::GOpaque<double>,class cv::GMat,class cv::GMat> cv::gapi::kmeans(class cv::GMat const &,int,class cv::GMat const &,class cv::TermCriteria const &,int,enum cv::KmeansFlags)
?kmeans@gapi@cv@@YA?AV?$tuple@V?$GOpaque@N@cv@@VGMat@2@V32@@std@@AEBVGMat@2@HAEBVTermCriteria@2@HW4KmeansFlags@2@@Z;class std::tuple<class cv::GOpaque<double>,class cv::GMat,class cv::GMat> cv::gapi::kmeans(class cv::GMat const &,int,class cv::TermCriteria const &,int,enum cv::KmeansFlags)
?knnMatch@DescriptorMatcher@cv@@QEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@H0_N@Z;void cv::DescriptorMatcher::knnMatch(class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,int,class cv::_InputArray const &,bool)
?knnMatch@DescriptorMatcher@cv@@QEBAXAEBV_InputArray@2@0AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@H0_N@Z;void cv::DescriptorMatcher::knnMatch(class cv::_InputArray const &,class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,int,class cv::_InputArray const &,bool)
?knnMatchImpl@BFMatcher@cv@@MEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@H0_N@Z;void cv::BFMatcher::knnMatchImpl(class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,int,class cv::_InputArray const &,bool)
?knnMatchImpl@FlannBasedMatcher@cv@@MEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@H0_N@Z;void cv::FlannBasedMatcher::knnMatchImpl(class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,int,class cv::_InputArray const &,bool)
?knnSearch@Index@flann@cv@@UEAAXAEBV_InputArray@3@AEBV_OutputArray@3@1HAEBUSearchParams@23@@Z;void cv::flann::Index::knnSearch(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,struct cv::flann::SearchParams const &)
?l2CacheSize@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::l2CacheSize(void)
?lda@LDA@cv@@IEAAXAEBV_InputArray@2@0@Z;void cv::LDA::lda(class cv::_InputArray const &,class cv::_InputArray const &)
?leaveBiggestComponent@detail@cv@@YA?AV?$vector@HV?$allocator@H@std@@@std@@AEAV?$vector@UImageFeatures@detail@cv@@V?$allocator@UImageFeatures@detail@cv@@@std@@@4@AEAV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@4@M@Z;class std::vector<int,class std::allocator<int> > cv::detail::leaveBiggestComponent(class std::vector<struct cv::detail::ImageFeatures,class std::allocator<struct cv::detail::ImageFeatures> > &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > &,float)
?length@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::length(void)
?length@View@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::View::length(void)
?libraryLoad@DynamicLib@impl@plugin@cv@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z;void cv::plugin::impl::DynamicLib::libraryLoad(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &)
?libraryRelease@DynamicLib@impl@plugin@cv@@AEAAXXZ;void cv::plugin::impl::DynamicLib::libraryRelease(void)
?line@cv@@YAXAEBV_InputOutputArray@1@V?$Point_@H@1@1AEBV?$Scalar_@N@1@HHH@Z;void cv::line(class cv::_InputOutputArray const &,class cv::Point_<int>,class cv::Point_<int>,class cv::Scalar_<double> const &,int,int,int)
?linearPolar@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@V?$Point_@M@1@NH@Z;void cv::linearPolar(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Point_<float>,double,int)
?linesReady@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::linesReady(void)
?linesReady@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::linesReady(void)
?linkIn@GModel@gimpl@cv@@YA?AV?$Handle@VEdge@ade@@@ade@@AEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@5@V?$Handle@VNode@ade@@@5@1_K@Z;class ade::Handle<class ade::Edge> cv::gimpl::GModel::linkIn(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,class ade::Handle<class ade::Node>,class ade::Handle<class ade::Node>,unsigned __int64)
?linkOut@GModel@gimpl@cv@@YA?AV?$Handle@VEdge@ade@@@ade@@AEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@5@V?$Handle@VNode@ade@@@5@1_K@Z;class ade::Handle<class ade::Edge> cv::gimpl::GModel::linkOut(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,class ade::Handle<class ade::Node>,class ade::Handle<class ade::Node>,unsigned __int64)
?linkerAvailable@Device@ocl@cv@@QEBA_NXZ;bool cv::ocl::Device::linkerAvailable(void)
?load@ANN_MLP@ml@cv@@SA?AU?$Ptr@VANN_MLP@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::Ptr<class cv::ml::ANN_MLP> cv::ml::ANN_MLP::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@Boost@ml@cv@@SA?AU?$Ptr@VBoost@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;struct cv::Ptr<class cv::ml::Boost> cv::ml::Boost::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@CascadeClassifier@cv@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::CascadeClassifier::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@DTrees@ml@cv@@SA?AU?$Ptr@VDTrees@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;struct cv::Ptr<class cv::ml::DTrees> cv::ml::DTrees::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@EM@ml@cv@@SA?AU?$Ptr@VEM@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;struct cv::Ptr<class cv::ml::EM> cv::ml::EM::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@HOGDescriptor@cv@@UEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;bool cv::HOGDescriptor::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@Index@flann@cv@@UEAA_NAEBV_InputArray@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::flann::Index::load(class cv::_InputArray const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@KNearest@ml@cv@@SA?AU?$Ptr@VKNearest@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::Ptr<class cv::ml::KNearest> cv::ml::KNearest::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@LDA@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::LDA::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@LDA@cv@@QEAAXAEBVFileStorage@2@@Z;void cv::LDA::load(class cv::FileStorage const &)
?load@LogisticRegression@ml@cv@@SA?AU?$Ptr@VLogisticRegression@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;struct cv::Ptr<class cv::ml::LogisticRegression> cv::ml::LogisticRegression::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@NormalBayesClassifier@ml@cv@@SA?AU?$Ptr@VNormalBayesClassifier@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;struct cv::Ptr<class cv::ml::NormalBayesClassifier> cv::ml::NormalBayesClassifier::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@RTrees@ml@cv@@SA?AU?$Ptr@VRTrees@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;struct cv::Ptr<class cv::ml::RTrees> cv::ml::RTrees::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@SVM@ml@cv@@SA?AU?$Ptr@VSVM@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::Ptr<class cv::ml::SVM> cv::ml::SVM::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load@SVMSGD@ml@cv@@SA?AU?$Ptr@VSVMSGD@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;struct cv::Ptr<class cv::ml::SVMSGD> cv::ml::SVMSGD::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?loadFromCSV@TrainData@ml@cv@@SA?AU?$Ptr@VTrainData@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHH0DD@Z;struct cv::Ptr<class cv::ml::TrainData> cv::ml::TrainData::loadFromCSV(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int,int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,char,char)
?loadWindowParameters@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::loadWindowParameters(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?load_@Index@flann@cv@@IEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::flann::Index::load_(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?localMemSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::localMemSize(void)
?localMemSize@Kernel@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Kernel::localMemSize(void)
?localMemType@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::localMemType(void)
?locate@Subdiv2D@cv@@QEAAHV?$Point_@M@2@AEAH1@Z;int cv::Subdiv2D::locate(class cv::Point_<float>,int &,int &)
?locateROI@GpuMat@cuda@cv@@QEBAXAEAV?$Size_@H@3@AEAV?$Point_@H@3@@Z;void cv::cuda::GpuMat::locateROI(class cv::Size_<int> &,class cv::Point_<int> &)
?locateROI@Mat@cv@@QEBAXAEAV?$Size_@H@2@AEAV?$Point_@H@2@@Z;void cv::Mat::locateROI(class cv::Size_<int> &,class cv::Point_<int> &)
?locateROI@UMat@cv@@QEBAXAEAV?$Size_@H@2@AEAV?$Point_@H@2@@Z;void cv::UMat::locateROI(class cv::Size_<int> &,class cv::Point_<int> &)
?lock@FileLock@fs@utils@cv@@QEAAXXZ;void cv::utils::fs::FileLock::lock(void)
?lock@UMatData@cv@@QEAAXXZ;void cv::UMatData::lock(void)
?lock_shared@FileLock@fs@utils@cv@@QEAAXXZ;void cv::utils::fs::FileLock::lock_shared(void)
?log32f@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::log32f(float const *,float *,int)
?log64f@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::log64f(double const *,double *,int)
?log@GModel@gimpl@cv@@YAXAEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VEdge@ade@@@5@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$Handle@VNode@ade@@@5@@Z;void cv::gimpl::GModel::log(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,class ade::Handle<class ade::Edge>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&,class ade::Handle<class ade::Node>)
?log@GModel@gimpl@cv@@YAXAEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VNode@ade@@@5@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z;void cv::gimpl::GModel::log(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,class ade::Handle<class ade::Node>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &&,class ade::Handle<class ade::Node>)
?log@cv@@YA?AUsoftdouble@1@AEBU21@@Z;struct cv::softdouble cv::log(struct cv::softdouble const &)
?log@cv@@YA?AUsoftfloat@1@AEBU21@@Z;struct cv::softfloat cv::log(struct cv::softfloat const &)
?log@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::log(class cv::_InputArray const &,class cv::_OutputArray const &)
?log@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::log(float const *,float *,int)
?log@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::log(double const *,double *,int)
?logPolar@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@V?$Point_@M@1@NH@Z;void cv::logPolar(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Point_<float>,double,int)
?log_clear@GModel@gimpl@cv@@YAXAEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VNode@ade@@@5@@Z;void cv::gimpl::GModel::log_clear(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,class ade::Handle<class ade::Node>)
?lookup@GKernelPackage@gapi@cv@@QEBA?AU?$pair@VGBackend@gapi@cv@@UGKernelImpl@3@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;struct std::pair<class cv::gapi::GBackend,struct cv::GKernelImpl> cv::gapi::GKernelPackage::lookup(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?lpi@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::lpi(void)
?lpi@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::lpi(void)
?lpos@MatConstIterator@cv@@QEBA_JXZ;__int64 cv::MatConstIterator::lpos(void)
?mStep@EMImpl@ml@cv@@QEAAXXZ;void cv::ml::EMImpl::mStep(void)
?magnitude32f@hal@cv@@YAXPEBM0PEAMH@Z;void cv::hal::magnitude32f(float const *,float const *,float *,int)
?magnitude64f@hal@cv@@YAXPEBN0PEANH@Z;void cv::hal::magnitude64f(double const *,double const *,double *,int)
?magnitude@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::magnitude(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?magnitude@hal@cv@@YAXPEBM0PEAMH@Z;void cv::hal::magnitude(float const *,float const *,float *,int)
?magnitude@hal@cv@@YAXPEBN0PEANH@Z;void cv::hal::magnitude(double const *,double const *,double *,int)
?majorVersion@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::majorVersion(void)
?makeGraph@GCompiler@gimpl@cv@@SA?AV?$unique_ptr@VGraph@ade@@U?$default_delete@VGraph@ade@@@std@@@std@@AEBVPriv@GComputation@3@@Z;class std::unique_ptr<class ade::Graph,struct std::default_delete<class ade::Graph> > cv::gimpl::GCompiler::makeGraph(class cv::GComputation::Priv const &)
?map@MatAllocator@cv@@UEBAXPEAUUMatData@2@W4AccessFlag@2@@Z;void cv::MatAllocator::map(struct cv::UMatData *,enum cv::AccessFlag)
?mapBackward@CompressedRectilinearPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CompressedRectilinearPortraitProjector::mapBackward(float,float,float &,float &)
?mapBackward@CompressedRectilinearProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CompressedRectilinearProjector::mapBackward(float,float,float &,float &)
?mapBackward@CylindricalPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CylindricalPortraitProjector::mapBackward(float,float,float &,float &)
?mapBackward@CylindricalProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CylindricalProjector::mapBackward(float,float,float &,float &)
?mapBackward@FisheyeProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::FisheyeProjector::mapBackward(float,float,float &,float &)
?mapBackward@MercatorProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::MercatorProjector::mapBackward(float,float,float &,float &)
?mapBackward@PaniniPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PaniniPortraitProjector::mapBackward(float,float,float &,float &)
?mapBackward@PaniniProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PaniniProjector::mapBackward(float,float,float &,float &)
?mapBackward@PlanePortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PlanePortraitProjector::mapBackward(float,float,float &,float &)
?mapBackward@PlaneProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PlaneProjector::mapBackward(float,float,float &,float &)
?mapBackward@SphericalPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::SphericalPortraitProjector::mapBackward(float,float,float &,float &)
?mapBackward@SphericalProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::SphericalProjector::mapBackward(float,float,float &,float &)
?mapBackward@StereographicProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::StereographicProjector::mapBackward(float,float,float &,float &)
?mapBackward@TransverseMercatorProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::TransverseMercatorProjector::mapBackward(float,float,float &,float &)
?mapDevice@Buffer@ogl@cv@@QEAA?AVGpuMat@cuda@3@AEAVStream@53@@Z;class cv::cuda::GpuMat cv::ogl::Buffer::mapDevice(class cv::cuda::Stream &)
?mapDevice@Buffer@ogl@cv@@QEAA?AVGpuMat@cuda@3@XZ;class cv::cuda::GpuMat cv::ogl::Buffer::mapDevice(void)
?mapForward@CompressedRectilinearPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CompressedRectilinearPortraitProjector::mapForward(float,float,float &,float &)
?mapForward@CompressedRectilinearProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CompressedRectilinearProjector::mapForward(float,float,float &,float &)
?mapForward@CylindricalPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CylindricalPortraitProjector::mapForward(float,float,float &,float &)
?mapForward@CylindricalProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::CylindricalProjector::mapForward(float,float,float &,float &)
?mapForward@FisheyeProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::FisheyeProjector::mapForward(float,float,float &,float &)
?mapForward@MercatorProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::MercatorProjector::mapForward(float,float,float &,float &)
?mapForward@PaniniPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PaniniPortraitProjector::mapForward(float,float,float &,float &)
?mapForward@PaniniProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PaniniProjector::mapForward(float,float,float &,float &)
?mapForward@PlanePortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PlanePortraitProjector::mapForward(float,float,float &,float &)
?mapForward@PlaneProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::PlaneProjector::mapForward(float,float,float &,float &)
?mapForward@SphericalPortraitProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::SphericalPortraitProjector::mapForward(float,float,float &,float &)
?mapForward@SphericalProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::SphericalProjector::mapForward(float,float,float &,float &)
?mapForward@StereographicProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::StereographicProjector::mapForward(float,float,float &,float &)
?mapForward@TransverseMercatorProjector@detail@cv@@QEAAXMMAEAM0@Z;void cv::detail::TransverseMercatorProjector::mapForward(float,float,float &,float &)
?mapGLBuffer@ogl@cv@@YA?AVUMat@2@AEBVBuffer@12@W4AccessFlag@2@@Z;class cv::UMat cv::ogl::mapGLBuffer(class cv::ogl::Buffer const &,enum cv::AccessFlag)
?mapHost@Buffer@ogl@cv@@QEAA?AVMat@3@W4Access@123@@Z;class cv::Mat cv::ogl::Buffer::mapHost(enum cv::ogl::Buffer::Access)
?markDeviceCopyObsolete@UMatData@cv@@QEAAX_N@Z;void cv::UMatData::markDeviceCopyObsolete(bool)
?markDeviceMemMapped@UMatData@cv@@QEAAX_N@Z;void cv::UMatData::markDeviceMemMapped(bool)
?markHostCopyObsolete@UMatData@cv@@QEAAX_N@Z;void cv::UMatData::markHostCopyObsolete(bool)
?mask@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::mask(class cv::GMat const &,class cv::GMat const &)
?mat@FileNode@cv@@QEBA?AVMat@2@XZ;class cv::Mat cv::FileNode::mat(void)
?matMulDeriv@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@1@Z;void cv::matMulDeriv(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?match@AffineBestOf2NearestMatcher@detail@cv@@MEAAXAEBUImageFeatures@23@0AEAUMatchesInfo@23@@Z;void cv::detail::AffineBestOf2NearestMatcher::match(struct cv::detail::ImageFeatures const &,struct cv::detail::ImageFeatures const &,struct cv::detail::MatchesInfo &)
?match@BestOf2NearestMatcher@detail@cv@@MEAAXAEBUImageFeatures@23@0AEAUMatchesInfo@23@@Z;void cv::detail::BestOf2NearestMatcher::match(struct cv::detail::ImageFeatures const &,struct cv::detail::ImageFeatures const &,struct cv::detail::MatchesInfo &)
?match@DescriptorMatcher@cv@@QEAAXAEBV_InputArray@2@AEAV?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@0@Z;void cv::DescriptorMatcher::match(class cv::_InputArray const &,class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > &,class cv::_InputArray const &)
?match@DescriptorMatcher@cv@@QEBAXAEBV_InputArray@2@0AEAV?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@0@Z;void cv::DescriptorMatcher::match(class cv::_InputArray const &,class cv::_InputArray const &,class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > &,class cv::_InputArray const &)
?matchImages@Stitcher@cv@@AEAA?AW4Status@12@XZ;enum cv::Stitcher::Status cv::Stitcher::matchImages(void)
?matchShapes@cv@@YANAEBV_InputArray@1@0HN@Z;double cv::matchShapes(class cv::_InputArray const &,class cv::_InputArray const &,int,double)
?matchTemplate@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@H0@Z;void cv::matchTemplate(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,class cv::_InputArray const &)
?matchesGraphAsString@detail@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@AEAV?$vector@UMatchesInfo@detail@cv@@V?$allocator@UMatchesInfo@detail@cv@@@std@@@4@M@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::detail::matchesGraphAsString(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class std::vector<struct cv::detail::MatchesInfo,class std::allocator<struct cv::detail::MatchesInfo> > &,float)
?matchingMask@Stitcher@cv@@QEBAAEBVUMat@2@XZ;class cv::UMat const & cv::Stitcher::matchingMask(void)
?matmul@MatOp@cv@@UEBAXAEBVMatExpr@2@0AEAV32@@Z;void cv::MatOp::matmul(class cv::MatExpr const &,class cv::MatExpr const &,class cv::MatExpr &)
?max16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::max16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?max16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::max16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?max32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::max32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?max32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::max32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?max64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::max64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?max8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::max8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?max8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::max8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?max@cv@@YA?AVMatExpr@1@AEBVMat@1@0@Z;class cv::MatExpr cv::max(class cv::Mat const &,class cv::Mat const &)
?max@cv@@YA?AVMatExpr@1@AEBVMat@1@N@Z;class cv::MatExpr cv::max(class cv::Mat const &,double)
?max@cv@@YA?AVMatExpr@1@NAEBVMat@1@@Z;class cv::MatExpr cv::max(double,class cv::Mat const &)
?max@cv@@YAXAEBVMat@1@0AEAV21@@Z;void cv::max(class cv::Mat const &,class cv::Mat const &,class cv::Mat &)
?max@cv@@YAXAEBVUMat@1@0AEAV21@@Z;void cv::max(class cv::UMat const &,class cv::UMat const &,class cv::UMat &)
?max@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::max(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?max@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::max(class cv::GMat const &,class cv::GMat const &)
?max@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::max(void)
?max@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::max(void)
?maxClockFrequency@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::maxClockFrequency(void)
?maxComputeUnits@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::maxComputeUnits(void)
?maxConstantArgs@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::maxConstantArgs(void)
?maxConstantBufferSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::maxConstantBufferSize(void)
?maxGridSize@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$02@3@XZ;class cv::Vec<int,3> cv::cuda::DeviceInfo::maxGridSize(void)
?maxMemAllocSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::maxMemAllocSize(void)
?maxParameterSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::maxParameterSize(void)
?maxReadImageArgs@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::maxReadImageArgs(void)
?maxSamplers@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::maxSamplers(void)
?maxSurface1D@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxSurface1D(void)
?maxSurface1DLayered@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxSurface1DLayered(void)
?maxSurface2D@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxSurface2D(void)
?maxSurface2DLayered@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$02@3@XZ;class cv::Vec<int,3> cv::cuda::DeviceInfo::maxSurface2DLayered(void)
?maxSurface3D@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$02@3@XZ;class cv::Vec<int,3> cv::cuda::DeviceInfo::maxSurface3D(void)
?maxSurfaceCubemap@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxSurfaceCubemap(void)
?maxSurfaceCubemapLayered@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxSurfaceCubemapLayered(void)
?maxTexture1D@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxTexture1D(void)
?maxTexture1DLayered@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxTexture1DLayered(void)
?maxTexture1DLinear@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxTexture1DLinear(void)
?maxTexture1DMipmap@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxTexture1DMipmap(void)
?maxTexture2D@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxTexture2D(void)
?maxTexture2DGather@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxTexture2DGather(void)
?maxTexture2DLayered@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$02@3@XZ;class cv::Vec<int,3> cv::cuda::DeviceInfo::maxTexture2DLayered(void)
?maxTexture2DLinear@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$02@3@XZ;class cv::Vec<int,3> cv::cuda::DeviceInfo::maxTexture2DLinear(void)
?maxTexture2DMipmap@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxTexture2DMipmap(void)
?maxTexture3D@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$02@3@XZ;class cv::Vec<int,3> cv::cuda::DeviceInfo::maxTexture3D(void)
?maxTextureCubemap@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxTextureCubemap(void)
?maxTextureCubemapLayered@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$01@3@XZ;class cv::Vec<int,2> cv::cuda::DeviceInfo::maxTextureCubemapLayered(void)
?maxThreadsDim@DeviceInfo@cuda@cv@@QEBA?AV?$Vec@H$02@3@XZ;class cv::Vec<int,3> cv::cuda::DeviceInfo::maxThreadsDim(void)
?maxThreadsPerBlock@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxThreadsPerBlock(void)
?maxThreadsPerMultiProcessor@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::maxThreadsPerMultiProcessor(void)
?maxWorkGroupSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::maxWorkGroupSize(void)
?maxWorkItemDims@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::maxWorkItemDims(void)
?maxWorkItemSizes@Device@ocl@cv@@QEBAXPEA_K@Z;void cv::ocl::Device::maxWorkItemSizes(unsigned __int64 *)
?maxWriteImageArgs@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::maxWriteImageArgs(void)
?max_idx@TrackerStateEstimatorMILBoosting@tracking@detail@cv@@AEAAIAEBV?$vector@MV?$allocator@M@std@@@std@@@Z;unsigned int cv::detail::tracking::TrackerStateEstimatorMILBoosting::max_idx(class std::vector<float,class std::allocator<float> > const &)
?mctrs@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@CA?AV?$array@P6AXQEAT?$_Align_type@N$0GA@@std@@PEAX@Z$07@std@@XZ;class std::array<void (*)(union std::_Align_type<double,96> * const,void *),8> cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::mctrs(void)
?mean@cv@@YA?AV?$Scalar_@N@1@AEBV_InputArray@1@0@Z;class cv::Scalar_<double> cv::mean(class cv::_InputArray const &,class cv::_InputArray const &)
?mean@gapi@cv@@YA?AVGScalar@2@AEBVGMat@2@@Z;class cv::GScalar cv::gapi::mean(class cv::GMat const &)
?meanShift@cv@@YAHAEBV_InputArray@1@AEAV?$Rect_@H@1@VTermCriteria@1@@Z;int cv::meanShift(class cv::_InputArray const &,class cv::Rect_<int> &,class cv::TermCriteria)
?meanStdDev@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@10@Z;void cv::meanStdDev(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?medianBlur@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::medianBlur(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?medianBlur@gapi@cv@@YA?AVGMat@2@AEBV32@H@Z;class cv::GMat cv::gapi::medianBlur(class cv::GMat const &,int)
?memBaseAddrAlign@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::memBaseAddrAlign(void)
?memPitch@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::memPitch(void)
?memopTypeToStr@ocl@cv@@YAPEBDH@Z;char const * cv::ocl::memopTypeToStr(int)
?memoryBusWidth@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::memoryBusWidth(void)
?memoryClockRate@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::memoryClockRate(void)
?merge16u@hal@cv@@YAXPEAPEBGPEAGHH@Z;void cv::hal::merge16u(unsigned short const * *,unsigned short *,int,int)
?merge32s@hal@cv@@YAXPEAPEBHPEAHHH@Z;void cv::hal::merge32s(int const * *,int *,int,int)
?merge3@gapi@cv@@YA?AVGMat@2@AEBV32@00@Z;class cv::GMat cv::gapi::merge3(class cv::GMat const &,class cv::GMat const &,class cv::GMat const &)
?merge4@gapi@cv@@YA?AVGMat@2@AEBV32@000@Z;class cv::GMat cv::gapi::merge4(class cv::GMat const &,class cv::GMat const &,class cv::GMat const &,class cv::GMat const &)
?merge64s@hal@cv@@YAXPEAPEB_JPEA_JHH@Z;void cv::hal::merge64s(__int64 const * *,__int64 *,int,int)
?merge8u@hal@cv@@YAXPEAPEBEPEAEHH@Z;void cv::hal::merge8u(unsigned char const * *,unsigned char *,int,int)
?merge@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::merge(class cv::_InputArray const &,class cv::_OutputArray const &)
?merge@cv@@YAXPEBVMat@1@_KAEBV_OutputArray@1@@Z;void cv::merge(class cv::Mat const *,unsigned __int64,class cv::_OutputArray const &)
?mergeSets@DisjointSets@detail@cv@@QEAAHHH@Z;int cv::detail::DisjointSets::mergeSets(int,int)
?meta@Buffer@fluid@gapi@cv@@QEBAAEBUGMatDesc@4@XZ;struct cv::GMatDesc const & cv::gapi::fluid::Buffer::meta(void)
?meta@Priv@Buffer@fluid@gapi@cv@@QEBAAEBUGMatDesc@5@XZ;struct cv::GMatDesc const & cv::gapi::fluid::Buffer::Priv::meta(void)
?meta@View@fluid@gapi@cv@@QEBAAEBUGMatDesc@4@XZ;struct cv::GMatDesc const & cv::gapi::fluid::View::meta(void)
?meta_args_deserialize@s11n@gapi@cv@@YA?AV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEAUIIStream@123@@Z;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > cv::gapi::s11n::meta_args_deserialize(struct cv::gapi::s11n::IIStream &)
?metas@GCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GCompiled::metas(void)
?metas@GStreamingCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GStreamingCompiled::metas(void)
?metas@Priv@GCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GCompiled::Priv::metas(void)
?metas@Priv@GStreamingCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GStreamingCompiled::Priv::metas(void)
?min16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::min16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?min16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::min16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?min32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::min32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?min32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::min32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?min64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::min64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?min8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::min8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?min8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::min8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?min@cv@@YA?AVMatExpr@1@AEBVMat@1@0@Z;class cv::MatExpr cv::min(class cv::Mat const &,class cv::Mat const &)
?min@cv@@YA?AVMatExpr@1@AEBVMat@1@N@Z;class cv::MatExpr cv::min(class cv::Mat const &,double)
?min@cv@@YA?AVMatExpr@1@NAEBVMat@1@@Z;class cv::MatExpr cv::min(double,class cv::Mat const &)
?min@cv@@YAXAEBVMat@1@0AEAV21@@Z;void cv::min(class cv::Mat const &,class cv::Mat const &,class cv::Mat &)
?min@cv@@YAXAEBVUMat@1@0AEAV21@@Z;void cv::min(class cv::UMat const &,class cv::UMat const &,class cv::UMat &)
?min@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::min(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?min@gapi@cv@@YA?AVGMat@2@AEBV32@0@Z;class cv::GMat cv::gapi::min(class cv::GMat const &,class cv::GMat const &)
?min@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::min(void)
?min@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::min(void)
?minAreaRect@cv@@YA?AVRotatedRect@1@AEBV_InputArray@1@@Z;class cv::RotatedRect cv::minAreaRect(class cv::_InputArray const &)
?minEnclosingCircle@cv@@YAXAEBV_InputArray@1@AEAV?$Point_@M@1@AEAM@Z;void cv::minEnclosingCircle(class cv::_InputArray const &,class cv::Point_<float> &,float &)
?minEnclosingTriangle@cv@@YANAEBV_InputArray@1@AEBV_OutputArray@1@@Z;double cv::minEnclosingTriangle(class cv::_InputArray const &,class cv::_OutputArray const &)
?minMaxIdx@cv@@YAXAEBV_InputArray@1@PEAN1PEAH20@Z;void cv::minMaxIdx(class cv::_InputArray const &,double *,double *,int *,int *,class cv::_InputArray const &)
?minMaxLoc@cv@@YAXAEBVSparseMat@1@PEAN1PEAH2@Z;void cv::minMaxLoc(class cv::SparseMat const &,double *,double *,int *,int *)
?minMaxLoc@cv@@YAXAEBV_InputArray@1@PEAN1PEAV?$Point_@H@1@20@Z;void cv::minMaxLoc(class cv::_InputArray const &,double *,double *,class cv::Point_<int> *,class cv::Point_<int> *,class cv::_InputArray const &)
?minorVersion@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::minorVersion(void)
?missingValue@TrainData@ml@cv@@SAMXZ;float cv::ml::TrainData::missingValue(void)
?mixChannels@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@AEBV?$vector@HV?$allocator@H@std@@@std@@@Z;void cv::mixChannels(class cv::_InputArray const &,class cv::_InputOutputArray const &,class std::vector<int,class std::allocator<int> > const &)
?mixChannels@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@PEBH_K@Z;void cv::mixChannels(class cv::_InputArray const &,class cv::_InputOutputArray const &,int const *,unsigned __int64)
?mixChannels@cv@@YAXPEBVMat@1@_KPEAV21@1PEBH1@Z;void cv::mixChannels(class cv::Mat const *,unsigned __int64,class cv::Mat *,unsigned __int64,int const *,unsigned __int64)
?mkDataNode@GModel@gimpl@cv@@YA?AV?$Handle@VNode@ade@@@ade@@AEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@5@W4GShape@3@@Z;class ade::Handle<class ade::Node> cv::gimpl::GModel::mkDataNode(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,enum cv::GShape)
?mkOpNode@GModel@gimpl@cv@@YA?AV?$Handle@VNode@ade@@@ade@@AEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@5@AEBUGKernel@3@AEBV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@std@@AEBVany@util@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@9@@Z;class ade::Handle<class ade::Node> cv::gimpl::GModel::mkOpNode(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,struct cv::GKernel const &,class std::vector<class cv::GArg,class std::allocator<class cv::GArg> > const &,class cv::util::any const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?mkView@Buffer@fluid@gapi@cv@@QEAA?AVView@234@H_N@Z;class cv::gapi::fluid::View cv::gapi::fluid::Buffer::mkView(int,bool)
?model@Priv@GCompiled@cv@@QEBAAEBV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@XZ;class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> const & cv::GCompiled::Priv::model(void)
?modelEstimation@TrackerModel@tracking@detail@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::tracking::TrackerModel::modelEstimation(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
?modelUpdate@TrackerModel@tracking@detail@cv@@QEAAXXZ;void cv::detail::tracking::TrackerModel::modelUpdate(void)
?moments@cv@@YA?AVMoments@1@AEBV_InputArray@1@_N@Z;class cv::Moments cv::moments(class cv::_InputArray const &,bool)
?morph@hal@cv@@YAXHHHPEAE_K01HHHHHHHHHHH01HHHHHQEBNH_N@Z;void cv::hal::morph(int,int,int,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,int,int,int,int,int,int,int,unsigned char *,unsigned __int64,int,int,int,int,int,double const * const,int,bool)
?morphologyEx@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H0V?$Point_@H@1@HHAEBV?$Scalar_@N@1@@Z;void cv::morphologyEx(class cv::_InputArray const &,class cv::_OutputArray const &,int,class cv::_InputArray const &,class cv::Point_<int>,int,int,class cv::Scalar_<double> const &)
?morphologyEx@gapi@cv@@YA?AVGMat@2@AEBV32@W4MorphTypes@2@AEBVMat@2@AEBV?$Point_@H@2@HW4BorderTypes@2@AEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::morphologyEx(class cv::GMat const &,enum cv::MorphTypes,class cv::Mat const &,class cv::Point_<int> const &,int,enum cv::BorderTypes,class cv::Scalar_<double> const &)
?move@_OutputArray@cv@@QEBAXAEAVMat@2@@Z;void cv::_OutputArray::move(class cv::Mat &)
?move@_OutputArray@cv@@QEBAXAEAVUMat@2@@Z;void cv::_OutputArray::move(class cv::UMat &)
?moveWindow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z;void cv::moveWindow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int)
?mul16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::mul16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?mul16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::mul16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?mul32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::mul32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?mul32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::mul32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?mul64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::mul64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?mul8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::mul8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?mul8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::mul8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?mul@Mat@cv@@QEBA?AVMatExpr@2@AEBV_InputArray@2@N@Z;class cv::MatExpr cv::Mat::mul(class cv::_InputArray const &,double)
?mul@MatExpr@cv@@QEBA?AV12@AEBV12@N@Z;class cv::MatExpr cv::MatExpr::mul(class cv::MatExpr const &,double)
?mul@MatExpr@cv@@QEBA?AV12@AEBVMat@2@N@Z;class cv::MatExpr cv::MatExpr::mul(class cv::Mat const &,double)
?mul@UMat@cv@@QEBA?AV12@AEBV_InputArray@2@N@Z;class cv::UMat cv::UMat::mul(class cv::_InputArray const &,double)
?mul@gapi@cv@@YA?AVGMat@2@AEBV32@0NH@Z;class cv::GMat cv::gapi::mul(class cv::GMat const &,class cv::GMat const &,double,int)
?mulAdd@cv@@YA?AUsoftdouble@1@AEBU21@00@Z;struct cv::softdouble cv::mulAdd(struct cv::softdouble const &,struct cv::softdouble const &,struct cv::softdouble const &)
?mulAdd@cv@@YA?AUsoftfloat@1@AEBU21@00@Z;struct cv::softfloat cv::mulAdd(struct cv::softfloat const &,struct cv::softfloat const &,struct cv::softfloat const &)
?mulC@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@H@Z;class cv::GMat cv::gapi::mulC(class cv::GMat const &,class cv::GScalar const &,int)
?mulC@gapi@cv@@YA?AVGMat@2@AEBV32@NH@Z;class cv::GMat cv::gapi::mulC(class cv::GMat const &,double,int)
?mulC@gapi@cv@@YA?AVGMat@2@AEBVGScalar@2@AEBV32@H@Z;class cv::GMat cv::gapi::mulC(class cv::GScalar const &,class cv::GMat const &,int)
?mulSpectrums@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@H_N@Z;void cv::mulSpectrums(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int,bool)
?mulTransposed@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@_N0NH@Z;void cv::mulTransposed(class cv::_InputArray const &,class cv::_OutputArray const &,bool,class cv::_InputArray const &,double,int)
?multiProcessorCount@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::multiProcessorCount(void)
?multiply@MatOp@cv@@UEBAXAEBVMatExpr@2@0AEAV32@N@Z;void cv::MatOp::multiply(class cv::MatExpr const &,class cv::MatExpr const &,class cv::MatExpr &,double)
?multiply@MatOp@cv@@UEBAXAEBVMatExpr@2@NAEAV32@@Z;void cv::MatOp::multiply(class cv::MatExpr const &,double,class cv::MatExpr &)
?multiply@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@NH@Z;void cv::multiply(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,double,int)
?mvers@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@CA?AV?$array@P6AXQEAT?$_Align_type@N$0GA@@std@@0@Z$07@std@@XZ;class std::array<void (*)(union std::_Align_type<double,96> * const,union std::_Align_type<double,96> * const),8> cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::mvers(void)
?name@Device@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Device::name(void)
?name@DeviceInfo@cuda@cv@@QEBAPEBDXZ;char const * cv::cuda::DeviceInfo::name(void)
?name@FileNode@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::FileNode::name(void)
?name@GIsland@gimpl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::gimpl::GIsland::name(void)
?name@PlatformInfo@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::PlatformInfo::name(void)
?namedWindow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;void cv::namedWindow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?nan@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::nan(void)
?nan@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::nan(void)
?nativeVectorWidthChar@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::nativeVectorWidthChar(void)
?nativeVectorWidthDouble@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::nativeVectorWidthDouble(void)
?nativeVectorWidthFloat@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::nativeVectorWidthFloat(void)
?nativeVectorWidthHalf@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::nativeVectorWidthHalf(void)
?nativeVectorWidthInt@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::nativeVectorWidthInt(void)
?nativeVectorWidthLong@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::nativeVectorWidthLong(void)
?nativeVectorWidthShort@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::nativeVectorWidthShort(void)
?ndevices@Context@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Context::ndevices(void)
?ndoffset@UMat@cv@@QEBAXPEA_K@Z;void cv::UMat::ndoffset(unsigned __int64 *)
?needed@_OutputArray@cv@@QEBA_NXZ;bool cv::_OutputArray::needed(void)
?newEdge@Subdiv2D@cv@@IEAAHXZ;int cv::Subdiv2D::newEdge(void)
?newNode@SparseMat@cv@@QEAAPEAEPEBH_K@Z;unsigned char * cv::SparseMat::newNode(int const *,unsigned __int64)
?newPoint@Subdiv2D@cv@@IEAAHV?$Point_@M@2@_NH@Z;int cv::Subdiv2D::newPoint(class cv::Point_<float>,bool,int)
?next@RNG@cv@@QEAAIXZ;unsigned int cv::RNG::next(void)
?next@RNG_MT19937@cv@@QEAAIXZ;unsigned int cv::RNG_MT19937::next(void)
?nextEdge@Subdiv2D@cv@@QEBAHH@Z;int cv::Subdiv2D::nextEdge(int)
?noArray@cv@@YAAEBV_InputOutputArray@1@XZ;class cv::_InputOutputArray const & cv::noArray(void)
?node@SparseMat@cv@@QEAAPEAUNode@12@_K@Z;struct cv::SparseMat::Node * cv::SparseMat::node(unsigned __int64)
?node@SparseMat@cv@@QEBAPEBUNode@12@_K@Z;struct cv::SparseMat::Node const * cv::SparseMat::node(unsigned __int64)
?node@SparseMatConstIterator@cv@@QEBAPEBUNode@SparseMat@2@XZ;struct cv::SparseMat::Node const * cv::SparseMatConstIterator::node(void)
?node@SparseMatIterator@cv@@QEBAPEAUNode@SparseMat@2@XZ;struct cv::SparseMat::Node * cv::SparseMatIterator::node(void)
?nonLocalMeans@cuda@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@MHHHAEAVStream@12@@Z;void cv::cuda::nonLocalMeans(class cv::_InputArray const &,class cv::_OutputArray const &,float,int,int,int,class cv::cuda::Stream &)
?norm@cv@@YANAEBVSparseMat@1@H@Z;double cv::norm(class cv::SparseMat const &,int)
?norm@cv@@YANAEBV_InputArray@1@0H0@Z;double cv::norm(class cv::_InputArray const &,class cv::_InputArray const &,int,class cv::_InputArray const &)
?norm@cv@@YANAEBV_InputArray@1@H0@Z;double cv::norm(class cv::_InputArray const &,int,class cv::_InputArray const &)
?normHamming@hal@cv@@YAHPEBE0H@Z;int cv::hal::normHamming(unsigned char const *,unsigned char const *,int)
?normHamming@hal@cv@@YAHPEBE0HH@Z;int cv::hal::normHamming(unsigned char const *,unsigned char const *,int,int)
?normHamming@hal@cv@@YAHPEBEH@Z;int cv::hal::normHamming(unsigned char const *,int)
?normHamming@hal@cv@@YAHPEBEHH@Z;int cv::hal::normHamming(unsigned char const *,int,int)
?normInf@gapi@cv@@YA?AVGScalar@2@AEBVGMat@2@@Z;class cv::GScalar cv::gapi::normInf(class cv::GMat const &)
?normL1@gapi@cv@@YA?AVGScalar@2@AEBVGMat@2@@Z;class cv::GScalar cv::gapi::normL1(class cv::GMat const &)
?normL1_@hal@cv@@YAHPEBE0H@Z;int cv::hal::normL1_(unsigned char const *,unsigned char const *,int)
?normL1_@hal@cv@@YAMPEBM0H@Z;float cv::hal::normL1_(float const *,float const *,int)
?normL2@gapi@cv@@YA?AVGScalar@2@AEBVGMat@2@@Z;class cv::GScalar cv::gapi::normL2(class cv::GMat const &)
?normL2Sqr_@hal@cv@@YAMPEBM0H@Z;float cv::hal::normL2Sqr_(float const *,float const *,int)
?normType@Hamming@cv@@2W4NormTypes@2@B;enum cv::NormTypes const cv::Hamming::normType
?normalize@cv@@YAXAEBVSparseMat@1@AEAV21@NH@Z;void cv::normalize(class cv::SparseMat const &,class cv::SparseMat &,double,int)
?normalize@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@NNHH0@Z;void cv::normalize(class cv::_InputArray const &,class cv::_InputOutputArray const &,double,double,int,int,class cv::_InputArray const &)
?normalize@gapi@cv@@YA?AVGMat@2@AEBV32@NNHH@Z;class cv::GMat cv::gapi::normalize(class cv::GMat const &,double,double,int,int)
?normalizeUsingWeightMap@detail@cv@@YAXAEBV_InputArray@2@AEBV_InputOutputArray@2@@Z;void cv::detail::normalizeUsingWeightMap(class cv::_InputArray const &,class cv::_InputOutputArray const &)
?not8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::not8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?numBands@MultiBandBlender@detail@cv@@QEBAHXZ;int cv::detail::MultiBandBlender::numBands(void)
?numVertices@Graph@detail@cv@@QEBAHXZ;int cv::detail::Graph::numVertices(void)
?nzcount@SparseMat@cv@@QEBA_KXZ;unsigned __int64 cv::SparseMat::nzcount(void)
?obtainRefinedCameraParams@BundleAdjusterAffine@detail@cv@@EEBAXAEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterAffine::obtainRefinedCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?obtainRefinedCameraParams@BundleAdjusterAffinePartial@detail@cv@@EEBAXAEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterAffinePartial::obtainRefinedCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?obtainRefinedCameraParams@BundleAdjusterRay@detail@cv@@EEBAXAEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterRay::obtainRefinedCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?obtainRefinedCameraParams@BundleAdjusterReproj@detail@cv@@EEBAXAEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterReproj::obtainRefinedCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?obtainRefinedCameraParams@NoBundleAdjuster@detail@cv@@EEBAXAEAV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::NoBundleAdjuster::obtainRefinedCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > &)
?offset@_InputArray@cv@@QEBA_KH@Z;unsigned __int64 cv::_InputArray::offset(int)
?one@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::one(void)
?one@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::one(void)
?ones@Mat@cv@@SA?AVMatExpr@2@HHH@Z;class cv::MatExpr cv::Mat::ones(int,int,int)
?ones@Mat@cv@@SA?AVMatExpr@2@HPEBHH@Z;class cv::MatExpr cv::Mat::ones(int,int const *,int)
?ones@Mat@cv@@SA?AVMatExpr@2@V?$Size_@H@2@H@Z;class cv::MatExpr cv::Mat::ones(class cv::Size_<int>,int)
?ones@UMat@cv@@SA?AV12@HHH@Z;class cv::UMat cv::UMat::ones(int,int,int)
?ones@UMat@cv@@SA?AV12@HHHW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::ones(int,int,int,enum cv::UMatUsageFlags)
?ones@UMat@cv@@SA?AV12@HPEBHH@Z;class cv::UMat cv::UMat::ones(int,int const *,int)
?ones@UMat@cv@@SA?AV12@HPEBHHW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::ones(int,int const *,int,enum cv::UMatUsageFlags)
?ones@UMat@cv@@SA?AV12@V?$Size_@H@2@H@Z;class cv::UMat cv::UMat::ones(class cv::Size_<int>,int)
?ones@UMat@cv@@SA?AV12@V?$Size_@H@2@HW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::ones(class cv::Size_<int>,int,enum cv::UMatUsageFlags)
?open@FileStorage@cv@@UEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0@Z;bool cv::FileStorage::open(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?open@VideoCapture@cv@@UEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;bool cv::VideoCapture::open(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?open@VideoCapture@cv@@UEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HAEBV?$vector@HV?$allocator@H@std@@@4@@Z;bool cv::VideoCapture::open(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class std::vector<int,class std::allocator<int> > const &)
?open@VideoCapture@cv@@UEAA_NHH@Z;bool cv::VideoCapture::open(int,int)
?open@VideoCapture@cv@@UEAA_NHHAEBV?$vector@HV?$allocator@H@std@@@std@@@Z;bool cv::VideoCapture::open(int,int,class std::vector<int,class std::allocator<int> > const &)
?open@VideoWriter@cv@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHNAEBV?$Size_@H@2@AEBV?$vector@HV?$allocator@H@std@@@4@@Z;bool cv::VideoWriter::open(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int,double,class cv::Size_<int> const &,class std::vector<int,class std::allocator<int> > const &)
?open@VideoWriter@cv@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHNV?$Size_@H@2@_N@Z;bool cv::VideoWriter::open(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int,double,class cv::Size_<int>,bool)
?open@VideoWriter@cv@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HNAEBV?$Size_@H@2@AEBV?$vector@HV?$allocator@H@std@@@4@@Z;bool cv::VideoWriter::open(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,double,class cv::Size_<int> const &,class std::vector<int,class std::allocator<int> > const &)
?open@VideoWriter@cv@@UEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HNV?$Size_@H@2@_N@Z;bool cv::VideoWriter::open(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,double,class cv::Size_<int>,bool)
?or8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::or8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?orderedInputs@GModel@gimpl@cv@@YA?AV?$vector@V?$Handle@VNode@ade@@@ade@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@std@@@std@@AEBV?$ConstTypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VNode@ade@@@7@@Z;class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > > cv::gimpl::GModel::orderedInputs(class ade::ConstTypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> const &,class ade::Handle<class ade::Node>)
?orderedOutputs@GModel@gimpl@cv@@YA?AV?$vector@V?$Handle@VNode@ade@@@ade@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@std@@@std@@AEBV?$ConstTypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VNode@ade@@@7@@Z;class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > > cv::gimpl::GModel::orderedOutputs(class ade::ConstTypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> const &,class ade::Handle<class ade::Node>)
?origin_of@proto@gimpl@cv@@YAAEBUGOrigin@3@AEBV?$variant@VGMat@cv@@VGMatP@2@VGFrame@2@VGScalar@2@VGArrayU@detail@2@VGOpaqueU@72@@util@3@@Z;struct cv::GOrigin const & cv::gimpl::proto::origin_of(class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU> const &)
?origin_of@proto@gimpl@cv@@YAAEBUGOrigin@3@AEBVGArg@3@@Z;struct cv::GOrigin const & cv::gimpl::proto::origin_of(class cv::GArg const &)
?outFrame@GCPUContext@cv@@QEAAAEAVMediaFrame@2@H@Z;class cv::MediaFrame & cv::GCPUContext::outFrame(int)
?outInfo@Priv@GStreamingCompiled@cv@@QEBAAEBV?$vector@UGTypeInfo@cv@@V?$allocator@UGTypeInfo@cv@@@std@@@std@@XZ;class std::vector<struct cv::GTypeInfo,class std::allocator<struct cv::GTypeInfo> > const & cv::GStreamingCompiled::Priv::outInfo(void)
?outMatR@GCPUContext@cv@@QEAAAEAVMat@2@H@Z;class cv::Mat & cv::GCPUContext::outMatR(int)
?outMatR@GOCLContext@cv@@QEAAAEAVUMat@2@H@Z;class cv::UMat & cv::GOCLContext::outMatR(int)
?outMetas@GCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GCompiled::outMetas(void)
?outMetas@GStreamingCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GStreamingCompiled::outMetas(void)
?outMetas@Priv@GCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GCompiled::Priv::outMetas(void)
?outMetas@Priv@GStreamingCompiled@cv@@QEBAAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@XZ;class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const & cv::GStreamingCompiled::Priv::outMetas(void)
?outOpaqueRef@GCPUContext@cv@@IEAAAEAVOpaqueRef@detail@2@H@Z;class cv::detail::OpaqueRef & cv::GCPUContext::outOpaqueRef(int)
?outOpaqueRef@GOCLContext@cv@@IEAAAEAVOpaqueRef@detail@2@H@Z;class cv::detail::OpaqueRef & cv::GOCLContext::outOpaqueRef(int)
?outValR@GCPUContext@cv@@QEAAAEAV?$Scalar_@N@2@H@Z;class cv::Scalar_<double> & cv::GCPUContext::outValR(int)
?outValR@GOCLContext@cv@@QEAAAEAV?$Scalar_@N@2@H@Z;class cv::Scalar_<double> & cv::GOCLContext::outValR(int)
?outVecRef@GCPUContext@cv@@IEAAAEAVVectorRef@detail@2@H@Z;class cv::detail::VectorRef & cv::GCPUContext::outVecRef(int)
?outVecRef@GOCLContext@cv@@IEAAAEAVVectorRef@detail@2@H@Z;class cv::detail::VectorRef & cv::GOCLContext::outVecRef(int)
?out_ops@GIsland@gimpl@cv@@QEBAAEBV?$unordered_set@V?$Handle@VNode@ade@@@ade@@U?$HandleHasher@VNode@ade@@@2@U?$equal_to@V?$Handle@VNode@ade@@@ade@@@std@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@5@@std@@XZ;class std::unordered_set<class ade::Handle<class ade::Node>,struct ade::HandleHasher<class ade::Node>,struct std::equal_to<class ade::Handle<class ade::Node> >,class std::allocator<class ade::Handle<class ade::Node> > > const & cv::gimpl::GIsland::out_ops(void)
?outputLines@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::outputLines(void)
?outputNameToIndex@LSTMLayer@dnn4_v20211004@dnn@cv@@UEAAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;int cv::dnn::dnn4_v20211004::LSTMLayer::outputNameToIndex(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?outputNameToIndex@Layer@dnn4_v20211004@dnn@cv@@UEAAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;int cv::dnn::dnn4_v20211004::Layer::outputNameToIndex(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?overlap@KeyPoint@cv@@SAMAEBV12@0@Z;float cv::KeyPoint::overlap(class cv::KeyPoint const &,class cv::KeyPoint const &)
?overlapRoi@detail@cv@@YA_NV?$Point_@H@2@0V?$Size_@H@2@1AEAV?$Rect_@H@2@@Z;bool cv::detail::overlapRoi(class cv::Point_<int>,class cv::Point_<int>,class cv::Size_<int>,class cv::Size_<int>,class cv::Rect_<int> &)
?panoConfidenceThresh@Stitcher@cv@@QEBANXZ;double cv::Stitcher::panoConfidenceThresh(void)
?parallel_for_@cv@@YAXAEBVRange@1@AEBVParallelLoopBody@1@N@Z;void cv::parallel_for_(class cv::Range const &,class cv::ParallelLoopBody const &,double)
?params@GCall@cv@@QEAAAEAVany@util@2@XZ;class cv::util::any & cv::GCall::params(void)
?params@PyParams@ie@gapi@cv@@QEBA?AVany@util@4@XZ;class cv::util::any cv::gapi::ie::PyParams::params(void)
?params@ie@gapi@cv@@YA?AVPyParams@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000@Z;class cv::gapi::ie::PyParams cv::gapi::ie::params(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?params@ie@gapi@cv@@YA?AVPyParams@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z;class cv::gapi::ie::PyParams cv::gapi::ie::params(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?parseAvi@AVIReadContainer@cv@@QEAA_NAEAV?$deque@U?$pair@_KI@std@@V?$allocator@U?$pair@_KI@std@@@2@@std@@W4Codecs@2@@Z;bool cv::AVIReadContainer::parseAvi(class std::deque<struct std::pair<unsigned __int64,unsigned int>,class std::allocator<struct std::pair<unsigned __int64,unsigned int> > > &,enum cv::Codecs)
?parseAvi@AVIReadContainer@cv@@QEAA_NW4Codecs@2@@Z;bool cv::AVIReadContainer::parseAvi(enum cv::Codecs)
?parseAviWithFrameList@AVIReadContainer@cv@@IEAA_NAEAV?$deque@U?$pair@_KI@std@@V?$allocator@U?$pair@_KI@std@@@2@@std@@W4Codecs@2@@Z;bool cv::AVIReadContainer::parseAviWithFrameList(class std::deque<struct std::pair<unsigned __int64,unsigned int>,class std::allocator<struct std::pair<unsigned __int64,unsigned int> > > &,enum cv::Codecs)
?parseHdrlList@AVIReadContainer@cv@@IEAA_NW4Codecs@2@@Z;bool cv::AVIReadContainer::parseHdrlList(enum cv::Codecs)
?parseIndex@AVIReadContainer@cv@@IEAA_NIAEAV?$deque@U?$pair@_KI@std@@V?$allocator@U?$pair@_KI@std@@@2@@std@@@Z;bool cv::AVIReadContainer::parseIndex(unsigned int,class std::deque<struct std::pair<unsigned __int64,unsigned int>,class std::allocator<struct std::pair<unsigned __int64,unsigned int> > > &)
?parseInfo@AVIReadContainer@cv@@IEAA_NXZ;bool cv::AVIReadContainer::parseInfo(void)
?parseMovi@AVIReadContainer@cv@@IEAA_NAEAV?$deque@U?$pair@_KI@std@@V?$allocator@U?$pair@_KI@std@@@2@@std@@@Z;bool cv::AVIReadContainer::parseMovi(class std::deque<struct std::pair<unsigned __int64,unsigned int>,class std::allocator<struct std::pair<unsigned __int64,unsigned int> > > &)
?parseRiff@AVIReadContainer@cv@@QEAA_NAEAV?$deque@U?$pair@_KI@std@@V?$allocator@U?$pair@_KI@std@@@2@@std@@@Z;bool cv::AVIReadContainer::parseRiff(class std::deque<struct std::pair<unsigned __int64,unsigned int>,class std::allocator<struct std::pair<unsigned __int64,unsigned int> > > &)
?parseSSD@gapi@cv@@YA?AV?$GArray@V?$Rect_@H@cv@@@2@AEBVGMat@2@AEBV?$GOpaque@V?$Size_@H@cv@@@2@M_N2@Z;class cv::GArray<class cv::Rect_<int> > cv::gapi::parseSSD(class cv::GMat const &,class cv::GOpaque<class cv::Size_<int> > const &,float,bool,bool)
?parseSSD@gapi@cv@@YA?AV?$tuple@V?$GArray@V?$Rect_@H@cv@@@cv@@V?$GArray@H@2@@std@@AEBVGMat@2@AEBV?$GOpaque@V?$Size_@H@cv@@@2@MH@Z;class std::tuple<class cv::GArray<class cv::Rect_<int> >,class cv::GArray<int> > cv::gapi::parseSSD(class cv::GMat const &,class cv::GOpaque<class cv::Size_<int> > const &,float,int)
?parseStrl@AVIReadContainer@cv@@IEAA_NDW4Codecs@2@@Z;bool cv::AVIReadContainer::parseStrl(char,enum cv::Codecs)
?parseYolo@gapi@cv@@YA?AV?$tuple@V?$GArray@V?$Rect_@H@cv@@@cv@@V?$GArray@H@2@@std@@AEBVGMat@2@AEBV?$GOpaque@V?$Size_@H@cv@@@2@MMAEBV?$vector@MV?$allocator@M@std@@@4@@Z;class std::tuple<class cv::GArray<class cv::Rect_<int> >,class cv::GArray<int> > cv::gapi::parseYolo(class cv::GMat const &,class cv::GOpaque<class cv::Size_<int> > const &,float,float,class std::vector<float,class std::allocator<float> > const &)
?patchNaNs@cv@@YAXAEBV_InputOutputArray@1@N@Z;void cv::patchNaNs(class cv::_InputOutputArray const &,double)
?pciBusID@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::pciBusID(void)
?pciDeviceID@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::pciDeviceID(void)
?pciDomainID@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::pciDomainID(void)
?pencilSketch@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1MMM@Z;void cv::pencilSketch(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,float,float,float)
?performSubstitution@gimpl@cv@@YAXAEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@AEBUProtocol@12@1AEBUSubgraphMatch@12@@Z;void cv::gimpl::performSubstitution(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,struct cv::gimpl::Protocol const &,struct cv::gimpl::Protocol const &,struct cv::gimpl::SubgraphMatch const &)
?perspectiveTransform@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0@Z;void cv::perspectiveTransform(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?phase@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@_N@Z;void cv::phase(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,bool)
?phase@gapi@cv@@YA?AVGMat@2@AEBV32@0_N@Z;class cv::GMat cv::gapi::phase(class cv::GMat const &,class cv::GMat const &,bool)
?phaseCorrelate@cv@@YA?AV?$Point_@N@1@AEBV_InputArray@1@00PEAN@Z;class cv::Point_<double> cv::phaseCorrelate(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,double *)
?pi@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::pi(void)
?pi@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::pi(void)
?pointPolygonTest@cv@@YANAEBV_InputArray@1@V?$Point_@M@1@_N@Z;double cv::pointPolygonTest(class cv::_InputArray const &,class cv::Point_<float>,bool)
?points@RotatedRect@cv@@QEBAXQEAV?$Point_@M@2@@Z;void cv::RotatedRect::points(class cv::Point_<float> * const)
?polarToCart@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@1_N@Z;void cv::polarToCart(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,bool)
?polarToCart@gapi@cv@@YA?AV?$tuple@VGMat@cv@@V12@@std@@AEBVGMat@2@0_N@Z;class std::tuple<class cv::GMat,class cv::GMat> cv::gapi::polarToCart(class cv::GMat const &,class cv::GMat const &,bool)
?pollKey@cv@@YAHXZ;int cv::pollKey(void)
?polylines@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@_NAEBV?$Scalar_@N@1@HHH@Z;void cv::polylines(class cv::_InputOutputArray const &,class cv::_InputArray const &,bool,class cv::Scalar_<double> const &,int,int,int)
?polylines@cv@@YAXAEBV_InputOutputArray@1@PEBQEBV?$Point_@H@1@PEBHH_NAEBV?$Scalar_@N@1@HHH@Z;void cv::polylines(class cv::_InputOutputArray const &,class cv::Point_<int> const * const *,int const *,int,bool,class cv::Scalar_<double> const &,int,int,int)
?pop_back@Mat@cv@@QEAAX_K@Z;void cv::Mat::pop_back(unsigned __int64)
?pos@LineIterator@cv@@QEBA?AV?$Point_@H@2@XZ;class cv::Point_<int> cv::LineIterator::pos(void)
?pos@MatConstIterator@cv@@QEBA?AV?$Point_@H@2@XZ;class cv::Point_<int> cv::MatConstIterator::pos(void)
?pos@MatConstIterator@cv@@QEBAXPEAH@Z;void cv::MatConstIterator::pos(int *)
?pow@cv@@YA?AUsoftdouble@1@AEBU21@0@Z;struct cv::softdouble cv::pow(struct cv::softdouble const &,struct cv::softdouble const &)
?pow@cv@@YA?AUsoftfloat@1@AEBU21@0@Z;struct cv::softfloat cv::pow(struct cv::softfloat const &,struct cv::softfloat const &)
?pow@cv@@YAXAEBV_InputArray@1@NAEBV_OutputArray@1@@Z;void cv::pow(class cv::_InputArray const &,double,class cv::_OutputArray const &)
?preCornerDetect@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HH@Z;void cv::preCornerDetect(class cv::_InputArray const &,class cv::_OutputArray const &,int,int)
?predict2@EMImpl@ml@cv@@UEBA?AV?$Vec@N$01@3@AEBV_InputArray@3@AEBV_OutputArray@3@@Z;class cv::Vec<double,2> cv::ml::EMImpl::predict2(class cv::_InputArray const &,class cv::_OutputArray const &)
?predict@EMImpl@ml@cv@@UEBAMAEBV_InputArray@3@AEBV_OutputArray@3@H@Z;float cv::ml::EMImpl::predict(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?predict@KalmanFilter@cv@@QEAAAEBVMat@2@AEBV32@@Z;class cv::Mat const & cv::KalmanFilter::predict(class cv::Mat const &)
?predict@Model@dnn4_v20211004@dnn@cv@@QEBAXAEBV_InputArray@4@AEBV_OutputArray@4@@Z;void cv::dnn::dnn4_v20211004::Model::predict(class cv::_InputArray const &,class cv::_OutputArray const &)
?predictOptimalVectorWidth@ocl@cv@@YAHAEBV_InputArray@2@00000000W4OclVectorStrategy@12@@Z;int cv::ocl::predictOptimalVectorWidth(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,enum cv::ocl::OclVectorStrategy)
?predictOptimalVectorWidthMax@ocl@cv@@YAHAEBV_InputArray@2@00000000@Z;int cv::ocl::predictOptimalVectorWidthMax(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?preferedWorkGroupSizeMultiple@Kernel@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Kernel::preferedWorkGroupSizeMultiple(void)
?preferredVectorWidthChar@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::preferredVectorWidthChar(void)
?preferredVectorWidthDouble@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::preferredVectorWidthDouble(void)
?preferredVectorWidthFloat@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::preferredVectorWidthFloat(void)
?preferredVectorWidthHalf@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::preferredVectorWidthHalf(void)
?preferredVectorWidthInt@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::preferredVectorWidthInt(void)
?preferredVectorWidthLong@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::preferredVectorWidthLong(void)
?preferredVectorWidthShort@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::preferredVectorWidthShort(void)
?prepare@Blender@detail@cv@@UEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@V?$Size_@H@cv@@V?$allocator@V?$Size_@H@cv@@@std@@@5@@Z;void cv::detail::Blender::prepare(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::Size_<int>,class std::allocator<class cv::Size_<int> > > const &)
?prepare@Blender@detail@cv@@UEAAXV?$Rect_@H@3@@Z;void cv::detail::Blender::prepare(class cv::Rect_<int>)
?prepare@FeatherBlender@detail@cv@@UEAAXV?$Rect_@H@3@@Z;void cv::detail::FeatherBlender::prepare(class cv::Rect_<int>)
?prepare@MultiBandBlender@detail@cv@@UEAAXV?$Rect_@H@3@@Z;void cv::detail::MultiBandBlender::prepare(class cv::Rect_<int>)
?prepareData@TrackerStateEstimatorMILBoosting@tracking@detail@cv@@AEAAXAEBV?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@AEAVMat@4@1@Z;void cv::detail::tracking::TrackerStateEstimatorMILBoosting::prepareData(class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > const &,class cv::Mat &,class cv::Mat &)
?prepareForNewStream@GCompiled@cv@@QEAAXXZ;void cv::GCompiled::prepareForNewStream(void)
?prepareForNewStream@Priv@GCompiled@cv@@QEAAXXZ;void cv::GCompiled::Priv::prepareForNewStream(void)
?prepareSimilarityMask@GainCompensator@detail@cv@@QEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@@Z;void cv::detail::GainCompensator::prepareSimilarityMask(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
?preprocessProbability@EMImpl@ml@cv@@SAXAEAVMat@3@@Z;void cv::ml::EMImpl::preprocessProbability(class cv::Mat &)
?preprocessSampleData@EMImpl@ml@cv@@SAXAEBVMat@3@AEAV43@H_N@Z;void cv::ml::EMImpl::preprocessSampleData(class cv::Mat const &,class cv::Mat &,int,bool)
?printCudaDeviceInfo@cuda@cv@@YAXH@Z;void cv::cuda::printCudaDeviceInfo(int)
?printError@AVIReadContainer@cv@@IEAAXAEAURiffChunk@2@I@Z;void cv::AVIReadContainer::printError(struct cv::RiffChunk &,unsigned int)
?printError@AVIReadContainer@cv@@IEAAXAEAURiffList@2@I@Z;void cv::AVIReadContainer::printError(struct cv::RiffList &,unsigned int)
?printErrors@CommandLineParser@cv@@QEBAXXZ;void cv::CommandLineParser::printErrors(void)
?printMessage@CommandLineParser@cv@@QEBAXXZ;void cv::CommandLineParser::printMessage(void)
?printShortCudaDeviceInfo@cuda@cv@@YAXH@Z;void cv::cuda::printShortCudaDeviceInfo(int)
?printfBufferSize@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::printfBufferSize(void)
?priv@Buffer@fluid@gapi@cv@@QEAAAEAVPriv@1234@XZ;class cv::gapi::fluid::Buffer::Priv & cv::gapi::fluid::Buffer::priv(void)
?priv@Buffer@fluid@gapi@cv@@QEBAAEBVPriv@1234@XZ;class cv::gapi::fluid::Buffer::Priv const & cv::gapi::fluid::Buffer::priv(void)
?priv@GArrayU@detail@cv@@QEAAAEAUGOrigin@3@XZ;struct cv::GOrigin & cv::detail::GArrayU::priv(void)
?priv@GArrayU@detail@cv@@QEBAAEBUGOrigin@3@XZ;struct cv::GOrigin const & cv::detail::GArrayU::priv(void)
?priv@GBackend@gapi@cv@@QEAAAEAVPriv@123@XZ;class cv::gapi::GBackend::Priv & cv::gapi::GBackend::priv(void)
?priv@GBackend@gapi@cv@@QEBAAEBVPriv@123@XZ;class cv::gapi::GBackend::Priv const & cv::gapi::GBackend::priv(void)
?priv@GCall@cv@@QEAAAEAVPriv@12@XZ;class cv::GCall::Priv & cv::GCall::priv(void)
?priv@GCall@cv@@QEBAAEBVPriv@12@XZ;class cv::GCall::Priv const & cv::GCall::priv(void)
?priv@GCompiled@cv@@QEAAAEAVPriv@12@XZ;class cv::GCompiled::Priv & cv::GCompiled::priv(void)
?priv@GComputation@cv@@QEAAAEAVPriv@12@XZ;class cv::GComputation::Priv & cv::GComputation::priv(void)
?priv@GComputation@cv@@QEBAAEBVPriv@12@XZ;class cv::GComputation::Priv const & cv::GComputation::priv(void)
?priv@GFrame@cv@@QEAAAEAUGOrigin@2@XZ;struct cv::GOrigin & cv::GFrame::priv(void)
?priv@GFrame@cv@@QEBAAEBUGOrigin@2@XZ;struct cv::GOrigin const & cv::GFrame::priv(void)
?priv@GMat@cv@@QEAAAEAUGOrigin@2@XZ;struct cv::GOrigin & cv::GMat::priv(void)
?priv@GMat@cv@@QEBAAEBUGOrigin@2@XZ;struct cv::GOrigin const & cv::GMat::priv(void)
?priv@GOpaqueU@detail@cv@@QEAAAEAUGOrigin@3@XZ;struct cv::GOrigin & cv::detail::GOpaqueU::priv(void)
?priv@GOpaqueU@detail@cv@@QEBAAEBUGOrigin@3@XZ;struct cv::GOrigin const & cv::detail::GOpaqueU::priv(void)
?priv@GScalar@cv@@QEAAAEAUGOrigin@2@XZ;struct cv::GOrigin & cv::GScalar::priv(void)
?priv@GScalar@cv@@QEBAAEBUGOrigin@2@XZ;struct cv::GOrigin const & cv::GScalar::priv(void)
?priv@GStreamingCompiled@cv@@QEAAAEAVPriv@12@XZ;class cv::GStreamingCompiled::Priv & cv::GStreamingCompiled::priv(void)
?priv@View@fluid@gapi@cv@@QEAAAEAVPriv@1234@XZ;class cv::gapi::fluid::View::Priv & cv::gapi::fluid::View::priv(void)
?priv@View@fluid@gapi@cv@@QEBAAEBVPriv@1234@XZ;class cv::gapi::fluid::View::Priv const & cv::gapi::fluid::View::priv(void)
?process@DetectionBasedTracker@cv@@UEAAXAEBVMat@2@@Z;void cv::DetectionBasedTracker::process(class cv::Mat const &)
?process@DpSeamFinder@detail@cv@@AEAAXAEBVMat@3@0V?$Point_@H@3@1AEAV43@2@Z;void cv::detail::DpSeamFinder::process(class cv::Mat const &,class cv::Mat const &,class cv::Point_<int>,class cv::Point_<int>,class cv::Mat &,class cv::Mat &)
?process@Timelapser@detail@cv@@UEAAXAEBV_InputArray@3@0V?$Point_@H@3@@Z;void cv::detail::Timelapser::process(class cv::_InputArray const &,class cv::_InputArray const &,class cv::Point_<int>)
?produceCompiled@GCompiler@gimpl@cv@@QEAA?AVGCompiled@3@$$QEAV?$unique_ptr@VGraph@ade@@U?$default_delete@VGraph@ade@@@std@@@std@@@Z;class cv::GCompiled cv::gimpl::GCompiler::produceCompiled(class std::unique_ptr<class ade::Graph,struct std::default_delete<class ade::Graph> > &&)
?produceStreamingCompiled@GCompiler@gimpl@cv@@QEAA?AVGStreamingCompiled@3@$$QEAV?$unique_ptr@VGraph@ade@@U?$default_delete@VGraph@ade@@@std@@@std@@@Z;class cv::GStreamingCompiled cv::gimpl::GCompiler::produceStreamingCompiled(class std::unique_ptr<class ade::Graph,struct std::default_delete<class ade::Graph> > &&)
?producer@GIsland@gimpl@cv@@QEBA?AV?$Handle@VNode@ade@@@ade@@AEBVGraph@5@AEBV45@@Z;class ade::Handle<class ade::Node> cv::gimpl::GIsland::producer(class ade::Graph const &,class ade::Handle<class ade::Node> const &)
?producerOf@GIslandModel@gimpl@cv@@YA?AV?$Handle@VNode@ade@@@ade@@AEBV?$ConstTypedGraph@UNodeKind@gimpl@cv@@UFusedIsland@23@UDataSlot@23@UIslandExec@23@UEmitter@23@USink@23@UIslandsCompiled@23@UDesyncIslEdge@23@UTopologicalSortData@passes@ade@@@5@AEAV45@@Z;class ade::Handle<class ade::Node> cv::gimpl::GIslandModel::producerOf(class ade::ConstTypedGraph<struct cv::gimpl::NodeKind,struct cv::gimpl::FusedIsland,struct cv::gimpl::DataSlot,struct cv::gimpl::IslandExec,struct cv::gimpl::Emitter,struct cv::gimpl::Sink,struct cv::gimpl::IslandsCompiled,struct cv::gimpl::DesyncIslEdge,struct ade::passes::TopologicalSortData> const &,class ade::Handle<class ade::Node> &)
?profilingTimerResolution@Device@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Device::profilingTimerResolution(void)
?project@LDA@cv@@QEAA?AVMat@2@AEBV_InputArray@2@@Z;class cv::Mat cv::LDA::project(class cv::_InputArray const &)
?project@PCA@cv@@QEBA?AVMat@2@AEBV_InputArray@2@@Z;class cv::Mat cv::PCA::project(class cv::_InputArray const &)
?project@PCA@cv@@QEBAXAEBV_InputArray@2@AEBV_OutputArray@2@@Z;void cv::PCA::project(class cv::_InputArray const &,class cv::_OutputArray const &)
?projectPoints@cv@@YAXAEBV_InputArray@1@0000AEBV_OutputArray@1@1N@Z;void cv::projectPoints(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double)
?projectPoints@fisheye@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@0000N1@Z;void cv::fisheye::projectPoints(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,double,class cv::_OutputArray const &)
?projectPoints@fisheye@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@AEBV?$Affine3@N@2@00N1@Z;void cv::fisheye::projectPoints(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Affine3<double> const &,class cv::_InputArray const &,class cv::_InputArray const &,double,class cv::_OutputArray const &)
?ptr@Context@ocl@cv@@QEBAPEAXXZ;void * cv::ocl::Context::ptr(void)
?ptr@Device@ocl@cv@@QEBAPEAXXZ;void * cv::ocl::Device::ptr(void)
?ptr@Dict@dnn4_v20211004@dnn@cv@@QEAAPEAUDictValue@234@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::dnn::dnn4_v20211004::DictValue * cv::dnn::dnn4_v20211004::Dict::ptr(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?ptr@Dict@dnn4_v20211004@dnn@cv@@QEBAPEBUDictValue@234@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct cv::dnn::dnn4_v20211004::DictValue const * cv::dnn::dnn4_v20211004::Dict::ptr(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?ptr@FileNode@cv@@QEAAPEAEXZ;unsigned char * cv::FileNode::ptr(void)
?ptr@FileNode@cv@@QEBAPEBEXZ;unsigned char const * cv::FileNode::ptr(void)
?ptr@GpuMat@cuda@cv@@QEAAPEAEH@Z;unsigned char * cv::cuda::GpuMat::ptr(int)
?ptr@GpuMat@cuda@cv@@QEBAPEBEH@Z;unsigned char const * cv::cuda::GpuMat::ptr(int)
?ptr@Image2D@ocl@cv@@QEBAPEAXXZ;void * cv::ocl::Image2D::ptr(void)
?ptr@Kernel@ocl@cv@@QEBAPEAXXZ;void * cv::ocl::Kernel::ptr(void)
?ptr@Mat@cv@@QEAAPEAEH@Z;unsigned char * cv::Mat::ptr(int)
?ptr@Mat@cv@@QEAAPEAEHH@Z;unsigned char * cv::Mat::ptr(int,int)
?ptr@Mat@cv@@QEAAPEAEHHH@Z;unsigned char * cv::Mat::ptr(int,int,int)
?ptr@Mat@cv@@QEAAPEAEPEBH@Z;unsigned char * cv::Mat::ptr(int const *)
?ptr@Mat@cv@@QEBAPEBEH@Z;unsigned char const * cv::Mat::ptr(int)
?ptr@Mat@cv@@QEBAPEBEHH@Z;unsigned char const * cv::Mat::ptr(int,int)
?ptr@Mat@cv@@QEBAPEBEHHH@Z;unsigned char const * cv::Mat::ptr(int,int,int)
?ptr@Mat@cv@@QEBAPEBEPEBH@Z;unsigned char const * cv::Mat::ptr(int const *)
?ptr@Platform@ocl@cv@@QEBAPEAXXZ;void * cv::ocl::Platform::ptr(void)
?ptr@Program@ocl@cv@@QEBAPEAXXZ;void * cv::ocl::Program::ptr(void)
?ptr@Queue@ocl@cv@@QEBAPEAXXZ;void * cv::ocl::Queue::ptr(void)
?ptr@SparseMat@cv@@QEAAPEAEHHH_NPEA_K@Z;unsigned char * cv::SparseMat::ptr(int,int,int,bool,unsigned __int64 *)
?ptr@SparseMat@cv@@QEAAPEAEHH_NPEA_K@Z;unsigned char * cv::SparseMat::ptr(int,int,bool,unsigned __int64 *)
?ptr@SparseMat@cv@@QEAAPEAEH_NPEA_K@Z;unsigned char * cv::SparseMat::ptr(int,bool,unsigned __int64 *)
?ptr@SparseMat@cv@@QEAAPEAEPEBH_NPEA_K@Z;unsigned char * cv::SparseMat::ptr(int const *,bool,unsigned __int64 *)
?ptr@proto@gimpl@cv@@YAPEBXAEBV?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@3@@Z;void const * cv::gimpl::proto::ptr(class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> const &)
?pull@GSource@onevpl@wip@gapi@cv@@UEAA_NAEAUData@345@@Z;bool cv::gapi::wip::onevpl::GSource::pull(struct cv::gapi::wip::Data &)
?pull@GStreamingCompiled@cv@@QEAA?AV?$tuple@_NV?$variant@V?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@V?$vector@V?$variant@V?$optional@VMat@cv@@@util@cv@@V?$optional@VRMat@cv@@@23@V?$optional@VMediaFrame@cv@@@23@V?$optional@V?$Scalar_@N@cv@@@23@V?$optional@VVectorRef@detail@cv@@@23@V?$optional@VOpaqueRef@detail@cv@@@23@@util@cv@@V?$allocator@V?$variant@V?$optional@VMat@cv@@@util@cv@@V?$optional@VRMat@cv@@@23@V?$optional@VMediaFrame@cv@@@23@V?$optional@V?$Scalar_@N@cv@@@23@V?$optional@VVectorRef@detail@cv@@@23@V?$optional@VOpaqueRef@detail@cv@@@23@@util@cv@@@std@@@2@@util@cv@@@std@@XZ;class std::tuple<bool,class cv::util::variant<class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> >,class std::vector<class cv::util::variant<class cv::util::optional<class cv::Mat>,class cv::util::optional<class cv::RMat>,class cv::util::optional<class cv::MediaFrame>,class cv::util::optional<class cv::Scalar_<double> >,class cv::util::optional<class cv::detail::VectorRef>,class cv::util::optional<class cv::detail::OpaqueRef> >,class std::allocator<class cv::util::variant<class cv::util::optional<class cv::Mat>,class cv::util::optional<class cv::RMat>,class cv::util::optional<class cv::MediaFrame>,class cv::util::optional<class cv::Scalar_<double> >,class cv::util::optional<class cv::detail::VectorRef>,class cv::util::optional<class cv::detail::OpaqueRef> > > > > > cv::GStreamingCompiled::pull(void)
?pull@GStreamingCompiled@cv@@QEAA_N$$QEAV?$vector@V?$variant@PEAV?$optional@VMat@cv@@@util@cv@@PEAV?$optional@VRMat@cv@@@23@PEAV?$optional@VMediaFrame@cv@@@23@PEAV?$optional@V?$Scalar_@N@cv@@@23@U?$OptRef@VVectorRef@detail@cv@@@detail@3@U?$OptRef@VOpaqueRef@detail@cv@@@83@@util@cv@@V?$allocator@V?$variant@PEAV?$optional@VMat@cv@@@util@cv@@PEAV?$optional@VRMat@cv@@@23@PEAV?$optional@VMediaFrame@cv@@@23@PEAV?$optional@V?$Scalar_@N@cv@@@23@U?$OptRef@VVectorRef@detail@cv@@@detail@3@U?$OptRef@VOpaqueRef@detail@cv@@@83@@util@cv@@@std@@@std@@@Z;bool cv::GStreamingCompiled::pull(class std::vector<class cv::util::variant<class cv::util::optional<class cv::Mat> *,class cv::util::optional<class cv::RMat> *,class cv::util::optional<class cv::MediaFrame> *,class cv::util::optional<class cv::Scalar_<double> > *,struct cv::detail::OptRef<class cv::detail::VectorRef>,struct cv::detail::OptRef<class cv::detail::OpaqueRef> >,class std::allocator<class cv::util::variant<class cv::util::optional<class cv::Mat> *,class cv::util::optional<class cv::RMat> *,class cv::util::optional<class cv::MediaFrame> *,class cv::util::optional<class cv::Scalar_<double> > *,struct cv::detail::OptRef<class cv::detail::VectorRef>,struct cv::detail::OptRef<class cv::detail::OpaqueRef> > > > &&)
?pull@GStreamingCompiled@cv@@QEAA_N$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@std@@@Z;bool cv::GStreamingCompiled::pull(class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&)
?pull@Priv@GStreamingCompiled@cv@@QEAA?AV?$tuple@_NV?$variant@V?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@V?$vector@V?$variant@V?$optional@VMat@cv@@@util@cv@@V?$optional@VRMat@cv@@@23@V?$optional@VMediaFrame@cv@@@23@V?$optional@V?$Scalar_@N@cv@@@23@V?$optional@VVectorRef@detail@cv@@@23@V?$optional@VOpaqueRef@detail@cv@@@23@@util@cv@@V?$allocator@V?$variant@V?$optional@VMat@cv@@@util@cv@@V?$optional@VRMat@cv@@@23@V?$optional@VMediaFrame@cv@@@23@V?$optional@V?$Scalar_@N@cv@@@23@V?$optional@VVectorRef@detail@cv@@@23@V?$optional@VOpaqueRef@detail@cv@@@23@@util@cv@@@std@@@2@@util@cv@@@std@@XZ;class std::tuple<bool,class cv::util::variant<class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> >,class std::vector<class cv::util::variant<class cv::util::optional<class cv::Mat>,class cv::util::optional<class cv::RMat>,class cv::util::optional<class cv::MediaFrame>,class cv::util::optional<class cv::Scalar_<double> >,class cv::util::optional<class cv::detail::VectorRef>,class cv::util::optional<class cv::detail::OpaqueRef> >,class std::allocator<class cv::util::variant<class cv::util::optional<class cv::Mat>,class cv::util::optional<class cv::RMat>,class cv::util::optional<class cv::MediaFrame>,class cv::util::optional<class cv::Scalar_<double> >,class cv::util::optional<class cv::detail::VectorRef>,class cv::util::optional<class cv::detail::OpaqueRef> > > > > > cv::GStreamingCompiled::Priv::pull(void)
?pull@Priv@GStreamingCompiled@cv@@QEAA_N$$QEAV?$vector@V?$variant@PEAV?$optional@VMat@cv@@@util@cv@@PEAV?$optional@VRMat@cv@@@23@PEAV?$optional@VMediaFrame@cv@@@23@PEAV?$optional@V?$Scalar_@N@cv@@@23@U?$OptRef@VVectorRef@detail@cv@@@detail@3@U?$OptRef@VOpaqueRef@detail@cv@@@83@@util@cv@@V?$allocator@V?$variant@PEAV?$optional@VMat@cv@@@util@cv@@PEAV?$optional@VRMat@cv@@@23@PEAV?$optional@VMediaFrame@cv@@@23@PEAV?$optional@V?$Scalar_@N@cv@@@23@U?$OptRef@VVectorRef@detail@cv@@@detail@3@U?$OptRef@VOpaqueRef@detail@cv@@@83@@util@cv@@@std@@@std@@@Z;bool cv::GStreamingCompiled::Priv::pull(class std::vector<class cv::util::variant<class cv::util::optional<class cv::Mat> *,class cv::util::optional<class cv::RMat> *,class cv::util::optional<class cv::MediaFrame> *,class cv::util::optional<class cv::Scalar_<double> > *,struct cv::detail::OptRef<class cv::detail::VectorRef>,struct cv::detail::OptRef<class cv::detail::OpaqueRef> >,class std::allocator<class cv::util::variant<class cv::util::optional<class cv::Mat> *,class cv::util::optional<class cv::RMat> *,class cv::util::optional<class cv::MediaFrame> *,class cv::util::optional<class cv::Scalar_<double> > *,struct cv::detail::OptRef<class cv::detail::VectorRef>,struct cv::detail::OptRef<class cv::detail::OpaqueRef> > > > &&)
?pull@Priv@GStreamingCompiled@cv@@QEAA_N$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@std@@@Z;bool cv::GStreamingCompiled::Priv::pull(class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&)
?pushFrameOffset@AVIWriteContainer@cv@@QEAAX_K@Z;void cv::AVIWriteContainer::pushFrameOffset(unsigned __int64)
?pushFrameSize@AVIWriteContainer@cv@@QEAAX_K@Z;void cv::AVIWriteContainer::pushFrameSize(unsigned __int64)
?push_back@Mat@cv@@QEAAXAEBV12@@Z;void cv::Mat::push_back(class cv::Mat const &)
?push_back_@Mat@cv@@QEAAXPEBX@Z;void cv::Mat::push_back_(void const *)
?put@GModelBuilder@gimpl@cv@@QEAA?AV?$tuple@V?$vector@URcDesc@gimpl@cv@@V?$allocator@URcDesc@gimpl@cv@@@std@@@std@@V12@V?$vector@V?$Handle@VNode@ade@@@ade@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@std@@@2@V32@@std@@AEBV?$vector@V?$variant@VGMat@cv@@VGMatP@2@VGFrame@2@VGScalar@2@VGArrayU@detail@2@VGOpaqueU@72@@util@cv@@V?$allocator@V?$variant@VGMat@cv@@VGMatP@2@VGFrame@2@VGScalar@2@VGArrayU@detail@2@VGOpaqueU@72@@util@cv@@@std@@@5@0@Z;class std::tuple<class std::vector<struct cv::gimpl::RcDesc,class std::allocator<struct cv::gimpl::RcDesc> >,class std::vector<struct cv::gimpl::RcDesc,class std::allocator<struct cv::gimpl::RcDesc> >,class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > >,class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > > > cv::gimpl::GModelBuilder::put(class std::vector<class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU>,class std::allocator<class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU> > > const &,class std::vector<class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU>,class std::allocator<class cv::util::variant<class cv::GMat,c
?putStreamByte@AVIWriteContainer@cv@@QEAAXH@Z;void cv::AVIWriteContainer::putStreamByte(int)
?putStreamBytes@AVIWriteContainer@cv@@QEAAXPEBEH@Z;void cv::AVIWriteContainer::putStreamBytes(unsigned char const *,int)
?putText@FTTextRender@draw@wip@gapi@cv@@QEAAXAEAVMat@5@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$Point_@H@5@H@Z;void cv::gapi::wip::draw::FTTextRender::putText(class cv::Mat &,class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > const &,class cv::Point_<int> const &,int)
?putText@cv@@YAXAEBV_InputOutputArray@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$Point_@H@1@HNV?$Scalar_@N@1@HH_N@Z;void cv::putText(class cv::_InputOutputArray const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Point_<int>,int,double,class cv::Scalar_<double>,int,int,bool)
?put_DataNode@GModelBuilder@gimpl@cv@@AEAA?AV?$Handle@VNode@ade@@@ade@@AEBUGOrigin@3@@Z;class ade::Handle<class ade::Node> cv::gimpl::GModelBuilder::put_DataNode(struct cv::GOrigin const &)
?put_OpNode@GModelBuilder@gimpl@cv@@AEAA?AV?$Handle@VNode@ade@@@ade@@AEBVGNode@3@@Z;class ade::Handle<class ade::Node> cv::gimpl::GModelBuilder::put_OpNode(class cv::GNode const &)
?pyrDown@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@AEBV?$Size_@H@1@H@Z;void cv::pyrDown(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Size_<int> const &,int)
?pyrMeanShiftFiltering@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@NNHVTermCriteria@1@@Z;void cv::pyrMeanShiftFiltering(class cv::_InputArray const &,class cv::_OutputArray const &,double,double,int,class cv::TermCriteria)
?pyrUp@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@AEBV?$Size_@H@1@H@Z;void cv::pyrUp(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Size_<int> const &,int)
?quantize@Net@dnn4_v20211004@dnn@cv@@QEAA?AV1234@AEBV_InputArray@4@HH@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::Net::quantize(class cv::_InputArray const &,int,int)
?queryIfComplete@Event@cuda@cv@@QEBA_NXZ;bool cv::cuda::Event::queryIfComplete(void)
?queryIfComplete@Stream@cuda@cv@@QEBA_NXZ;bool cv::cuda::Stream::queryIfComplete(void)
?queryMemory@DeviceInfo@cuda@cv@@QEBAXAEA_K0@Z;void cv::cuda::DeviceInfo::queryMemory(unsigned __int64 &,unsigned __int64 &)
?radiusMatch@DescriptorMatcher@cv@@QEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@M0_N@Z;void cv::DescriptorMatcher::radiusMatch(class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,float,class cv::_InputArray const &,bool)
?radiusMatch@DescriptorMatcher@cv@@QEBAXAEBV_InputArray@2@0AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@M0_N@Z;void cv::DescriptorMatcher::radiusMatch(class cv::_InputArray const &,class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,float,class cv::_InputArray const &,bool)
?radiusMatchImpl@BFMatcher@cv@@MEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@M0_N@Z;void cv::BFMatcher::radiusMatchImpl(class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,float,class cv::_InputArray const &,bool)
?radiusMatchImpl@FlannBasedMatcher@cv@@MEAAXAEBV_InputArray@2@AEAV?$vector@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@V?$allocator@V?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@2@@std@@M0_N@Z;void cv::FlannBasedMatcher::radiusMatchImpl(class cv::_InputArray const &,class std::vector<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> >,class std::allocator<class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > > > &,float,class cv::_InputArray const &,bool)
?radiusSearch@Index@flann@cv@@UEAAHAEBV_InputArray@3@AEBV_OutputArray@3@1NHAEBUSearchParams@23@@Z;int cv::flann::Index::radiusSearch(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double,int,struct cv::flann::SearchParams const &)
?randMVNormal@ml@cv@@YAXAEBV_InputArray@2@0HAEBV_OutputArray@2@@Z;void cv::ml::randMVNormal(class cv::_InputArray const &,class cv::_InputArray const &,int,class cv::_OutputArray const &)
?randShuffle@cv@@YAXAEBV_InputOutputArray@1@NPEAVRNG@1@@Z;void cv::randShuffle(class cv::_InputOutputArray const &,double,class cv::RNG *)
?randn@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@1@Z;void cv::randn(class cv::_InputOutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?randu@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@1@Z;void cv::randu(class cv::_InputOutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?rawSize@FileNode@cv@@QEBA_KXZ;unsigned __int64 cv::FileNode::rawSize(void)
?read@Algorithm@cv@@UEAAXAEBVFileNode@2@@Z;void cv::Algorithm::read(class cv::FileNode const &)
?read@CascadeClassifier@cv@@QEAA_NAEBVFileNode@2@@Z;bool cv::CascadeClassifier::read(class cv::FileNode const &)
?read@DescriptorMatcher@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::DescriptorMatcher::read(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?read@DescriptorMatcher@cv@@UEAAXAEBVFileNode@2@@Z;void cv::DescriptorMatcher::read(class cv::FileNode const &)
?read@EMImpl@ml@cv@@UEAAXAEBVFileNode@3@@Z;void cv::ml::EMImpl::read(class cv::FileNode const &)
?read@Feature2D@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::Feature2D::read(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?read@Feature2D@cv@@UEAAXAEBVFileNode@2@@Z;void cv::Feature2D::read(class cv::FileNode const &)
?read@FlannBasedMatcher@cv@@UEAAXAEBVFileNode@2@@Z;void cv::FlannBasedMatcher::read(class cv::FileNode const &)
?read@HOGDescriptor@cv@@UEAA_NAEAVFileNode@2@@Z;bool cv::HOGDescriptor::read(class cv::FileNode &)
?read@PCA@cv@@QEAAXAEBVFileNode@2@@Z;void cv::PCA::read(class cv::FileNode const &)
?read@Params@SimpleBlobDetector@cv@@QEAAXAEBVFileNode@3@@Z;void cv::SimpleBlobDetector::Params::read(class cv::FileNode const &)
?read@Program@ocl@cv@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;bool cv::ocl::Program::read(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?read@SimpleBlobDetectorImpl@cv@@UEAAXAEBVFileNode@2@@Z;void cv::SimpleBlobDetectorImpl::read(class cv::FileNode const &)
?read@VideoCapture@cv@@UEAA_NAEBV_OutputArray@2@@Z;bool cv::VideoCapture::read(class cv::_OutputArray const &)
?read@cv@@YAXAEBVFileNode@1@AEAHH@Z;void cv::read(class cv::FileNode const &,int &,int)
?read@cv@@YAXAEBVFileNode@1@AEAMM@Z;void cv::read(class cv::FileNode const &,float &,float)
?read@cv@@YAXAEBVFileNode@1@AEANN@Z;void cv::read(class cv::FileNode const &,double &,double)
?read@cv@@YAXAEBVFileNode@1@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z;void cv::read(class cv::FileNode const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?read@cv@@YAXAEBVFileNode@1@AEAV?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@std@@@Z;void cv::read(class cv::FileNode const &,class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > &)
?read@cv@@YAXAEBVFileNode@1@AEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@@Z;void cv::read(class cv::FileNode const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &)
?read@cv@@YAXAEBVFileNode@1@AEAVDMatch@1@AEBV31@@Z;void cv::read(class cv::FileNode const &,class cv::DMatch &,class cv::DMatch const &)
?read@cv@@YAXAEBVFileNode@1@AEAVKeyPoint@1@AEBV31@@Z;void cv::read(class cv::FileNode const &,class cv::KeyPoint &,class cv::KeyPoint const &)
?read@cv@@YAXAEBVFileNode@1@AEAVMat@1@AEBV31@@Z;void cv::read(class cv::FileNode const &,class cv::Mat &,class cv::Mat const &)
?read@cv@@YAXAEBVFileNode@1@AEAVSparseMat@1@AEBV31@@Z;void cv::read(class cv::FileNode const &,class cv::SparseMat &,class cv::SparseMat const &)
?readDone@Priv@View@fluid@gapi@cv@@QEAAXHH@Z;void cv::gapi::fluid::View::Priv::readDone(int,int)
?readFrame@AVIReadContainer@cv@@QEAA?AV?$vector@DV?$allocator@D@std@@@std@@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@U?$pair@_KI@std@@@std@@@std@@@4@@Z;class std::vector<char,class std::allocator<char> > cv::AVIReadContainer::readFrame(class std::_Deque_iterator<class std::_Deque_val<struct std::_Deque_simple_types<struct std::pair<unsigned __int64,unsigned int> > > >)
?readFromModelOptimizer@Net@dnn4_v20211004@dnn@cv@@SA?AV1234@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::Net::readFromModelOptimizer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readFromModelOptimizer@Net@dnn4_v20211004@dnn@cv@@SA?AV1234@AEBV?$vector@EV?$allocator@E@std@@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::Net::readFromModelOptimizer(class std::vector<unsigned char,class std::allocator<unsigned char> > const &,class std::vector<unsigned char,class std::allocator<unsigned char> > const &)
?readFromModelOptimizer@Net@dnn4_v20211004@dnn@cv@@SA?AV1234@PEBE_K01@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::Net::readFromModelOptimizer(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64)
?readNet@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNet(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readNet@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@EV?$allocator@E@std@@@6@1@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNet(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<unsigned char,class std::allocator<unsigned char> > const &,class std::vector<unsigned char,class std::allocator<unsigned char> > const &)
?readNetFromCaffe@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromCaffe(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readNetFromCaffe@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$vector@EV?$allocator@E@std@@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromCaffe(class std::vector<unsigned char,class std::allocator<unsigned char> > const &,class std::vector<unsigned char,class std::allocator<unsigned char> > const &)
?readNetFromCaffe@dnn4_v20211004@dnn@cv@@YA?AVNet@123@PEBD_K01@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromCaffe(char const *,unsigned __int64,char const *,unsigned __int64)
?readNetFromDarknet@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromDarknet(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readNetFromDarknet@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$vector@EV?$allocator@E@std@@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromDarknet(class std::vector<unsigned char,class std::allocator<unsigned char> > const &,class std::vector<unsigned char,class std::allocator<unsigned char> > const &)
?readNetFromDarknet@dnn4_v20211004@dnn@cv@@YA?AVNet@123@PEBD_K01@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromDarknet(char const *,unsigned __int64,char const *,unsigned __int64)
?readNetFromModelOptimizer@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromModelOptimizer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readNetFromModelOptimizer@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$vector@EV?$allocator@E@std@@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromModelOptimizer(class std::vector<unsigned char,class std::allocator<unsigned char> > const &,class std::vector<unsigned char,class std::allocator<unsigned char> > const &)
?readNetFromModelOptimizer@dnn4_v20211004@dnn@cv@@YA?AVNet@123@PEBE_K01@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromModelOptimizer(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64)
?readNetFromONNX@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromONNX(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readNetFromONNX@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$vector@EV?$allocator@E@std@@@std@@@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromONNX(class std::vector<unsigned char,class std::allocator<unsigned char> > const &)
?readNetFromONNX@dnn4_v20211004@dnn@cv@@YA?AVNet@123@PEBD_K@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromONNX(char const *,unsigned __int64)
?readNetFromTensorflow@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromTensorflow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readNetFromTensorflow@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$vector@EV?$allocator@E@std@@@std@@0@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromTensorflow(class std::vector<unsigned char,class std::allocator<unsigned char> > const &,class std::vector<unsigned char,class std::allocator<unsigned char> > const &)
?readNetFromTensorflow@dnn4_v20211004@dnn@cv@@YA?AVNet@123@PEBD_K01@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromTensorflow(char const *,unsigned __int64,char const *,unsigned __int64)
?readNetFromTorch@dnn4_v20211004@dnn@cv@@YA?AVNet@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N1@Z;class cv::dnn::dnn4_v20211004::Net cv::dnn::dnn4_v20211004::readNetFromTorch(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool,bool)
?readOpticalFlow@cv@@YA?AVMat@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::Mat cv::readOpticalFlow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readRaw@FileNode@cv@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX_K@Z;void cv::FileNode::readRaw(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void *,unsigned __int64)
?readRaw@FileNodeIterator@cv@@QEAAAEAV12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX_K@Z;class cv::FileNodeIterator & cv::FileNodeIterator::readRaw(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void *,unsigned __int64)
?readStart@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::readStart(void)
?readTensorFromONNX@dnn4_v20211004@dnn@cv@@YA?AVMat@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::Mat cv::dnn::dnn4_v20211004::readTensorFromONNX(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?readTorchBlob@dnn4_v20211004@dnn@cv@@YA?AVMat@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z;class cv::Mat cv::dnn::dnn4_v20211004::readTorchBlob(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)
?read_params@EMImpl@ml@cv@@QEAAXAEBVFileNode@3@@Z;void cv::ml::EMImpl::read_params(class cv::FileNode const &)
?ready@Priv@View@fluid@gapi@cv@@QEBA_NXZ;bool cv::gapi::fluid::View::Priv::ready(void)
?ready@View@fluid@gapi@cv@@QEBA_NXZ;bool cv::gapi::fluid::View::ready(void)
?real@FileNode@cv@@QEBANXZ;double cv::FileNode::real(void)
?recip16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::recip16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?recip16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::recip16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?recip32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::recip32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?recip32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::recip32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?recip64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::recip64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?recip8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::recip8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?recip8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::recip8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?recognize@TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@4@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::dnn::dnn4_v20211004::TextRecognitionModel::recognize(class cv::_InputArray const &)
?recognize@TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEBAXAEBV_InputArray@4@0AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z;void cv::dnn::dnn4_v20211004::TextRecognitionModel::recognize(class cv::_InputArray const &,class cv::_InputArray const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &)
?recompile@GComputation@cv@@IEAAX$$QEAV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@4@@Z;void cv::GComputation::recompile(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > &&,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?reconstruct@LDA@cv@@QEAA?AVMat@2@AEBV_InputArray@2@@Z;class cv::Mat cv::LDA::reconstruct(class cv::_InputArray const &)
?reconstruct@s11n@gapi@cv@@YAXAEBUGSerialized@123@AEAVGraph@ade@@@Z;void cv::gapi::s11n::reconstruct(struct cv::gapi::s11n::GSerialized const &,class ade::Graph &)
?record@Event@cuda@cv@@QEAAXAEAVStream@23@@Z;void cv::cuda::Event::record(class cv::cuda::Stream &)
?recoverPose@cv@@YAHAEBV_InputArray@1@00000AEBV_OutputArray@1@11HNNAEBV_InputOutputArray@1@@Z;int cv::recoverPose(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,double,double,class cv::_InputOutputArray const &)
?recoverPose@cv@@YAHAEBV_InputArray@1@000AEBV_OutputArray@1@1AEBV_InputOutputArray@1@@Z;int cv::recoverPose(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_InputOutputArray const &)
?recoverPose@cv@@YAHAEBV_InputArray@1@000AEBV_OutputArray@1@1NAEBV_InputOutputArray@1@1@Z;int cv::recoverPose(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double,class cv::_InputOutputArray const &,class cv::_OutputArray const &)
?recoverPose@cv@@YAHAEBV_InputArray@1@00AEBV_OutputArray@1@1NV?$Point_@N@1@AEBV_InputOutputArray@1@@Z;int cv::recoverPose(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double,class cv::Point_<double>,class cv::_InputOutputArray const &)
?rectangle@cv@@YAXAEBV_InputOutputArray@1@V?$Point_@H@1@1AEBV?$Scalar_@N@1@HHH@Z;void cv::rectangle(class cv::_InputOutputArray const &,class cv::Point_<int>,class cv::Point_<int>,class cv::Scalar_<double> const &,int,int,int)
?rectangle@cv@@YAXAEBV_InputOutputArray@1@V?$Rect_@H@1@AEBV?$Scalar_@N@1@HHH@Z;void cv::rectangle(class cv::_InputOutputArray const &,class cv::Rect_<int>,class cv::Scalar_<double> const &,int,int,int)
?rectify3Collinear@cv@@YAMAEBV_InputArray@1@0000000V?$Size_@H@1@0000AEBV_OutputArray@1@222222N1PEAV?$Rect_@H@1@3H@Z;float cv::rectify3Collinear(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,double,class cv::Size_<int>,class cv::Rect_<int> *,class cv::Rect_<int> *,int)
?redirectError@cv@@YAP6AHHPEBD00HPEAX@ZP6AHH000H1@Z1PEAPEAX@Z;int (*cv::redirectError(int (*)(int,char const *,char const *,char const *,int,void *),void *,void * *))(int,char const *,char const *,char const *,int,void *)
?redirectReaders@GModel@gimpl@cv@@YA?AV?$vector@V?$Handle@VEdge@ade@@@ade@@V?$allocator@V?$Handle@VEdge@ade@@@ade@@@std@@@std@@AEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@ade@@V?$Handle@VNode@ade@@@7@1@Z;class std::vector<class ade::Handle<class ade::Edge>,class std::allocator<class ade::Handle<class ade::Edge> > > cv::gimpl::GModel::redirectReaders(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,class ade::Handle<class ade::Node>,class ade::Handle<class ade::Node>)
?redirectWriter@GModel@gimpl@cv@@YA?AV?$Handle@VEdge@ade@@@ade@@AEAV?$TypedGraph@UNodeType@gimpl@cv@@UInput@23@UOutput@23@UOp@23@UData@23@UConstValue@23@UIsland@23@UProtocol@23@UOriginalInputMeta@23@UOutputMeta@23@UJournal@23@UTopologicalSortData@passes@ade@@VDataObjectCounter@23@UIslandModel@23@UActiveBackends@23@UCustomMetaFunction@23@UStreaming@23@UDeserialized@23@UHasIntrinsics@23@UDesyncPath@23@UDesyncEdge@23@UDesynchronized@23@UCompileArgs@23@@5@V?$Handle@VNode@ade@@@5@1@Z;class ade::Handle<class ade::Edge> cv::gimpl::GModel::redirectWriter(class ade::TypedGraph<struct cv::gimpl::NodeType,struct cv::gimpl::Input,struct cv::gimpl::Output,struct cv::gimpl::Op,struct cv::gimpl::Data,struct cv::gimpl::ConstValue,struct cv::gimpl::Island,struct cv::gimpl::Protocol,struct cv::gimpl::OriginalInputMeta,struct cv::gimpl::OutputMeta,struct cv::gimpl::Journal,struct ade::passes::TopologicalSortData,class cv::gimpl::DataObjectCounter,struct cv::gimpl::IslandModel,struct cv::gimpl::ActiveBackends,struct cv::gimpl::CustomMetaFunction,struct cv::gimpl::Streaming,struct cv::gimpl::Deserialized,struct cv::gimpl::HasIntrinsics,struct cv::gimpl::DesyncPath,struct cv::gimpl::DesyncEdge,struct cv::gimpl::Desynchronized,struct cv::gimpl::CompileArgs> &,class ade::Handle<class ade::Node>,class ade::Handle<class ade::Node>)
?reduce@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HHH@Z;void cv::reduce(class cv::_InputArray const &,class cv::_OutputArray const &,int,int,int)
?refinementMask@BundleAdjusterBase@detail@cv@@QEBA?BVMat@3@XZ;class cv::Mat const cv::detail::BundleAdjusterBase::refinementMask(void)
?registerLayer@LayerFactory@dnn4_v20211004@dnn@cv@@SAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@AEAVLayerParams@234@@Z@Z;void cv::dnn::dnn4_v20211004::LayerFactory::registerLayer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> (*)(class cv::dnn::dnn4_v20211004::LayerParams &))
?registerLogTag@logging@utils@cv@@YAXPEAULogTag@123@@Z;void cv::utils::logging::registerLogTag(struct cv::utils::logging::LogTag *)
?registerPageLocked@cuda@cv@@YAXAEAVMat@2@@Z;void cv::cuda::registerPageLocked(class cv::Mat &)
?registrationResol@Stitcher@cv@@QEBANXZ;double cv::Stitcher::registrationResol(void)
?regsPerBlock@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::regsPerBlock(void)
?release@Arrays@ogl@cv@@QEAAXXZ;void cv::ogl::Arrays::release(void)
?release@AsyncArray@cv@@QEAAXXZ;void cv::AsyncArray::release(void)
?release@AsyncPromise@cv@@QEAAXXZ;void cv::AsyncPromise::release(void)
?release@Buffer@ogl@cv@@QEAAXXZ;void cv::ogl::Buffer::release(void)
?release@BufferArea@utils@cv@@QEAAXXZ;void cv::utils::BufferArea::release(void)
?release@Context@ocl@cv@@QEAAXXZ;void cv::ocl::Context::release(void)
?release@DictValue@dnn4_v20211004@dnn@cv@@AEAAXXZ;void cv::dnn::dnn4_v20211004::DictValue::release(void)
?release@FileStorage@cv@@UEAAXXZ;void cv::FileStorage::release(void)
?release@GpuMat@cuda@cv@@QEAAXXZ;void cv::cuda::GpuMat::release(void)
?release@GpuMatND@cuda@cv@@QEAAXXZ;void cv::cuda::GpuMatND::release(void)
?release@HostMem@cuda@cv@@QEAAXXZ;void cv::cuda::HostMem::release(void)
?release@Index@flann@cv@@UEAAXXZ;void cv::flann::Index::release(void)
?release@Mat@cv@@QEAAXXZ;void cv::Mat::release(void)
?release@OpenCLExecutionContext@ocl@cv@@QEAAXXZ;void cv::ocl::OpenCLExecutionContext::release(void)
?release@SparseMat@cv@@QEAAXXZ;void cv::SparseMat::release(void)
?release@TLSDataContainer@cv@@IEAAXXZ;void cv::TLSDataContainer::release(void)
?release@Texture2D@ogl@cv@@QEAAXXZ;void cv::ogl::Texture2D::release(void)
?release@UMat@cv@@QEAAXXZ;void cv::UMat::release(void)
?release@VideoCapture@cv@@UEAAXXZ;void cv::VideoCapture::release(void)
?release@VideoWriter@cv@@UEAAXXZ;void cv::VideoWriter::release(void)
?release@_OutputArray@cv@@QEBAXXZ;void cv::_OutputArray::release(void)
?releaseAndGetString@FileStorage@cv@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::FileStorage::releaseAndGetString(void)
?releaseHDDLPlugin@dnn4_v20211004@dnn@cv@@YAXXZ;void cv::dnn::dnn4_v20211004::releaseHDDLPlugin(void)
?releaseTlsStorageThread@cv@@YAXXZ;void cv::releaseTlsStorageThread(void)
?remaining@FileNodeIterator@cv@@QEBA_KXZ;unsigned __int64 cv::FileNodeIterator::remaining(void)
?remap@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@00HHAEBV?$Scalar_@N@1@@Z;void cv::remap(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Scalar_<double> const &)
?remap@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVMat@2@1HHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::remap(class cv::GMat const &,class cv::Mat const &,class cv::Mat const &,int,int,class cv::Scalar_<double> const &)
?remove@GKernelPackage@gapi@cv@@QEAAXAEBVGBackend@23@@Z;void cv::gapi::GKernelPackage::remove(class cv::gapi::GBackend const &)
?removeAPI@GKernelPackage@gapi@cv@@IEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::gapi::GKernelPackage::removeAPI(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?removeDuplicated@KeyPointsFilter@cv@@SAXAEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@@Z;void cv::KeyPointsFilter::removeDuplicated(class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &)
?removeDuplicatedSorted@KeyPointsFilter@cv@@SAXAEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@@Z;void cv::KeyPointsFilter::removeDuplicatedSorted(class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &)
?removeNode@SparseMat@cv@@QEAAX_K00@Z;void cv::SparseMat::removeNode(unsigned __int64,unsigned __int64,unsigned __int64)
?remove_all@fs@utils@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::utils::fs::remove_all(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?render3ch@draw@wip@gapi@cv@@YA?AVGMat@4@AEBV54@AEBV?$GArray@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@4@@Z;class cv::GMat cv::gapi::wip::draw::render3ch(class cv::GMat const &,class cv::GArray<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > const &)
?render@draw@wip@gapi@cv@@YAXAEAVMat@4@0AEBV?$vector@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@V?$allocator@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@std@@@std@@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@7@@Z;void cv::gapi::wip::draw::render(class cv::Mat &,class cv::Mat &,class std::vector<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly>,class std::allocator<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > > const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?render@draw@wip@gapi@cv@@YAXAEAVMat@4@AEBV?$vector@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@V?$allocator@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@std@@@std@@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@7@@Z;void cv::gapi::wip::draw::render(class cv::Mat &,class std::vector<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly>,class std::allocator<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > > const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?render@draw@wip@gapi@cv@@YAXAEAVMediaFrame@4@AEBV?$vector@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@V?$allocator@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@std@@@std@@$$QEAV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@7@@Z;void cv::gapi::wip::draw::render(class cv::MediaFrame &,class std::vector<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly>,class std::allocator<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > > const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > &&)
?render@ogl@cv@@YAXAEBVArrays@12@AEBV_InputArray@2@HV?$Scalar_@N@2@@Z;void cv::ogl::render(class cv::ogl::Arrays const &,class cv::_InputArray const &,int,class cv::Scalar_<double>)
?render@ogl@cv@@YAXAEBVArrays@12@HV?$Scalar_@N@2@@Z;void cv::ogl::render(class cv::ogl::Arrays const &,int,class cv::Scalar_<double>)
?render@ogl@cv@@YAXAEBVTexture2D@12@V?$Rect_@N@2@1@Z;void cv::ogl::render(class cv::ogl::Texture2D const &,class cv::Rect_<double>,class cv::Rect_<double>)
?renderFrame@draw@wip@gapi@cv@@YA?AVGFrame@4@AEBV54@AEBV?$GArray@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@4@@Z;class cv::GFrame cv::gapi::wip::draw::renderFrame(class cv::GFrame const &,class cv::GArray<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > const &)
?renderNV12@draw@wip@gapi@cv@@YA?AV?$tuple@VGMat@cv@@V12@@std@@AEBVGMat@4@0AEBV?$GArray@V?$variant@UText@draw@wip@gapi@cv@@UFText@2345@URect@2345@UCircle@2345@ULine@2345@UMosaic@2345@UImage@2345@UPoly@2345@@util@cv@@@4@@Z;class std::tuple<class cv::GMat,class cv::GMat> cv::gapi::wip::draw::renderNV12(class cv::GMat const &,class cv::GMat const &,class cv::GArray<class cv::util::variant<struct cv::gapi::wip::draw::Text,struct cv::gapi::wip::draw::FText,struct cv::gapi::wip::draw::Rect,struct cv::gapi::wip::draw::Circle,struct cv::gapi::wip::draw::Line,struct cv::gapi::wip::draw::Mosaic,struct cv::gapi::wip::draw::Image,struct cv::gapi::wip::draw::Poly> > const &)
?repeat@cv@@YA?AVMat@1@AEBV21@HH@Z;class cv::Mat cv::repeat(class cv::Mat const &,int,int)
?repeat@cv@@YAXAEBV_InputArray@1@HHAEBV_OutputArray@1@@Z;void cv::repeat(class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?reprojectImageTo3D@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0_NH@Z;void cv::reprojectImageTo3D(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,bool,int)
?reserve@Mat@cv@@QEAAX_K@Z;void cv::Mat::reserve(unsigned __int64)
?reserveBuffer@Mat@cv@@QEAAX_K@Z;void cv::Mat::reserveBuffer(unsigned __int64)
?reset@Priv@Buffer@fluid@gapi@cv@@QEAAXXZ;void cv::gapi::fluid::Buffer::Priv::reset(void)
?reset@Priv@View@fluid@gapi@cv@@QEAAXH@Z;void cv::gapi::fluid::View::Priv::reset(int)
?reset@TickMeter@cv@@QEAAXXZ;void cv::TickMeter::reset(void)
?resetColorArray@Arrays@ogl@cv@@QEAAXXZ;void cv::ogl::Arrays::resetColorArray(void)
?resetDevice@cuda@cv@@YAXXZ;void cv::cuda::resetDevice(void)
?resetMyriadDevice@dnn4_v20211004@dnn@cv@@YAXXZ;void cv::dnn::dnn4_v20211004::resetMyriadDevice(void)
?resetNormalArray@Arrays@ogl@cv@@QEAAXXZ;void cv::ogl::Arrays::resetNormalArray(void)
?resetTexCoordArray@Arrays@ogl@cv@@QEAAXXZ;void cv::ogl::Arrays::resetTexCoordArray(void)
?resetTrace@instr@cv@@YAXXZ;void cv::instr::resetTrace(void)
?resetTracking@DetectionBasedTracker@cv@@UEAAXXZ;void cv::DetectionBasedTracker::resetTracking(void)
?resetVertexArray@Arrays@ogl@cv@@QEAAXXZ;void cv::ogl::Arrays::resetVertexArray(void)
?reshape@GCompiled@cv@@QEAAXAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@4@@Z;void cv::GCompiled::reshape(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > const &)
?reshape@GpuMat@cuda@cv@@QEBA?AV123@HH@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::reshape(int,int)
?reshape@HostMem@cuda@cv@@QEBA?AV123@HH@Z;class cv::cuda::HostMem cv::cuda::HostMem::reshape(int,int)
?reshape@Mat@cv@@QEBA?AV12@HAEBV?$vector@HV?$allocator@H@std@@@std@@@Z;class cv::Mat cv::Mat::reshape(int,class std::vector<int,class std::allocator<int> > const &)
?reshape@Mat@cv@@QEBA?AV12@HH@Z;class cv::Mat cv::Mat::reshape(int,int)
?reshape@Mat@cv@@QEBA?AV12@HHPEBH@Z;class cv::Mat cv::Mat::reshape(int,int,int const *)
?reshape@Priv@GCompiled@cv@@QEAAXAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@5@@Z;void cv::GCompiled::Priv::reshape(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > const &)
?reshape@UMat@cv@@QEBA?AV12@HH@Z;class cv::UMat cv::UMat::reshape(int,int)
?reshape@UMat@cv@@QEBA?AV12@HHPEBH@Z;class cv::UMat cv::UMat::reshape(int,int,int const *)
?resize@Mat@cv@@QEAAX_K@Z;void cv::Mat::resize(unsigned __int64)
?resize@Mat@cv@@QEAAX_KAEBV?$Scalar_@N@2@@Z;void cv::Mat::resize(unsigned __int64,class cv::Scalar_<double> const &)
?resize@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@V?$Size_@H@1@NNH@Z;void cv::resize(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Size_<int>,double,double,int)
?resize@gapi@cv@@YA?AVGMat@2@AEBV32@AEBV?$Size_@H@2@NNH@Z;class cv::GMat cv::gapi::resize(class cv::GMat const &,class cv::Size_<int> const &,double,double,int)
?resize@hal@cv@@YAXHPEBE_KHHPEAE1HHNNH@Z;void cv::hal::resize(int,unsigned char const *,unsigned __int64,int,int,unsigned char *,unsigned __int64,int,int,double,double,int)
?resizeHashTab@SparseMat@cv@@QEAAX_K@Z;void cv::SparseMat::resizeHashTab(unsigned __int64)
?resizeP@gapi@cv@@YA?AVGMatP@2@AEBV32@AEBV?$Size_@H@2@H@Z;class cv::GMatP cv::gapi::resizeP(class cv::GMatP const &,class cv::Size_<int> const &,int)
?resizeWindow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$Size_@H@1@@Z;void cv::resizeWindow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Size_<int> const &)
?resizeWindow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z;void cv::resizeWindow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,int)
?resolveConflicts@DpSeamFinder@detail@cv@@AEAAXAEBVMat@3@0V?$Point_@H@3@1AEAV43@2@Z;void cv::detail::DpSeamFinder::resolveConflicts(class cv::Mat const &,class cv::Mat const &,class cv::Point_<int>,class cv::Point_<int>,class cv::Mat &,class cv::Mat &)
?restoreImageFromLaplacePyr@detail@cv@@YAXAEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;void cv::detail::restoreImageFromLaplacePyr(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?restoreImageFromLaplacePyrGpu@detail@cv@@YAXAEAV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@std@@@Z;void cv::detail::restoreImageFromLaplacePyrGpu(class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > &)
?resultMask@Stitcher@cv@@QEBA?AVUMat@2@XZ;class cv::UMat cv::Stitcher::resultMask(void)
?resultRoi@detail@cv@@YA?AV?$Rect_@H@2@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@V?$Size_@H@cv@@V?$allocator@V?$Size_@H@cv@@@std@@@5@@Z;class cv::Rect_<int> cv::detail::resultRoi(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::Size_<int>,class std::allocator<class cv::Size_<int> > > const &)
?resultRoi@detail@cv@@YA?AV?$Rect_@H@2@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@@Z;class cv::Rect_<int> cv::detail::resultRoi(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &)
?resultRoiIntersection@detail@cv@@YA?AV?$Rect_@H@2@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@V?$Size_@H@cv@@V?$allocator@V?$Size_@H@cv@@@std@@@5@@Z;class cv::Rect_<int> cv::detail::resultRoiIntersection(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::Size_<int>,class std::allocator<class cv::Size_<int> > > const &)
?resultTl@detail@cv@@YA?AV?$Point_@H@2@AEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@@Z;class cv::Point_<int> cv::detail::resultTl(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &)
?retainBest@KeyPointsFilter@cv@@SAXAEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@H@Z;void cv::KeyPointsFilter::retainBest(class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,int)
?retrieve@VideoCapture@cv@@UEAA_NAEBV_OutputArray@2@H@Z;bool cv::VideoCapture::retrieve(class cv::_OutputArray const &,int)
?roi@MatOp@cv@@UEBAXAEBVMatExpr@2@AEBVRange@2@1AEAV32@@Z;void cv::MatOp::roi(class cv::MatExpr const &,class cv::Range const &,class cv::Range const &,class cv::MatExpr &)
?root@FileStorage@cv@@QEBA?AVFileNode@2@H@Z;class cv::FileNode cv::FileStorage::root(int)
?rotate@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::rotate(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?rotateEdge@Subdiv2D@cv@@QEBAHHH@Z;int cv::Subdiv2D::rotateEdge(int,int)
?rotatedRectangleIntersection@cv@@YAHAEBVRotatedRect@1@0AEBV_OutputArray@1@@Z;int cv::rotatedRectangleIntersection(class cv::RotatedRect const &,class cv::RotatedRect const &,class cv::_OutputArray const &)
?row@GpuMat@cuda@cv@@QEBA?AV123@H@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::row(int)
?row@Mat@cv@@QEBA?AV12@H@Z;class cv::Mat cv::Mat::row(int)
?row@MatExpr@cv@@QEBA?AV12@H@Z;class cv::MatExpr cv::MatExpr::row(int)
?row@UMat@cv@@QEBA?AV12@H@Z;class cv::UMat cv::UMat::row(int)
?rowRange@GpuMat@cuda@cv@@QEBA?AV123@HH@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::rowRange(int,int)
?rowRange@GpuMat@cuda@cv@@QEBA?AV123@VRange@3@@Z;class cv::cuda::GpuMat cv::cuda::GpuMat::rowRange(class cv::Range)
?rowRange@Mat@cv@@QEBA?AV12@AEBVRange@2@@Z;class cv::Mat cv::Mat::rowRange(class cv::Range const &)
?rowRange@Mat@cv@@QEBA?AV12@HH@Z;class cv::Mat cv::Mat::rowRange(int,int)
?rowRange@UMat@cv@@QEBA?AV12@AEBVRange@2@@Z;class cv::UMat cv::UMat::rowRange(class cv::Range const &)
?rowRange@UMat@cv@@QEBA?AV12@HH@Z;class cv::UMat cv::UMat::rowRange(int,int)
?rows@Buffer@ogl@cv@@QEBAHXZ;int cv::ogl::Buffer::rows(void)
?rows@Texture2D@ogl@cv@@QEBAHXZ;int cv::ogl::Texture2D::rows(void)
?rows@View@RMat@cv@@QEBAHXZ;int cv::RMat::View::rows(void)
?rows@_InputArray@cv@@QEBAHH@Z;int cv::_InputArray::rows(int)
?run@DetectionBasedTracker@cv@@UEAA_NXZ;bool cv::DetectionBasedTracker::run(void)
?run@GIslandExecutable@gimpl@cv@@UEAAXAEAUIInput@123@AEAUIOutput@123@@Z;void cv::gimpl::GIslandExecutable::run(struct cv::gimpl::GIslandExecutable::IInput &,struct cv::gimpl::GIslandExecutable::IOutput &)
?run@Kernel@ocl@cv@@QEAA_NHQEA_K0_NAEBVQueue@23@@Z;bool cv::ocl::Kernel::run(int,unsigned __int64 * const,unsigned __int64 * const,bool,class cv::ocl::Queue const &)
?run@Layer@dnn4_v20211004@dnn@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEAV56@1@Z;void cv::dnn::dnn4_v20211004::Layer::run(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?run@PairwiseSeamFinder@detail@cv@@IEAAXXZ;void cv::detail::PairwiseSeamFinder::run(void)
?run@Priv@GCompiled@cv@@QEAAX$$QEAUGRuntimeArgs@gimpl@3@@Z;void cv::GCompiled::Priv::run(struct cv::gimpl::GRuntimeArgs &&)
?runByImageBorder@KeyPointsFilter@cv@@SAXAEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@V?$Size_@H@2@H@Z;void cv::KeyPointsFilter::runByImageBorder(class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::Size_<int>,int)
?runByKeypointSize@KeyPointsFilter@cv@@SAXAEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@MM@Z;void cv::KeyPointsFilter::runByKeypointSize(class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,float,float)
?runByPixelsMask@KeyPointsFilter@cv@@SAXAEAV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@std@@AEBVMat@2@@Z;void cv::KeyPointsFilter::runByPixelsMask(class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > &,class cv::Mat const &)
?runMetaPasses@GCompiler@gimpl@cv@@SAXAEAVGraph@ade@@AEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@@Z;void cv::gimpl::GCompiler::runMetaPasses(class ade::Graph &,class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &)
?runPasses@GCompiler@gimpl@cv@@QEAAXAEAVGraph@ade@@@Z;void cv::gimpl::GCompiler::runPasses(class ade::Graph &)
?runProfiling@Kernel@ocl@cv@@QEAA_JHQEA_K0AEBVQueue@23@@Z;__int64 cv::ocl::Kernel::runProfiling(int,unsigned __int64 * const,unsigned __int64 * const,class cv::ocl::Queue const &)
?runStateEstimator@TrackerModel@tracking@detail@cv@@QEAA_NXZ;bool cv::detail::tracking::TrackerModel::runStateEstimator(void)
?runTask@Kernel@ocl@cv@@QEAA_N_NAEBVQueue@23@@Z;bool cv::ocl::Kernel::runTask(bool,class cv::ocl::Queue const &)
?run_@Kernel@ocl@cv@@QEAA_NHQEA_K0_NAEBVQueue@23@@Z;bool cv::ocl::Kernel::run_(int,unsigned __int64 * const,unsigned __int64 * const,bool,class cv::ocl::Queue const &)
?run_args_deserialize@s11n@gapi@cv@@YA?AV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@AEAUIIStream@123@@Z;class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > cv::gapi::s11n::run_args_deserialize(struct cv::gapi::s11n::IIStream &)
?running@GStreamingCompiled@cv@@QEBA_NXZ;bool cv::GStreamingCompiled::running(void)
?running@Priv@GStreamingCompiled@cv@@QEBA_NXZ;bool cv::GStreamingCompiled::Priv::running(void)
?sameSize@_InputArray@cv@@QEBA_NAEBV12@@Z;bool cv::_InputArray::sameSize(class cv::_InputArray const &)
?sampleImage@TrackerSamplerCSC@tracking@detail@cv@@AEAA?AV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@AEBVMat@4@HHHHMMH@Z;class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > cv::detail::tracking::TrackerSamplerCSC::sampleImage(class cv::Mat const &,int,int,int,int,float,float,int)
?sampling@TrackerSampler@tracking@detail@cv@@QEAAXAEBVMat@4@V?$Rect_@H@4@@Z;void cv::detail::tracking::TrackerSampler::sampling(class cv::Mat const &,class cv::Rect_<int>)
?sampling@TrackerSamplerCSC@tracking@detail@cv@@UEAA_NAEBVMat@4@AEBV?$Rect_@H@4@AEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;bool cv::detail::tracking::TrackerSamplerCSC::sampling(class cv::Mat const &,class cv::Rect_<int> const &,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?sampsonDistance@cv@@YANAEBV_InputArray@1@00@Z;double cv::sampsonDistance(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?save@Algorithm@cv@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::Algorithm::save(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?save@HOGDescriptor@cv@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void cv::HOGDescriptor::save(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?save@Index@flann@cv@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::flann::Index::save(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?save@LDA@cv@@QEBAXAEAVFileStorage@2@@Z;void cv::LDA::save(class cv::FileStorage &)
?save@LDA@cv@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::LDA::save(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?saveWindowParameters@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::saveWindowParameters(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?scalarToRawData@cv@@YAXAEBV?$Scalar_@N@1@PEAXHH@Z;void cv::scalarToRawData(class cv::Scalar_<double> const &,void *,int,int)
?scaleAdd@cv@@YAXAEBV_InputArray@1@N0AEBV_OutputArray@1@@Z;void cv::scaleAdd(class cv::_InputArray const &,double,class cv::_InputArray const &,class cv::_OutputArray const &)
?seamEstimationResol@Stitcher@cv@@QEBANXZ;double cv::Stitcher::seamEstimationResol(void)
?seamFinder@Stitcher@cv@@QEAA?AU?$Ptr@VSeamFinder@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::SeamFinder> cv::Stitcher::seamFinder(void)
?seamFinder@Stitcher@cv@@QEBA?BU?$Ptr@VSeamFinder@detail@cv@@@2@XZ;struct cv::Ptr<class cv::detail::SeamFinder> const cv::Stitcher::seamFinder(void)
?seamlessClone@cv@@YAXAEBV_InputArray@1@00V?$Point_@H@1@AEBV_OutputArray@1@H@Z;void cv::seamlessClone(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Point_<int>,class cv::_OutputArray const &,int)
?seed@RNG_MT19937@cv@@QEAAXI@Z;void cv::RNG_MT19937::seed(unsigned int)
?seek@MatConstIterator@cv@@QEAAXPEBH_N@Z;void cv::MatConstIterator::seek(int const *,bool)
?seek@MatConstIterator@cv@@QEAAX_J_N@Z;void cv::MatConstIterator::seek(__int64,bool)
?seekEnd@SparseMatConstIterator@cv@@QEAAXXZ;void cv::SparseMatConstIterator::seekEnd(void)
?segment@SegmentationModel@dnn4_v20211004@dnn@cv@@QEAAXAEBV_InputArray@4@AEBV_OutputArray@4@@Z;void cv::dnn::dnn4_v20211004::SegmentationModel::segment(class cv::_InputArray const &,class cv::_OutputArray const &)
?select@gapi@cv@@YA?AVGMat@2@AEBV32@00@Z;class cv::GMat cv::gapi::select(class cv::GMat const &,class cv::GMat const &,class cv::GMat const &)
?selectROI@cv@@YA?AV?$Rect_@H@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@1@_N2@Z;class cv::Rect_<int> cv::selectROI(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &,bool,bool)
?selectROI@cv@@YA?AV?$Rect_@H@1@AEBV_InputArray@1@_N1@Z;class cv::Rect_<int> cv::selectROI(class cv::_InputArray const &,bool,bool)
?selectROIs@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@1@AEAV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@3@_N3@Z;void cv::selectROIs(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &,class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > &,bool,bool)
?selectRandomSubset@detail@cv@@YAXHHAEAV?$vector@HV?$allocator@H@std@@@std@@@Z;void cv::detail::selectRandomSubset(int,int,class std::vector<int,class std::allocator<int> > &)
?sepFilter2D@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H00V?$Point_@H@1@NH@Z;void cv::sepFilter2D(class cv::_InputArray const &,class cv::_OutputArray const &,int,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Point_<int>,double,int)
?sepFilter2D@hal@cv@@YAXHHHPEAE_K01HHHHHH0H0HHHNH@Z;void cv::hal::sepFilter2D(int,int,int,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,int,int,unsigned char *,int,unsigned char *,int,int,int,double,int)
?sepFilter@gapi@cv@@YA?AVGMat@2@AEBV32@HAEBVMat@2@1AEBV?$Point_@H@2@AEBV?$Scalar_@N@2@H3@Z;class cv::GMat cv::gapi::sepFilter(class cv::GMat const &,int,class cv::Mat const &,class cv::Mat const &,class cv::Point_<int> const &,class cv::Scalar_<double> const &,int,class cv::Scalar_<double> const &)
?seqInsertSlice@cv@@YAXPEAUCvSeq@@HPEBX@Z;void cv::seqInsertSlice(struct CvSeq *,int,void const *)
?seqPop@cv@@YAXPEAUCvSeq@@PEAX@Z;void cv::seqPop(struct CvSeq *,void *)
?seqPopFront@cv@@YAXPEAUCvSeq@@PEAX@Z;void cv::seqPopFront(struct CvSeq *,void *)
?seqPush@cv@@YAPEACPEAUCvSeq@@PEBX@Z;signed char * cv::seqPush(struct CvSeq *,void const *)
?seqPushFront@cv@@YAPEACPEAUCvSeq@@PEBX@Z;signed char * cv::seqPushFront(struct CvSeq *,void const *)
?seqRemove@cv@@YAXPEAUCvSeq@@H@Z;void cv::seqRemove(struct CvSeq *,int)
?seqRemoveSlice@cv@@YAXPEAUCvSeq@@UCvSlice@@@Z;void cv::seqRemoveSlice(struct CvSeq *,struct CvSlice)
?serialize@GComputation@cv@@QEBAXAEAUIOStream@s11n@gapi@2@@Z;void cv::GComputation::serialize(struct cv::gapi::s11n::IOStream &)
?serialize@IAdapter@MediaFrame@cv@@UEAAXAEAUIOStream@s11n@gapi@3@@Z;void cv::MediaFrame::IAdapter::serialize(struct cv::gapi::s11n::IOStream &)
?serialize@MediaFrame@cv@@QEBAXAEAUIOStream@s11n@gapi@2@@Z;void cv::MediaFrame::serialize(struct cv::gapi::s11n::IOStream &)
?serialize@RMat@cv@@QEBAXAEAUIOStream@s11n@gapi@2@@Z;void cv::RMat::serialize(struct cv::gapi::s11n::IOStream &)
?serialize@gapi@cv@@YA?AV?$vector@DV?$allocator@D@std@@@std@@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@4@@Z;class std::vector<char,class std::allocator<char> > cv::gapi::serialize(class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > const &)
?serialize@gapi@cv@@YA?AV?$vector@DV?$allocator@D@std@@@std@@AEBV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@4@@Z;class std::vector<char,class std::allocator<char> > cv::gapi::serialize(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > const &)
?serialize@gapi@cv@@YA?AV?$vector@DV?$allocator@D@std@@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z;class std::vector<char,class std::allocator<char> > cv::gapi::serialize(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?serialize@gapi@cv@@YA?AV?$vector@DV?$allocator@D@std@@@std@@AEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@4@@Z;class std::vector<char,class std::allocator<char> > cv::gapi::serialize(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &)
?serialize@gapi@cv@@YA?AV?$vector@DV?$allocator@D@std@@@std@@AEBVGComputation@2@@Z;class std::vector<char,class std::allocator<char> > cv::gapi::serialize(class cv::GComputation const &)
?serialize@s11n@gapi@cv@@YAXAEAUIOStream@123@AEBV?$vector@UGCompileArg@cv@@V?$allocator@UGCompileArg@cv@@@std@@@std@@@Z;void cv::gapi::s11n::serialize(struct cv::gapi::s11n::IOStream &,class std::vector<struct cv::GCompileArg,class std::allocator<struct cv::GCompileArg> > const &)
?serialize@s11n@gapi@cv@@YAXAEAUIOStream@123@AEBV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@@Z;void cv::gapi::s11n::serialize(struct cv::gapi::s11n::IOStream &,class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > const &)
?serialize@s11n@gapi@cv@@YAXAEAUIOStream@123@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z;void cv::gapi::s11n::serialize(struct cv::gapi::s11n::IOStream &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?serialize@s11n@gapi@cv@@YAXAEAUIOStream@123@AEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@@Z;void cv::gapi::s11n::serialize(struct cv::gapi::s11n::IOStream &,class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &)
?serialize@s11n@gapi@cv@@YAXAEAUIOStream@123@AEBVGraph@ade@@AEBUProtocol@gimpl@3@AEBV?$vector@V?$Handle@VNode@ade@@@ade@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@std@@@std@@@Z;void cv::gapi::s11n::serialize(struct cv::gapi::s11n::IOStream &,class ade::Graph const &,struct cv::gimpl::Protocol const &,class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > > const &)
?serialize@s11n@gapi@cv@@YAXAEAUIOStream@123@AEBVGraph@ade@@AEBV?$vector@V?$Handle@VNode@ade@@@ade@@V?$allocator@V?$Handle@VNode@ade@@@ade@@@std@@@std@@@Z;void cv::gapi::s11n::serialize(struct cv::gapi::s11n::IOStream &,class ade::Graph const &,class std::vector<class ade::Handle<class ade::Node>,class std::allocator<class ade::Handle<class ade::Node> > > const &)
?set@DescriptorCollection@DescriptorMatcher@cv@@QEAAXAEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::DescriptorMatcher::DescriptorCollection::set(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const &)
?set@Device@ocl@cv@@QEAAXPEAX@Z;void cv::ocl::Device::set(void *)
?set@Kernel@ocl@cv@@QEAAHHAEBVImage2D@23@@Z;int cv::ocl::Kernel::set(int,class cv::ocl::Image2D const &)
?set@Kernel@ocl@cv@@QEAAHHAEBVKernelArg@23@@Z;int cv::ocl::Kernel::set(int,class cv::ocl::KernelArg const &)
?set@Kernel@ocl@cv@@QEAAHHAEBVUMat@3@@Z;int cv::ocl::Kernel::set(int,class cv::UMat const &)
?set@Kernel@ocl@cv@@QEAAHHPEBX_K@Z;int cv::ocl::Kernel::set(int,void const *,unsigned __int64)
?set@VideoCapture@cv@@UEAA_NHN@Z;bool cv::VideoCapture::set(int,double)
?set@VideoWriter@cv@@UEAA_NHN@Z;bool cv::VideoWriter::set(int,double)
?setActivation@Layer@dnn4_v20211004@dnn@cv@@UEAA_NAEBU?$Ptr@VActivationLayer@dnn4_v20211004@dnn@cv@@@4@@Z;bool cv::dnn::dnn4_v20211004::Layer::setActivation(struct cv::Ptr<class cv::dnn::dnn4_v20211004::ActivationLayer> const &)
?setAlgorithm@IndexParams@flann@cv@@QEAAXH@Z;void cv::flann::IndexParams::setAlgorithm(int)
?setArgs@GCall@cv@@QEAAX$$QEAV?$vector@VGArg@cv@@V?$allocator@VGArg@cv@@@std@@@std@@@Z;void cv::GCall::setArgs(class std::vector<class cv::GArg,class std::allocator<class cv::GArg> > &&)
?setAutoRelease@Arrays@ogl@cv@@QEAAX_N@Z;void cv::ogl::Arrays::setAutoRelease(bool)
?setAutoRelease@Buffer@ogl@cv@@QEAAX_N@Z;void cv::ogl::Buffer::setAutoRelease(bool)
?setAutoRelease@Texture2D@ogl@cv@@QEAAX_N@Z;void cv::ogl::Texture2D::setAutoRelease(bool)
?setBinaryThreshold@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@M@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_DB & cv::dnn::dnn4_v20211004::TextDetectionModel_DB::setBinaryThreshold(float)
?setBlender@Stitcher@cv@@QEAAXU?$Ptr@VBlender@detail@cv@@@2@@Z;void cv::Stitcher::setBlender(struct cv::Ptr<class cv::detail::Blender>)
?setBlockSize@BlocksCompensator@detail@cv@@QEAAXHH@Z;void cv::detail::BlocksCompensator::setBlockSize(int,int)
?setBlockSize@BlocksCompensator@detail@cv@@QEAAXV?$Size_@H@3@@Z;void cv::detail::BlocksCompensator::setBlockSize(class cv::Size_<int>)
?setBool@IndexParams@flann@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z;void cv::flann::IndexParams::setBool(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)
?setBreakOnError@cv@@YA_N_N@Z;bool cv::setBreakOnError(bool)
?setBufferPoolConfig@cuda@cv@@YAXH_KH@Z;void cv::cuda::setBufferPoolConfig(int,unsigned __int64,int)
?setBufferPoolUsage@cuda@cv@@YAX_N@Z;void cv::cuda::setBufferPoolUsage(bool)
?setBundleAdjuster@Stitcher@cv@@QEAAXU?$Ptr@VBundleAdjusterBase@detail@cv@@@2@@Z;void cv::Stitcher::setBundleAdjuster(struct cv::Ptr<class cv::detail::BundleAdjusterBase>)
?setCameraParams@ProjectorBase@detail@cv@@QEAAXAEBV_InputArray@3@00@Z;void cv::detail::ProjectorBase::setCameraParams(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?setClustersNumber@EMImpl@ml@cv@@UEAAXH@Z;void cv::ml::EMImpl::setClustersNumber(int)
?setColorArray@Arrays@ogl@cv@@QEAAXAEBV_InputArray@3@@Z;void cv::ogl::Arrays::setColorArray(class cv::_InputArray const &)
?setCompositingResol@Stitcher@cv@@QEAAXN@Z;void cv::Stitcher::setCompositingResol(double)
?setConfThresh@BundleAdjusterBase@detail@cv@@QEAAXN@Z;void cv::detail::BundleAdjusterBase::setConfThresh(double)
?setConfidenceThreshold@TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@M@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST & cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::setConfidenceThreshold(float)
?setConstructFcn@GArrayU@detail@cv@@IEAAX$$QEAV?$function@$$A6AXAEAVVectorRef@detail@cv@@@Z@std@@@Z;void cv::detail::GArrayU::setConstructFcn(class std::function<void > &&)
?setConstructFcn@GOpaqueU@detail@cv@@IEAAX$$QEAV?$function@$$A6AXAEAVOpaqueRef@detail@cv@@@Z@std@@@Z;void cv::detail::GOpaqueU::setConstructFcn(class std::function<void > &&)
?setCostFunction@DpSeamFinder@detail@cv@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::detail::DpSeamFinder::setCostFunction(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)
?setCostFunction@DpSeamFinder@detail@cv@@QEAAXW4CostFunction@123@@Z;void cv::detail::DpSeamFinder::setCostFunction(enum cv::detail::DpSeamFinder::CostFunction)
?setCovarianceMatrixType@EMImpl@ml@cv@@UEAAXH@Z;void cv::ml::EMImpl::setCovarianceMatrixType(int)
?setCurrentConfidenceMap@TrackerStateEstimatorMILBoosting@tracking@detail@cv@@QEAAXAEAV?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@@Z;void cv::detail::tracking::TrackerStateEstimatorMILBoosting::setCurrentConfidenceMap(class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > &)
?setDecodeOptsCTCPrefixBeamSearch@TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@HH@Z;class cv::dnn::dnn4_v20211004::TextRecognitionModel & cv::dnn::dnn4_v20211004::TextRecognitionModel::setDecodeOptsCTCPrefixBeamSearch(int,int)
?setDecodeType@TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cv::dnn::dnn4_v20211004::TextRecognitionModel & cv::dnn::dnn4_v20211004::TextRecognitionModel::setDecodeType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?setDefaultAllocator@GpuMat@cuda@cv@@SAXPEAVAllocator@123@@Z;void cv::cuda::GpuMat::setDefaultAllocator(class cv::cuda::GpuMat::Allocator *)
?setDefaultAllocator@Mat@cv@@SAXPEAVMatAllocator@2@@Z;void cv::Mat::setDefaultAllocator(class cv::MatAllocator *)
?setDevice@cuda@cv@@YAXH@Z;void cv::cuda::setDevice(int)
?setDouble@IndexParams@flann@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z;void cv::flann::IndexParams::setDouble(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double)
?setEdgeFeatureCannyParameters@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@NNH_N@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setEdgeFeatureCannyParameters(double,double,int,bool)
?setEdgeFeatureZeroCrossingParameters@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@M@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setEdgeFeatureZeroCrossingParameters(float)
?setEdgePoints@Subdiv2D@cv@@IEAAXHHH@Z;void cv::Subdiv2D::setEdgePoints(int,int,int)
?setEpsX@QRCodeDetector@cv@@QEAAXN@Z;void cv::QRCodeDetector::setEpsX(double)
?setEpsY@QRCodeDetector@cv@@QEAAXN@Z;void cv::QRCodeDetector::setEpsY(double)
?setEstimator@Stitcher@cv@@QEAAXU?$Ptr@VEstimator@detail@cv@@@2@@Z;void cv::Stitcher::setEstimator(struct cv::Ptr<class cv::detail::Estimator>)
?setException@AsyncPromise@cv@@QEAAXAEBVException@2@@Z;void cv::AsyncPromise::setException(class cv::Exception const &)
?setException@AsyncPromise@cv@@QEAAXVexception_ptr@std@@@Z;void cv::AsyncPromise::setException(class std::exception_ptr)
?setExceptionMode@VideoCapture@cv@@QEAAX_N@Z;void cv::VideoCapture::setExceptionMode(bool)
?setExp@softdouble@cv@@QEBA?AU12@H@Z;struct cv::softdouble cv::softdouble::setExp(int)
?setExp@softfloat@cv@@QEBA?AU12@H@Z;struct cv::softfloat cv::softfloat::setExp(int)
?setExposureCompensator@Stitcher@cv@@QEAAXU?$Ptr@VExposureCompensator@detail@cv@@@2@@Z;void cv::Stitcher::setExposureCompensator(struct cv::Ptr<class cv::detail::ExposureCompensator>)
?setFeaturesFinder@Stitcher@cv@@QEAAXU?$Ptr@VFeature2D@cv@@@2@@Z;void cv::Stitcher::setFeaturesFinder(struct cv::Ptr<class cv::Feature2D>)
?setFeaturesMatcher@Stitcher@cv@@QEAAXU?$Ptr@VFeaturesMatcher@detail@cv@@@2@@Z;void cv::Stitcher::setFeaturesMatcher(struct cv::Ptr<class cv::detail::FeaturesMatcher>)
?setFields@GpuMatND@cuda@cv@@AEAAXV?$vector@HV?$allocator@H@std@@@std@@HV?$vector@_KV?$allocator@_K@std@@@5@@Z;void cv::cuda::GpuMatND::setFields(class std::vector<int,class std::allocator<int> >,int,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >)
?setFlags@instr@cv@@YAXW4FLAGS@12@@Z;void cv::instr::setFlags(enum cv::instr::FLAGS)
?setFloat@IndexParams@flann@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@Z;void cv::flann::IndexParams::setFloat(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,float)
?setFrac@softdouble@cv@@QEBA?AU12@AEBU12@@Z;struct cv::softdouble cv::softdouble::setFrac(struct cv::softdouble const &)
?setFrac@softfloat@cv@@QEBA?AU12@AEBU12@@Z;struct cv::softfloat cv::softfloat::setFrac(struct cv::softfloat const &)
?setGlDevice@cuda@cv@@YAXH@Z;void cv::cuda::setGlDevice(int)
?setGradientMagnitudeMaxLimit@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@M@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setGradientMagnitudeMaxLimit(float)
?setHalideScheduler@Net@dnn4_v20211004@dnn@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::dnn::dnn4_v20211004::Net::setHalideScheduler(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?setIdentity@cv@@YAXAEBV_InputOutputArray@1@AEBV?$Scalar_@N@1@@Z;void cv::setIdentity(class cv::_InputOutputArray const &,class cv::Scalar_<double> const &)
?setInInfo@Priv@GStreamingCompiled@cv@@QEAAXAEBV?$vector@UGTypeInfo@cv@@V?$allocator@UGTypeInfo@cv@@@std@@@std@@@Z;void cv::GStreamingCompiled::Priv::setInInfo(class std::vector<struct cv::GTypeInfo,class std::allocator<struct cv::GTypeInfo> > const &)
?setInferenceEngineBackendType@dnn4_v20211004@dnn@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV45@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::dnn::dnn4_v20211004::setInferenceEngineBackendType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?setInput@Net@dnn4_v20211004@dnn@cv@@QEAAXAEBV_InputArray@4@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NAEBV?$Scalar_@N@4@@Z;void cv::dnn::dnn4_v20211004::Net::setInput(class cv::_InputArray const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double,class cv::Scalar_<double> const &)
?setInputCrop@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@_N@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setInputCrop(bool)
?setInputMean@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@AEBV?$Scalar_@N@4@@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setInputMean(class cv::Scalar_<double> const &)
?setInputParams@Model@dnn4_v20211004@dnn@cv@@QEAAXNAEBV?$Size_@H@4@AEBV?$Scalar_@N@4@_N2@Z;void cv::dnn::dnn4_v20211004::Model::setInputParams(double,class cv::Size_<int> const &,class cv::Scalar_<double> const &,bool,bool)
?setInputScale@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@N@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setInputScale(double)
?setInputShape@Net@dnn4_v20211004@dnn@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@HV?$allocator@H@std@@@6@@Z;void cv::dnn::dnn4_v20211004::Net::setInputShape(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<int,class std::allocator<int> > const &)
?setInputSize@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@AEBV?$Size_@H@4@@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setInputSize(class cv::Size_<int> const &)
?setInputSize@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@HH@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setInputSize(int,int)
?setInputSwapRB@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@_N@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setInputSwapRB(bool)
?setInputsNames@Net@dnn4_v20211004@dnn@cv@@QEAAXAEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z;void cv::dnn::dnn4_v20211004::Net::setInputsNames(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?setInt@IndexParams@flann@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;void cv::flann::IndexParams::setInt(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?setInterpolationFlags@Stitcher@cv@@QEAAXW4InterpolationFlags@2@@Z;void cv::Stitcher::setInterpolationFlags(enum cv::InterpolationFlags)
?setIppStatus@ipp@cv@@YAXHQEBD0H@Z;void cv::ipp::setIppStatus(int,char const * const,char const * const,int)
?setKind@GArrayU@detail@cv@@IEAAXW4OpaqueKind@23@@Z;void cv::detail::GArrayU::setKind(enum cv::detail::OpaqueKind)
?setKind@GOpaqueU@detail@cv@@IEAAXW4OpaqueKind@23@@Z;void cv::detail::GOpaqueU::setKind(enum cv::detail::OpaqueKind)
?setLastTargetState@TrackerModel@tracking@detail@cv@@QEAAXAEBU?$Ptr@VTrackerTargetState@tracking@detail@cv@@@4@@Z;void cv::detail::tracking::TrackerModel::setLastTargetState(struct cv::Ptr<class cv::detail::tracking::TrackerTargetState> const &)
?setLogLevel@logging@utils@cv@@YA?AW4LogLevel@123@W44123@@Z;enum cv::utils::logging::LogLevel cv::utils::logging::setLogLevel(enum cv::utils::logging::LogLevel)
?setLogTagLevel@logging@utils@cv@@YAXPEBDW4LogLevel@123@@Z;void cv::utils::logging::setLogTagLevel(char const *,enum cv::utils::logging::LogLevel)
?setMaskGenerator@CascadeClassifier@cv@@QEAAXAEBU?$Ptr@VMaskGenerator@BaseCascadeClassifier@cv@@@2@@Z;void cv::CascadeClassifier::setMaskGenerator(struct cv::Ptr<class cv::BaseCascadeClassifier::MaskGenerator> const &)
?setMatGains@BlocksCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::BlocksCompensator::setMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?setMatGains@BlocksGainCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::BlocksGainCompensator::setMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?setMatGains@ChannelsCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::ChannelsCompensator::setMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?setMatGains@ExposureCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::ExposureCompensator::setMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?setMatGains@GainCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::GainCompensator::setMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?setMatGains@NoExposureCompensator@detail@cv@@UEAAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@@Z;void cv::detail::NoExposureCompensator::setMatGains(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &)
?setMatchingMask@Stitcher@cv@@QEAAXAEBVUMat@2@@Z;void cv::Stitcher::setMatchingMask(class cv::UMat const &)
?setMaxCandidates@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@H@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_DB & cv::dnn::dnn4_v20211004::TextDetectionModel_DB::setMaxCandidates(int)
?setMode@TrackerSamplerCSC@tracking@detail@cv@@QEAAXH@Z;void cv::detail::tracking::TrackerSamplerCSC::setMode(int)
?setMouseCallback@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6AXHHHHPEAX@Z1@Z;void cv::setMouseCallback(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void (*)(int,int,int,int,void *),void *)
?setNMSThreshold@TextDetectionModel_EAST@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@M@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_EAST & cv::dnn::dnn4_v20211004::TextDetectionModel_EAST::setNMSThreshold(float)
?setNmsAcrossClasses@DetectionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@_N@Z;class cv::dnn::dnn4_v20211004::DetectionModel & cv::dnn::dnn4_v20211004::DetectionModel::setNmsAcrossClasses(bool)
?setNormalArray@Arrays@ogl@cv@@QEAAXAEBV_InputArray@3@@Z;void cv::ogl::Arrays::setNormalArray(class cv::_InputArray const &)
?setNrFeeds@BlocksCompensator@detail@cv@@QEAAXH@Z;void cv::detail::BlocksCompensator::setNrFeeds(int)
?setNrFeeds@ChannelsCompensator@detail@cv@@QEAAXH@Z;void cv::detail::ChannelsCompensator::setNrFeeds(int)
?setNrFeeds@GainCompensator@detail@cv@@QEAAXH@Z;void cv::detail::GainCompensator::setNrFeeds(int)
?setNrGainsFilteringIterations@BlocksCompensator@detail@cv@@QEAAXH@Z;void cv::detail::BlocksCompensator::setNrGainsFilteringIterations(int)
?setNumBands@MultiBandBlender@detail@cv@@QEAAXH@Z;void cv::detail::MultiBandBlender::setNumBands(int)
?setNumThreads@cv@@YAXH@Z;void cv::setNumThreads(int)
?setOctaves@BRISK@cv@@UEAAXH@Z;void cv::BRISK::setOctaves(int)
?setOpenGlContext@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::setOpenGlContext(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?setOpenGlDrawCallback@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6AXPEAX@Z1@Z;void cv::setOpenGlDrawCallback(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void (*)(void *),void *)
?setOutInfo@Priv@GStreamingCompiled@cv@@QEAAXAEBV?$vector@UGTypeInfo@cv@@V?$allocator@UGTypeInfo@cv@@@std@@@std@@@Z;void cv::GStreamingCompiled::Priv::setOutInfo(class std::vector<struct cv::GTypeInfo,class std::allocator<struct cv::GTypeInfo> > const &)
?setPanoConfidenceThresh@Stitcher@cv@@QEAAXN@Z;void cv::Stitcher::setPanoConfidenceThresh(double)
?setParallelForBackend@parallel@cv@@YAXAEBV?$shared_ptr@VParallelForAPI@parallel@cv@@@std@@_N@Z;void cv::parallel::setParallelForBackend(class std::shared_ptr<class cv::parallel::ParallelForAPI> const &,bool)
?setParallelForBackend@parallel@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z;bool cv::parallel::setParallelForBackend(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)
?setParam@Net@dnn4_v20211004@dnn@cv@@QEAAXUDictValue@234@HAEBVMat@4@@Z;void cv::dnn::dnn4_v20211004::Net::setParam(struct cv::dnn::dnn4_v20211004::DictValue,int,class cv::Mat const &)
?setParameters@DetectionBasedTracker@cv@@QEAA_NAEBUParameters@12@@Z;bool cv::DetectionBasedTracker::setParameters(struct cv::DetectionBasedTracker::Parameters const &)
?setParamsFrom@Layer@dnn4_v20211004@dnn@cv@@QEAAXAEBVLayerParams@234@@Z;void cv::dnn::dnn4_v20211004::Layer::setParamsFrom(class cv::dnn::dnn4_v20211004::LayerParams const &)
?setPolygonThreshold@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@M@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_DB & cv::dnn::dnn4_v20211004::TextDetectionModel_DB::setPolygonThreshold(float)
?setPreferableBackend@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@W4Backend@234@@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setPreferableBackend(enum cv::dnn::dnn4_v20211004::Backend)
?setPreferableBackend@Net@dnn4_v20211004@dnn@cv@@QEAAXH@Z;void cv::dnn::dnn4_v20211004::Net::setPreferableBackend(int)
?setPreferableTarget@Model@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@W4Target@234@@Z;class cv::dnn::dnn4_v20211004::Model & cv::dnn::dnn4_v20211004::Model::setPreferableTarget(enum cv::dnn::dnn4_v20211004::Target)
?setPreferableTarget@Net@dnn4_v20211004@dnn@cv@@QEAAXH@Z;void cv::dnn::dnn4_v20211004::Net::setPreferableTarget(int)
?setRNGSeed@cv@@YAXH@Z;void cv::setRNGSeed(int)
?setRefinementMask@BundleAdjusterBase@detail@cv@@QEAAXAEBVMat@3@@Z;void cv::detail::BundleAdjusterBase::setRefinementMask(class cv::Mat const &)
?setRegistrationResol@Stitcher@cv@@QEAAXN@Z;void cv::Stitcher::setRegistrationResol(double)
?setSVMDetector@HOGDescriptor@cv@@UEAAXAEBV_InputArray@2@@Z;void cv::HOGDescriptor::setSVMDetector(class cv::_InputArray const &)
?setScale@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::setScale(float)
?setScale@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::setScale(float)
?setScale@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::setScale(float)
?setScale@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::setScale(float)
?setScale@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::setScale(float)
?setScale@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::setScale(float)
?setScale@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::setScale(float)
?setScale@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::setScale(float)
?setScale@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::setScale(float)
?setScale@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::setScale(float)
?setScale@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::setScale(float)
?setScale@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::setScale(float)
?setScale@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::setScale(float)
?setScale@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::setScale(float)
?setScale@PyRotationWarper@cv@@QEAAXM@Z;void cv::PyRotationWarper::setScale(float)
?setScale@RotationWarper@detail@cv@@UEAAXM@Z;void cv::detail::RotationWarper::setScale(float)
?setSeamEstimationResol@Stitcher@cv@@QEAAXN@Z;void cv::Stitcher::setSeamEstimationResol(double)
?setSeamFinder@Stitcher@cv@@QEAAXU?$Ptr@VSeamFinder@detail@cv@@@2@@Z;void cv::Stitcher::setSeamFinder(struct cv::Ptr<class cv::detail::SeamFinder>)
?setSharpness@FeatherBlender@detail@cv@@QEAAXM@Z;void cv::detail::FeatherBlender::setSharpness(float)
?setSign@softdouble@cv@@QEBA?AU12@_N@Z;struct cv::softdouble cv::softdouble::setSign(bool)
?setSign@softfloat@cv@@QEBA?AU12@_N@Z;struct cv::softfloat cv::softfloat::setSign(bool)
?setSimilarityThreshold@BlocksCompensator@detail@cv@@QEAAXN@Z;void cv::detail::BlocksCompensator::setSimilarityThreshold(double)
?setSimilarityThreshold@ChannelsCompensator@detail@cv@@QEAAXN@Z;void cv::detail::ChannelsCompensator::setSimilarityThreshold(double)
?setSimilarityThreshold@GainCompensator@detail@cv@@QEAAXN@Z;void cv::detail::GainCompensator::setSimilarityThreshold(double)
?setSource@GStreamingCompiled@cv@@QEAAX$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@@Z;void cv::GStreamingCompiled::setSource(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&)
?setSource@GStreamingCompiled@cv@@QEAAXAEBUExtractArgsCallback@detail@2@@Z;void cv::GStreamingCompiled::setSource(struct cv::detail::ExtractArgsCallback const &)
?setSource@GStreamingCompiled@cv@@QEAAXAEBV?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@@Z;void cv::GStreamingCompiled::setSource(class std::shared_ptr<class cv::gapi::wip::IStreamSource> const &)
?setSource@Priv@GStreamingCompiled@cv@@QEAAX$$QEAV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@@Z;void cv::GStreamingCompiled::Priv::setSource(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > &&)
?setString@IndexParams@flann@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void cv::flann::IndexParams::setString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?setTargetHeight@TrackerTargetState@tracking@detail@cv@@QEAAXH@Z;void cv::detail::tracking::TrackerTargetState::setTargetHeight(int)
?setTargetPosition@TrackerTargetState@tracking@detail@cv@@QEAAXAEBV?$Point_@M@4@@Z;void cv::detail::tracking::TrackerTargetState::setTargetPosition(class cv::Point_<float> const &)
?setTargetWidth@TrackerTargetState@tracking@detail@cv@@QEAAXH@Z;void cv::detail::tracking::TrackerTargetState::setTargetWidth(int)
?setTermCriteria@BundleAdjusterBase@detail@cv@@QEAAXAEBVTermCriteria@3@@Z;void cv::detail::BundleAdjusterBase::setTermCriteria(class cv::TermCriteria const &)
?setTermCriteria@EMImpl@ml@cv@@UEAAXAEBVTermCriteria@3@@Z;void cv::ml::EMImpl::setTermCriteria(class cv::TermCriteria const &)
?setTexCoordArray@Arrays@ogl@cv@@QEAAXAEBV_InputArray@3@@Z;void cv::ogl::Arrays::setTexCoordArray(class cv::_InputArray const &)
?setThreshold@BRISK@cv@@UEAAXH@Z;void cv::BRISK::setThreshold(int)
?setTo@GpuMat@cuda@cv@@QEAAAEAV123@V?$Scalar_@N@3@@Z;class cv::cuda::GpuMat & cv::cuda::GpuMat::setTo(class cv::Scalar_<double>)
?setTo@GpuMat@cuda@cv@@QEAAAEAV123@V?$Scalar_@N@3@AEAVStream@23@@Z;class cv::cuda::GpuMat & cv::cuda::GpuMat::setTo(class cv::Scalar_<double>,class cv::cuda::Stream &)
?setTo@GpuMat@cuda@cv@@QEAAAEAV123@V?$Scalar_@N@3@AEBV_InputArray@3@@Z;class cv::cuda::GpuMat & cv::cuda::GpuMat::setTo(class cv::Scalar_<double>,class cv::_InputArray const &)
?setTo@GpuMat@cuda@cv@@QEAAAEAV123@V?$Scalar_@N@3@AEBV_InputArray@3@AEAVStream@23@@Z;class cv::cuda::GpuMat & cv::cuda::GpuMat::setTo(class cv::Scalar_<double>,class cv::_InputArray const &,class cv::cuda::Stream &)
?setTo@Mat@cv@@QEAAAEAV12@AEBV_InputArray@2@0@Z;class cv::Mat & cv::Mat::setTo(class cv::_InputArray const &,class cv::_InputArray const &)
?setTo@UMat@cv@@QEAAAEAV12@AEBV_InputArray@2@0@Z;class cv::UMat & cv::UMat::setTo(class cv::_InputArray const &,class cv::_InputArray const &)
?setTo@_OutputArray@cv@@QEBAXAEBV_InputArray@2@0@Z;void cv::_OutputArray::setTo(class cv::_InputArray const &,class cv::_InputArray const &)
?setTrackbarMax@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0H@Z;void cv::setTrackbarMax(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?setTrackbarMin@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0H@Z;void cv::setTrackbarMin(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?setTrackbarPos@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0H@Z;void cv::setTrackbarPos(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?setTrackerStateEstimator@TrackerModel@tracking@detail@cv@@QEAA_NU?$Ptr@VTrackerStateEstimator@tracking@detail@cv@@@4@@Z;bool cv::detail::tracking::TrackerModel::setTrackerStateEstimator(struct cv::Ptr<class cv::detail::tracking::TrackerStateEstimator>)
?setTrainData@EMImpl@ml@cv@@QEAAXHAEBVMat@3@PEBV43@1PEBV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@1@Z;void cv::ml::EMImpl::setTrainData(int,class cv::Mat const &,class cv::Mat const *,class cv::Mat const *,class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > const *,class cv::Mat const *)
?setTransform@Stitcher@cv@@QEAA?AW4Status@12@AEBV_InputArray@2@AEBV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;enum cv::Stitcher::Status cv::Stitcher::setTransform(class cv::_InputArray const &,class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > const &)
?setTransform@Stitcher@cv@@QEAA?AW4Status@12@AEBV_InputArray@2@AEBV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@AEBV?$vector@HV?$allocator@H@std@@@6@@Z;enum cv::Stitcher::Status cv::Stitcher::setTransform(class cv::_InputArray const &,class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > const &,class std::vector<int,class std::allocator<int> > const &)
?setUnclipRatio@TextDetectionModel_DB@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@N@Z;class cv::dnn::dnn4_v20211004::TextDetectionModel_DB & cv::dnn::dnn4_v20211004::TextDetectionModel_DB::setUnclipRatio(double)
?setUpInitialCameraParams@BundleAdjusterAffine@detail@cv@@EEAAXAEBV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterAffine::setUpInitialCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > const &)
?setUpInitialCameraParams@BundleAdjusterAffinePartial@detail@cv@@EEAAXAEBV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterAffinePartial::setUpInitialCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > const &)
?setUpInitialCameraParams@BundleAdjusterRay@detail@cv@@EEAAXAEBV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterRay::setUpInitialCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > const &)
?setUpInitialCameraParams@BundleAdjusterReproj@detail@cv@@EEAAXAEBV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::BundleAdjusterReproj::setUpInitialCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > const &)
?setUpInitialCameraParams@NoBundleAdjuster@detail@cv@@EEAAXAEBV?$vector@UCameraParams@detail@cv@@V?$allocator@UCameraParams@detail@cv@@@std@@@std@@@Z;void cv::detail::NoBundleAdjuster::setUpInitialCameraParams(class std::vector<struct cv::detail::CameraParams,class std::allocator<struct cv::detail::CameraParams> > const &)
?setUpdateGain@ExposureCompensator@detail@cv@@QEAAX_N@Z;void cv::detail::ExposureCompensator::setUpdateGain(bool)
?setUseIPP@ipp@cv@@YAX_N@Z;void cv::ipp::setUseIPP(bool)
?setUseIPP_NotExact@ipp@cv@@YAX_N@Z;void cv::ipp::setUseIPP_NotExact(bool)
?setUseInstrumentation@instr@cv@@YAX_N@Z;void cv::instr::setUseInstrumentation(bool)
?setUseOpenCL@OpenCLExecutionContext@ocl@cv@@QEAAX_N@Z;void cv::ocl::OpenCLExecutionContext::setUseOpenCL(bool)
?setUseOpenCL@ocl@cv@@YAX_N@Z;void cv::ocl::setUseOpenCL(bool)
?setUseOpenVX@cv@@YAX_N@Z;void cv::setUseOpenVX(bool)
?setUseOptimized@cv@@YAX_N@Z;void cv::setUseOptimized(bool)
?setUseSVM@Context@ocl@cv@@QEAAX_N@Z;void cv::ocl::Context::setUseSVM(bool)
?setUserContext@Context@ocl@cv@@QEAAXVtype_index@std@@AEBV?$shared_ptr@VUserContext@Context@ocl@cv@@@5@@Z;void cv::ocl::Context::setUserContext(class std::type_index,class std::shared_ptr<class cv::ocl::Context::UserContext> const &)
?setValue@AsyncPromise@cv@@QEAAXAEBV_InputArray@2@@Z;void cv::AsyncPromise::setValue(class cv::_InputArray const &)
?setValue@FileNode@cv@@QEAAXHPEBXH@Z;void cv::FileNode::setValue(int,void const *,int)
?setVertexArray@Arrays@ogl@cv@@QEAAXAEBV_InputArray@3@@Z;void cv::ogl::Arrays::setVertexArray(class cv::_InputArray const &)
?setVocabulary@BOWImgDescriptorExtractor@cv@@QEAAXAEBVMat@2@@Z;void cv::BOWImgDescriptorExtractor::setVocabulary(class cv::Mat const &)
?setVocabulary@TextRecognitionModel@dnn4_v20211004@dnn@cv@@QEAAAEAV1234@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z;class cv::dnn::dnn4_v20211004::TextRecognitionModel & cv::dnn::dnn4_v20211004::TextRecognitionModel::setVocabulary(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?setWarper@Stitcher@cv@@QEAAXU?$Ptr@VWarperCreator@cv@@@2@@Z;void cv::Stitcher::setWarper(struct cv::Ptr<class cv::WarperCreator>)
?setWaveCorrectKind@Stitcher@cv@@QEAAXW4WaveCorrectKind@detail@2@@Z;void cv::Stitcher::setWaveCorrectKind(enum cv::detail::WaveCorrectKind)
?setWaveCorrection@Stitcher@cv@@QEAAX_N@Z;void cv::Stitcher::setWaveCorrection(bool)
?setWeights@IntelligentScissorsMB@segmentation@cv@@QEAAAEAV123@MMM@Z;class cv::segmentation::IntelligentScissorsMB & cv::segmentation::IntelligentScissorsMB::setWeights(float,float,float)
?setWindowProperty@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HN@Z;void cv::setWindowProperty(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,double)
?setWindowTitle@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void cv::setWindowTitle(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?set_distance_type@cvflann@@YAXW4flann_distance_t@1@H@Z;void cvflann::set_distance_type(enum cvflann::flann_distance_t,int)
?setup@Priv@GCompiled@cv@@QEAAXAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@0$$QEAV?$unique_ptr@VGExecutor@gimpl@cv@@U?$default_delete@VGExecutor@gimpl@cv@@@std@@@5@@Z;void cv::GCompiled::Priv::setup(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &,class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &,class std::unique_ptr<class cv::gimpl::GExecutor,struct std::default_delete<class cv::gimpl::GExecutor> > &&)
?setup@Priv@GStreamingCompiled@cv@@QEAAX$$QEAV?$unique_ptr@VGStreamingExecutor@gimpl@cv@@U?$default_delete@VGStreamingExecutor@gimpl@cv@@@std@@@std@@@Z;void cv::GStreamingCompiled::Priv::setup(class std::unique_ptr<class cv::gimpl::GStreamingExecutor,struct std::default_delete<class cv::gimpl::GStreamingExecutor> > &&)
?setup@Priv@GStreamingCompiled@cv@@QEAAXAEBV?$vector@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@V?$allocator@V?$variant@Umonostate@util@cv@@UGMatDesc@3@UGScalarDesc@3@UGArrayDesc@3@UGOpaqueDesc@3@UGFrameDesc@3@@util@cv@@@std@@@std@@0$$QEAV?$unique_ptr@VGStreamingExecutor@gimpl@cv@@U?$default_delete@VGStreamingExecutor@gimpl@cv@@@std@@@5@@Z;void cv::GStreamingCompiled::Priv::setup(class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &,class std::vector<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc>,class std::allocator<class cv::util::variant<struct cv::util::monostate,struct cv::GMatDesc,struct cv::GScalarDesc,struct cv::GArrayDesc,struct cv::GOpaqueDesc,struct cv::GFrameDesc> > > const &,class std::unique_ptr<class cv::gimpl::GStreamingExecutor,struct std::default_delete<class cv::gimpl::GStreamingExecutor> > &&)
?sharedMemPerBlock@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::sharedMemPerBlock(void)
?sharpness@FeatherBlender@detail@cv@@QEBAMXZ;float cv::detail::FeatherBlender::sharpness(void)
?shrinkCaffeModel@dnn4_v20211004@dnn@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@5@@Z;void cv::dnn::dnn4_v20211004::shrinkCaffeModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?sigmoid@ClfMilBoost@tracking@detail@cv@@QEAAMM@Z;float cv::detail::tracking::ClfMilBoost::sigmoid(float)
?sin@cv@@YA?AUsoftdouble@1@AEBU21@@Z;struct cv::softdouble cv::sin(struct cv::softdouble const &)
?singleFPConfig@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::singleFPConfig(void)
?singleFeed@GainCompensator@detail@cv@@QEAAXAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@AEBV?$vector@VUMat@cv@@V?$allocator@VUMat@cv@@@std@@@5@AEBV?$vector@U?$pair@VUMat@cv@@E@std@@V?$allocator@U?$pair@VUMat@cv@@E@std@@@2@@5@@Z;void cv::detail::GainCompensator::singleFeed(class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,class std::vector<class cv::UMat,class std::allocator<class cv::UMat> > const &,class std::vector<struct std::pair<class cv::UMat,unsigned char>,class std::allocator<struct std::pair<class cv::UMat,unsigned char> > > const &)
?size@Arrays@ogl@cv@@QEBAHXZ;int cv::ogl::Arrays::size(void)
?size@Buffer@ogl@cv@@QEBA?AV?$Size_@H@3@XZ;class cv::Size_<int> cv::ogl::Buffer::size(void)
?size@DescriptorCollection@DescriptorMatcher@cv@@QEBAHXZ;int cv::DescriptorMatcher::DescriptorCollection::size(void)
?size@DictValue@dnn4_v20211004@dnn@cv@@QEBAHXZ;int cv::dnn::dnn4_v20211004::DictValue::size(void)
?size@FileNode@cv@@QEBA_KXZ;unsigned __int64 cv::FileNode::size(void)
?size@GKernelPackage@gapi@cv@@QEBA_KXZ;unsigned __int64 cv::gapi::GKernelPackage::size(void)
?size@GpuMat@cuda@cv@@QEBA?AV?$Size_@H@3@XZ;class cv::Size_<int> cv::cuda::GpuMat::size(void)
?size@HostMem@cuda@cv@@QEBA?AV?$Size_@H@3@XZ;class cv::Size_<int> cv::cuda::HostMem::size(void)
?size@MatExpr@cv@@QEBA?AV?$Size_@H@2@XZ;class cv::Size_<int> cv::MatExpr::size(void)
?size@MatOp@cv@@UEBA?AV?$Size_@H@2@AEBVMatExpr@2@@Z;class cv::Size_<int> cv::MatOp::size(class cv::MatExpr const &)
?size@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::size(void)
?size@Range@cv@@QEBAHXZ;int cv::Range::size(void)
?size@SparseMat@cv@@QEBAHH@Z;int cv::SparseMat::size(int)
?size@SparseMat@cv@@QEBAPEBHXZ;int const * cv::SparseMat::size(void)
?size@Texture2D@ogl@cv@@QEBA?AV?$Size_@H@3@XZ;class cv::Size_<int> cv::ogl::Texture2D::size(void)
?size@View@RMat@cv@@QEBA?AV?$Size_@H@3@XZ;class cv::Size_<int> cv::RMat::View::size(void)
?size@_InputArray@cv@@QEBA?AV?$Size_@H@2@H@Z;class cv::Size_<int> cv::_InputArray::size(int)
?size@streaming@gapi@cv@@YA?AV?$GOpaque@V?$Size_@H@cv@@@3@AEBV?$GOpaque@V?$Rect_@H@cv@@@3@@Z;class cv::GOpaque<class cv::Size_<int> > cv::gapi::streaming::size(class cv::GOpaque<class cv::Rect_<int> > const &)
?size@streaming@gapi@cv@@YA?AV?$GOpaque@V?$Size_@H@cv@@@3@AEBVGFrame@3@@Z;class cv::GOpaque<class cv::Size_<int> > cv::gapi::streaming::size(class cv::GFrame const &)
?size@streaming@gapi@cv@@YA?AV?$GOpaque@V?$Size_@H@cv@@@3@AEBVGMat@3@@Z;class cv::GOpaque<class cv::Size_<int> > cv::gapi::streaming::size(class cv::GMat const &)
?sizend@_InputArray@cv@@QEBAHPEAHH@Z;int cv::_InputArray::sizend(int *,int)
?skipJunk@AVIReadContainer@cv@@IEAAXAEAURiffChunk@2@@Z;void cv::AVIReadContainer::skipJunk(struct cv::RiffChunk &)
?skipJunk@AVIReadContainer@cv@@IEAAXAEAURiffList@2@@Z;void cv::AVIReadContainer::skipJunk(struct cv::RiffList &)
?skipModelImport@dnn4_v20211004@dnn@cv@@YAX_N@Z;void cv::dnn::dnn4_v20211004::skipModelImport(bool)
?softNMSBoxes@dnn4_v20211004@dnn@cv@@YAXAEBV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@AEBV?$vector@MV?$allocator@M@std@@@5@AEAV65@MMAEAV?$vector@HV?$allocator@H@std@@@5@_KMW4SoftNMSMethod@123@@Z;void cv::dnn::dnn4_v20211004::softNMSBoxes(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > const &,class std::vector<float,class std::allocator<float> > const &,class std::vector<float,class std::allocator<float> > &,float,float,class std::vector<int,class std::allocator<int> > &,unsigned __int64,float,enum cv::dnn::dnn4_v20211004::SoftNMSMethod)
?solve@cv@@YA_NAEBV_InputArray@1@0AEBV_OutputArray@1@H@Z;bool cv::solve(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,int)
?solveCubic@cv@@YAHAEBV_InputArray@1@AEBV_OutputArray@1@@Z;int cv::solveCubic(class cv::_InputArray const &,class cv::_OutputArray const &)
?solveLP@cv@@YAHAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;int cv::solveLP(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?solveP3P@cv@@YAHAEBV_InputArray@1@000AEBV_OutputArray@1@1H@Z;int cv::solveP3P(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int)
?solvePnP@cv@@YA_NAEBV_InputArray@1@000AEBV_OutputArray@1@1_NH@Z;bool cv::solvePnP(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,bool,int)
?solvePnPGeneric@cv@@YAHAEBV_InputArray@1@000AEBV_OutputArray@1@1_NW4SolvePnPMethod@1@001@Z;int cv::solvePnPGeneric(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,bool,enum cv::SolvePnPMethod,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?solvePnPRansac@cv@@YA_NAEBV_InputArray@1@000AEBV_OutputArray@1@1_NHMN1H@Z;bool cv::solvePnPRansac(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,bool,int,float,double,class cv::_OutputArray const &,int)
?solvePnPRansac@cv@@YA_NAEBV_InputArray@1@0AEBV_InputOutputArray@1@0AEBV_OutputArray@1@22AEBUUsacParams@1@@Z;bool cv::solvePnPRansac(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,struct cv::UsacParams const &)
?solvePnPRefineLM@cv@@YAXAEBV_InputArray@1@000AEBV_InputOutputArray@1@1VTermCriteria@1@@Z;void cv::solvePnPRefineLM(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::TermCriteria)
?solvePnPRefineVVS@cv@@YAXAEBV_InputArray@1@000AEBV_InputOutputArray@1@1VTermCriteria@1@N@Z;void cv::solvePnPRefineVVS(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::TermCriteria,double)
?solvePoly@cv@@YANAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;double cv::solvePoly(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?solveZ@SVD@cv@@SAXAEBV_InputArray@2@AEBV_OutputArray@2@@Z;void cv::SVD::solveZ(class cv::_InputArray const &,class cv::_OutputArray const &)
?sort@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::sort(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?sortIdx@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@H@Z;void cv::sortIdx(class cv::_InputArray const &,class cv::_OutputArray const &,int)
?source@Program@ocl@cv@@QEBAAEBVProgramSource@23@XZ;class cv::ocl::ProgramSource const & cv::ocl::Program::source(void)
?source@ProgramSource@ocl@cv@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & cv::ocl::ProgramSource::source(void)
?spatialGradient@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@1HH@Z;void cv::spatialGradient(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,int)
?splice@Subdiv2D@cv@@IEAAXHH@Z;void cv::Subdiv2D::splice(int,int)
?split16u@hal@cv@@YAXPEBGPEAPEAGHH@Z;void cv::hal::split16u(unsigned short const *,unsigned short * *,int,int)
?split32s@hal@cv@@YAXPEBHPEAPEAHHH@Z;void cv::hal::split32s(int const *,int * *,int,int)
?split3@gapi@cv@@YA?AV?$tuple@VGMat@cv@@V12@V12@@std@@AEBVGMat@2@@Z;class std::tuple<class cv::GMat,class cv::GMat,class cv::GMat> cv::gapi::split3(class cv::GMat const &)
?split4@gapi@cv@@YA?AV?$tuple@VGMat@cv@@V12@V12@V12@@std@@AEBVGMat@2@@Z;class std::tuple<class cv::GMat,class cv::GMat,class cv::GMat,class cv::GMat> cv::gapi::split4(class cv::GMat const &)
?split64s@hal@cv@@YAXPEB_JPEAPEA_JHH@Z;void cv::hal::split64s(__int64 const *,__int64 * *,int,int)
?split8u@hal@cv@@YAXPEBEPEAPEAEHH@Z;void cv::hal::split8u(unsigned char const *,unsigned char * *,int,int)
?split@cv@@YAXAEBVMat@1@PEAV21@@Z;void cv::split(class cv::Mat const &,class cv::Mat *)
?split@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::split(class cv::_InputArray const &,class cv::_OutputArray const &)
?sqrBoxFilter@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@HV?$Size_@H@1@V?$Point_@H@1@_NH@Z;void cv::sqrBoxFilter(class cv::_InputArray const &,class cv::_OutputArray const &,int,class cv::Size_<int>,class cv::Point_<int>,bool,int)
?sqrt32f@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::sqrt32f(float const *,float *,int)
?sqrt64f@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::sqrt64f(double const *,double *,int)
?sqrt@cv@@YA?AUsoftdouble@1@AEBU21@@Z;struct cv::softdouble cv::sqrt(struct cv::softdouble const &)
?sqrt@cv@@YA?AUsoftfloat@1@AEBU21@@Z;struct cv::softfloat cv::sqrt(struct cv::softfloat const &)
?sqrt@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::sqrt(class cv::_InputArray const &,class cv::_OutputArray const &)
?sqrt@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::sqrt(class cv::GMat const &)
?sqrt@hal@cv@@YAXPEBMPEAMH@Z;void cv::hal::sqrt(float const *,float *,int)
?sqrt@hal@cv@@YAXPEBNPEANH@Z;void cv::hal::sqrt(double const *,double *,int)
?start@GStreamingCompiled@cv@@QEAAXXZ;void cv::GStreamingCompiled::start(void)
?start@Priv@GStreamingCompiled@cv@@QEAAXXZ;void cv::GStreamingCompiled::Priv::start(void)
?start@TickMeter@cv@@QEAAXXZ;void cv::TickMeter::start(void)
?start@Timer@ocl@cv@@QEAAXXZ;void cv::ocl::Timer::start(void)
?startLoop@cv@@YAHP6AHHQEAPEAD@ZH0@Z;int cv::startLoop(int (*)(int,char * * const),int,char * * const)
?startWindowThread@cv@@YAHXZ;int cv::startWindowThread(void)
?startWriteAVI@AVIWriteContainer@cv@@QEAAXH@Z;void cv::AVIWriteContainer::startWriteAVI(int)
?startWriteChunk@AVIWriteContainer@cv@@QEAAXI@Z;void cv::AVIWriteContainer::startWriteChunk(unsigned int)
?startWriteStruct@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H0@Z;void cv::FileStorage::startWriteStruct(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?state@GCPUContext@cv@@QEAA?AVGArg@2@XZ;class cv::GArg cv::GCPUContext::state(void)
?step1@GpuMat@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::GpuMat::step1(void)
?step1@HostMem@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::HostMem::step1(void)
?step1@Mat@cv@@QEBA_KH@Z;unsigned __int64 cv::Mat::step1(int)
?step1@UMat@cv@@QEBA_KH@Z;unsigned __int64 cv::UMat::step1(int)
?step@CvLevMarq@@QEAAXXZ;void CvLevMarq::step(void)
?step@View@RMat@cv@@QEBA_K_K@Z;unsigned __int64 cv::RMat::View::step(unsigned __int64)
?step@_InputArray@cv@@QEBA_KH@Z;unsigned __int64 cv::_InputArray::step(int)
?steps@View@RMat@cv@@QEBAAEBV?$vector@_KV?$allocator@_K@std@@@std@@XZ;class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > const & cv::RMat::View::steps(void)
?stereo@gapi@cv@@YA?AVGMat@2@AEBV32@0W4StereoOutputFormat@12@@Z;class cv::GMat cv::gapi::stereo(class cv::GMat const &,class cv::GMat const &,enum cv::gapi::StereoOutputFormat)
?stereoCalibrate@cv@@YANAEBV_InputArray@1@00AEBV_InputOutputArray@1@111V?$Size_@H@1@11AEBV_OutputArray@1@33HVTermCriteria@1@@Z;double cv::stereoCalibrate(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::Size_<int>,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?stereoCalibrate@cv@@YANAEBV_InputArray@1@00AEBV_InputOutputArray@1@111V?$Size_@H@1@AEBV_OutputArray@1@333HVTermCriteria@1@@Z;double cv::stereoCalibrate(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?stereoCalibrate@fisheye@cv@@YANAEBV_InputArray@2@00AEBV_InputOutputArray@2@111V?$Size_@H@2@AEBV_OutputArray@2@3HVTermCriteria@2@@Z;double cv::fisheye::stereoCalibrate(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::_InputOutputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::TermCriteria)
?stereoRectify@cv@@YAXAEBV_InputArray@1@000V?$Size_@H@1@00AEBV_OutputArray@1@2222HN1PEAV?$Rect_@H@1@3@Z;void cv::stereoRectify(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,double,class cv::Size_<int>,class cv::Rect_<int> *,class cv::Rect_<int> *)
?stereoRectify@fisheye@cv@@YAXAEBV_InputArray@2@000AEBV?$Size_@H@2@00AEBV_OutputArray@2@2222H1NN@Z;void cv::fisheye::stereoRectify(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int> const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,int,class cv::Size_<int> const &,double,double)
?stereoRectifyUncalibrated@cv@@YA_NAEBV_InputArray@1@00V?$Size_@H@1@AEBV_OutputArray@1@2N@Z;bool cv::stereoRectifyUncalibrated(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int>,class cv::_OutputArray const &,class cv::_OutputArray const &,double)
?stitch@Stitcher@cv@@QEAA?AW4Status@12@AEBV_InputArray@2@0AEBV_OutputArray@2@@Z;enum cv::Stitcher::Status cv::Stitcher::stitch(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?stitch@Stitcher@cv@@QEAA?AW4Status@12@AEBV_InputArray@2@AEBV_OutputArray@2@@Z;enum cv::Stitcher::Status cv::Stitcher::stitch(class cv::_InputArray const &,class cv::_OutputArray const &)
?stitchingLogLevel@detail@cv@@YAAEAHXZ;int & cv::detail::stitchingLogLevel(void)
?stop@DetectionBasedTracker@cv@@UEAAXXZ;void cv::DetectionBasedTracker::stop(void)
?stop@GStreamingCompiled@cv@@QEAAXXZ;void cv::GStreamingCompiled::stop(void)
?stop@Priv@GStreamingCompiled@cv@@QEAAXXZ;void cv::GStreamingCompiled::Priv::stop(void)
?stop@TickMeter@cv@@QEAAXXZ;void cv::TickMeter::stop(void)
?stop@Timer@ocl@cv@@QEAAXXZ;void cv::ocl::Timer::stop(void)
?stopLoop@cv@@YAXXZ;void cv::stopLoop(void)
?storage@Priv@Buffer@fluid@gapi@cv@@QEBAAEBVBufferStorage@345@XZ;class cv::gapi::fluid::BufferStorage const & cv::gapi::fluid::Buffer::Priv::storage(void)
?string@FileNode@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::FileNode::string(void)
?stylization@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@MM@Z;void cv::stylization(class cv::_InputArray const &,class cv::_OutputArray const &,float,float)
?sub16s@hal@cv@@YAXPEBF_K01PEAF1HHPEAX@Z;void cv::hal::sub16s(short const *,unsigned __int64,short const *,unsigned __int64,short *,unsigned __int64,int,int,void *)
?sub16u@hal@cv@@YAXPEBG_K01PEAG1HHPEAX@Z;void cv::hal::sub16u(unsigned short const *,unsigned __int64,unsigned short const *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
?sub32f@hal@cv@@YAXPEBM_K01PEAM1HHPEAX@Z;void cv::hal::sub32f(float const *,unsigned __int64,float const *,unsigned __int64,float *,unsigned __int64,int,int,void *)
?sub32s@hal@cv@@YAXPEBH_K01PEAH1HHPEAX@Z;void cv::hal::sub32s(int const *,unsigned __int64,int const *,unsigned __int64,int *,unsigned __int64,int,int,void *)
?sub64f@hal@cv@@YAXPEBN_K01PEAN1HHPEAX@Z;void cv::hal::sub64f(double const *,unsigned __int64,double const *,unsigned __int64,double *,unsigned __int64,int,int,void *)
?sub8s@hal@cv@@YAXPEBC_K01PEAC1HHPEAX@Z;void cv::hal::sub8s(signed char const *,unsigned __int64,signed char const *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
?sub8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::sub8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?sub@gapi@cv@@YA?AVGMat@2@AEBV32@0H@Z;class cv::GMat cv::gapi::sub(class cv::GMat const &,class cv::GMat const &,int)
?subC@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@H@Z;class cv::GMat cv::gapi::subC(class cv::GMat const &,class cv::GScalar const &,int)
?subRC@gapi@cv@@YA?AVGMat@2@AEBVGScalar@2@AEBV32@H@Z;class cv::GMat cv::gapi::subRC(class cv::GScalar const &,class cv::GMat const &,int)
?subspaceProject@LDA@cv@@SA?AVMat@2@AEBV_InputArray@2@00@Z;class cv::Mat cv::LDA::subspaceProject(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?subspaceReconstruct@LDA@cv@@SA?AVMat@2@AEBV_InputArray@2@00@Z;class cv::Mat cv::LDA::subspaceReconstruct(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?subtract@MatOp@cv@@UEBAXAEBV?$Scalar_@N@2@AEBVMatExpr@2@AEAV42@@Z;void cv::MatOp::subtract(class cv::Scalar_<double> const &,class cv::MatExpr const &,class cv::MatExpr &)
?subtract@MatOp@cv@@UEBAXAEBVMatExpr@2@0AEAV32@@Z;void cv::MatOp::subtract(class cv::MatExpr const &,class cv::MatExpr const &,class cv::MatExpr &)
?subtract@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@0H@Z;void cv::subtract(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,int)
?sum@cv@@YA?AV?$Scalar_@N@1@AEBV_InputArray@1@@Z;class cv::Scalar_<double> cv::sum(class cv::_InputArray const &)
?sum@gapi@cv@@YA?AVGScalar@2@AEBVGMat@2@@Z;class cv::GScalar cv::gapi::sum(class cv::GMat const &)
?supportBackend@Layer@dnn4_v20211004@dnn@cv@@UEAA_NH@Z;bool cv::dnn::dnn4_v20211004::Layer::supportBackend(int)
?supports@DeviceInfo@cuda@cv@@QEBA_NW4FeatureSet@23@@Z;bool cv::cuda::DeviceInfo::supports(enum cv::cuda::FeatureSet)
?surfaceAlignment@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::surfaceAlignment(void)
?swap@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@QEAAXAEAV123@@Z;void cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::swap(class cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame> &)
?swap@GpuMat@cuda@cv@@QEAAXAEAV123@@Z;void cv::cuda::GpuMat::swap(class cv::cuda::GpuMat &)
?swap@GpuMatND@cuda@cv@@QEAAXAEAV123@@Z;void cv::cuda::GpuMatND::swap(class cv::cuda::GpuMatND &)
?swap@HostMem@cuda@cv@@QEAAXAEAV123@@Z;void cv::cuda::HostMem::swap(class cv::cuda::HostMem &)
?swap@MatExpr@cv@@QEAAXAEAV12@@Z;void cv::MatExpr::swap(class cv::MatExpr &)
?swap@cv@@YAXAEAVMat@1@0@Z;void cv::swap(class cv::Mat &,class cv::Mat &)
?swap@cv@@YAXAEAVUMat@1@0@Z;void cv::swap(class cv::UMat &,class cv::UMat &)
?swapEdges@Subdiv2D@cv@@IEAAXH@Z;void cv::Subdiv2D::swapEdges(int)
?swprs@?$variant@VUMat@cv@@VRMat@2@V?$shared_ptr@VIStreamSource@wip@gapi@cv@@@std@@VMat@2@V?$Scalar_@N@2@VVectorRef@detail@2@VOpaqueRef@92@VMediaFrame@2@@util@cv@@CA?AV?$array@P6AXQEAT?$_Align_type@N$0GA@@std@@0@Z$07@std@@XZ;class std::array<void (*)(union std::_Align_type<double,96> * const,union std::_Align_type<double,96> * const),8> cv::util::variant<class cv::UMat,class cv::RMat,class std::shared_ptr<class cv::gapi::wip::IStreamSource>,class cv::Mat,class cv::Scalar_<double>,class cv::detail::VectorRef,class cv::detail::OpaqueRef,class cv::MediaFrame>::swprs(void)
?symEdge@Subdiv2D@cv@@QEBAHH@Z;int cv::Subdiv2D::symEdge(int)
?syncOutput@cuda@cv@@YAXAEBVGpuMat@12@AEBV_OutputArray@2@AEAVStream@12@@Z;void cv::cuda::syncOutput(class cv::cuda::GpuMat const &,class cv::_OutputArray const &,class cv::cuda::Stream &)
?t@Mat@cv@@QEBA?AVMatExpr@2@XZ;class cv::MatExpr cv::Mat::t(void)
?t@MatExpr@cv@@QEBA?AV12@XZ;class cv::MatExpr cv::MatExpr::t(void)
?t@UMat@cv@@QEBA?AV12@XZ;class cv::UMat cv::UMat::t(void)
?tag@PyParams@ie@gapi@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::gapi::ie::PyParams::tag(void)
?tccDriver@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::tccDriver(void)
?tempCopiedUMat@UMatData@cv@@QEBA_NXZ;bool cv::UMatData::tempCopiedUMat(void)
?tempUMat@UMatData@cv@@QEBA_NXZ;bool cv::UMatData::tempUMat(void)
?tempfile@cv@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::tempfile(char const *)
?termCriteria@BundleAdjusterBase@detail@cv@@QEAA?AVTermCriteria@3@XZ;class cv::TermCriteria cv::detail::BundleAdjusterBase::termCriteria(void)
?test_point@Timelapser@detail@cv@@MEAA_NV?$Point_@H@3@@Z;bool cv::detail::Timelapser::test_point(class cv::Point_<int>)
?texId@Texture2D@ogl@cv@@QEBAIXZ;unsigned int cv::ogl::Texture2D::texId(void)
?textureAlignment@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::textureAlignment(void)
?textureFlattening@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@MMH@Z;void cv::textureFlattening(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,float,float,int)
?texturePitchAlignment@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::texturePitchAlignment(void)
?theRNG@cv@@YAAEAVRNG@1@XZ;class cv::RNG & cv::theRNG(void)
?this_type_does_not_support_comparisons@Stream@cuda@cv@@AEBAXXZ;void cv::cuda::Stream::this_type_does_not_support_comparisons(void)
?threshold@cv@@YANAEBV_InputArray@1@AEBV_OutputArray@1@NNH@Z;double cv::threshold(class cv::_InputArray const &,class cv::_OutputArray const &,double,double,int)
?threshold@gapi@cv@@YA?AV?$tuple@VGMat@cv@@VGScalar@2@@std@@AEBVGMat@2@AEBVGScalar@2@H@Z;class std::tuple<class cv::GMat,class cv::GScalar> cv::gapi::threshold(class cv::GMat const &,class cv::GScalar const &,int)
?threshold@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVGScalar@2@1H@Z;class cv::GMat cv::gapi::threshold(class cv::GMat const &,class cv::GScalar const &,class cv::GScalar const &,int)
?total@GpuMatND@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::GpuMatND::total(void)
?total@Mat@cv@@QEBA_KHH@Z;unsigned __int64 cv::Mat::total(int,int)
?total@Mat@cv@@QEBA_KXZ;unsigned __int64 cv::Mat::total(void)
?total@UMat@cv@@QEBA_KXZ;unsigned __int64 cv::UMat::total(void)
?total@_InputArray@cv@@QEBA_KH@Z;unsigned __int64 cv::_InputArray::total(int)
?totalConstMem@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::totalConstMem(void)
?totalGlobalMem@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::totalGlobalMem(void)
?totalMemSize@GpuMatND@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::GpuMatND::totalMemSize(void)
?totalMemory@DeviceInfo@cuda@cv@@QEBA_KXZ;unsigned __int64 cv::cuda::DeviceInfo::totalMemory(void)
?trace@cv@@YA?AV?$Scalar_@N@1@AEBV_InputArray@1@@Z;class cv::Scalar_<double> cv::trace(class cv::_InputArray const &)
?traceArg@details@trace@utils@cv@@YAXAEBUTraceArg@1234@H@Z;void cv::utils::trace::details::traceArg(struct cv::utils::trace::details::TraceArg const &,int)
?traceArg@details@trace@utils@cv@@YAXAEBUTraceArg@1234@N@Z;void cv::utils::trace::details::traceArg(struct cv::utils::trace::details::TraceArg const &,double)
?traceArg@details@trace@utils@cv@@YAXAEBUTraceArg@1234@PEBD@Z;void cv::utils::trace::details::traceArg(struct cv::utils::trace::details::TraceArg const &,char const *)
?traceArg@details@trace@utils@cv@@YAXAEBUTraceArg@1234@_J@Z;void cv::utils::trace::details::traceArg(struct cv::utils::trace::details::TraceArg const &,__int64)
?train@DescriptorMatcher@cv@@UEAAXXZ;void cv::DescriptorMatcher::train(void)
?train@EMImpl@ml@cv@@UEAA_NAEBU?$Ptr@VTrainData@ml@cv@@@3@H@Z;bool cv::ml::EMImpl::train(struct cv::Ptr<class cv::ml::TrainData> const &,int)
?train@FlannBasedMatcher@cv@@UEAAXXZ;void cv::FlannBasedMatcher::train(void)
?train@StatModel@ml@cv@@UEAA_NAEBU?$Ptr@VTrainData@ml@cv@@@3@H@Z;bool cv::ml::StatModel::train(struct cv::Ptr<class cv::ml::TrainData> const &,int)
?train@StatModel@ml@cv@@UEAA_NAEBV_InputArray@3@H0@Z;bool cv::ml::StatModel::train(class cv::_InputArray const &,int,class cv::_InputArray const &)
?trainE@EMImpl@ml@cv@@UEAA_NAEBV_InputArray@3@000AEBV_OutputArray@3@11@Z;bool cv::ml::EMImpl::trainE(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?trainEM@EMImpl@ml@cv@@UEAA_NAEBV_InputArray@3@AEBV_OutputArray@3@11@Z;bool cv::ml::EMImpl::trainEM(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?trainM@EMImpl@ml@cv@@UEAA_NAEBV_InputArray@3@0AEBV_OutputArray@3@11@Z;bool cv::ml::EMImpl::trainM(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &,class cv::_OutputArray const &)
?transform@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0@Z;void cv::transform(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &)
?transpose@MatOp@cv@@UEBAXAEBVMatExpr@2@AEAV32@@Z;void cv::MatOp::transpose(class cv::MatExpr const &,class cv::MatExpr &)
?transpose@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::transpose(class cv::_InputArray const &,class cv::_OutputArray const &)
?transpose@gapi@cv@@YA?AVGMat@2@AEBV32@@Z;class cv::GMat cv::gapi::transpose(class cv::GMat const &)
?triangulatePoints@cv@@YAXAEBV_InputArray@1@000AEBV_OutputArray@1@@Z;void cv::triangulatePoints(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?tryAttach@Layer@dnn4_v20211004@dnn@cv@@UEAA?AU?$Ptr@VBackendNode@dnn4_v20211004@dnn@cv@@@4@AEBU54@@Z;struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> cv::dnn::dnn4_v20211004::Layer::tryAttach(struct cv::Ptr<class cv::dnn::dnn4_v20211004::BackendNode> const &)
?tryFuse@Layer@dnn4_v20211004@dnn@cv@@UEAA_NAEAU?$Ptr@VLayer@dnn4_v20211004@dnn@cv@@@4@@Z;bool cv::dnn::dnn4_v20211004::Layer::tryFuse(struct cv::Ptr<class cv::dnn::dnn4_v20211004::Layer> &)
?tryQuantize@Layer@dnn4_v20211004@dnn@cv@@UEAA_NAEBV?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@AEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@6@AEAVLayerParams@234@@Z;bool cv::dnn::dnn4_v20211004::Layer::tryQuantize(class std::vector<class std::vector<float,class std::allocator<float> >,class std::allocator<class std::vector<float,class std::allocator<float> > > > const &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,class cv::dnn::dnn4_v20211004::LayerParams &)
?try_pull@GStreamingCompiled@cv@@QEAA_N$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@std@@@Z;bool cv::GStreamingCompiled::try_pull(class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&)
?try_pull@Priv@GStreamingCompiled@cv@@QEAA_N$$QEAV?$vector@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@V?$allocator@V?$variant@PEAVUMat@cv@@PEAVMat@2@PEAVRMat@2@PEAV?$Scalar_@N@2@PEAVMediaFrame@2@VVectorRef@detail@2@VOpaqueRef@82@@util@cv@@@std@@@std@@@Z;bool cv::GStreamingCompiled::Priv::try_pull(class std::vector<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef>,class std::allocator<class cv::util::variant<class cv::UMat *,class cv::Mat *,class cv::RMat *,class cv::Scalar_<double> *,class cv::MediaFrame *,class cv::detail::VectorRef,class cv::detail::OpaqueRef> > > &&)
?type@Buffer@ogl@cv@@QEBAHXZ;int cv::ogl::Buffer::type(void)
?type@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::type(void)
?type@FileNode@cv@@QEBAHXZ;int cv::FileNode::type(void)
?type@GpuMat@cuda@cv@@QEBAHXZ;int cv::cuda::GpuMat::type(void)
?type@GpuMatND@cuda@cv@@QEBAHXZ;int cv::cuda::GpuMatND::type(void)
?type@HostMem@cuda@cv@@QEBAHXZ;int cv::cuda::HostMem::type(void)
?type@Mat@cv@@QEBAHXZ;int cv::Mat::type(void)
?type@MatExpr@cv@@QEBAHXZ;int cv::MatExpr::type(void)
?type@MatOp@cv@@UEBAHAEBVMatExpr@2@@Z;int cv::MatOp::type(class cv::MatExpr const &)
?type@SparseMat@cv@@QEBAHXZ;int cv::SparseMat::type(void)
?type@UMat@cv@@QEBAHXZ;int cv::UMat::type(void)
?type@View@RMat@cv@@QEBAHXZ;int cv::RMat::View::type(void)
?type@_InputArray@cv@@QEBAHH@Z;int cv::_InputArray::type(int)
?typeToStr@ocl@cv@@YAPEBDH@Z;char const * cv::ocl::typeToStr(int)
?typeToString@cv@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const cv::typeToString(int)
?typeToString_@detail@cv@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const cv::detail::typeToString_(int)
?unbind@Buffer@ogl@cv@@SAXW4Target@123@@Z;void cv::ogl::Buffer::unbind(enum cv::ogl::Buffer::Target)
?undistort@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@000@Z;void cv::undistort(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?undistortImage@fisheye@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@000AEBV?$Size_@H@2@@Z;void cv::fisheye::undistortImage(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::Size_<int> const &)
?undistortPoints@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0000@Z;void cv::undistortPoints(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?undistortPoints@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0000VTermCriteria@1@@Z;void cv::undistortPoints(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::TermCriteria)
?undistortPoints@fisheye@cv@@YAXAEBV_InputArray@2@AEBV_OutputArray@2@0000@Z;void cv::fisheye::undistortPoints(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?unifiedAddressing@DeviceInfo@cuda@cv@@QEBA_NXZ;bool cv::cuda::DeviceInfo::unifiedAddressing(void)
?uniform@RNG@cv@@QEAAHHH@Z;int cv::RNG::uniform(int,int)
?uniform@RNG@cv@@QEAAMMM@Z;float cv::RNG::uniform(float,float)
?uniform@RNG@cv@@QEAANNN@Z;double cv::RNG::uniform(double,double)
?uniform@RNG_MT19937@cv@@QEAAHHH@Z;int cv::RNG_MT19937::uniform(int,int)
?uniform@RNG_MT19937@cv@@QEAAMMM@Z;float cv::RNG_MT19937::uniform(float,float)
?uniform@RNG_MT19937@cv@@QEAANNN@Z;double cv::RNG_MT19937::uniform(double,double)
?unloadProg@Context@ocl@cv@@QEAAXAEAVProgram@23@@Z;void cv::ocl::Context::unloadProg(class cv::ocl::Program &)
?unlock@FileLock@fs@utils@cv@@QEAAXXZ;void cv::utils::fs::FileLock::unlock(void)
?unlock@UMatData@cv@@QEAAXXZ;void cv::UMatData::unlock(void)
?unlock_shared@FileLock@fs@utils@cv@@QEAAXXZ;void cv::utils::fs::FileLock::unlock_shared(void)
?unmap@MatAllocator@cv@@UEBAXPEAUUMatData@2@@Z;void cv::MatAllocator::unmap(struct cv::UMatData *)
?unmapDevice@Buffer@ogl@cv@@QEAAXAEAVStream@cuda@3@@Z;void cv::ogl::Buffer::unmapDevice(class cv::cuda::Stream &)
?unmapDevice@Buffer@ogl@cv@@QEAAXXZ;void cv::ogl::Buffer::unmapDevice(void)
?unmapGLBuffer@ogl@cv@@YAXAEAVUMat@2@@Z;void cv::ogl::unmapGLBuffer(class cv::UMat &)
?unmapHost@Buffer@ogl@cv@@QEAAXXZ;void cv::ogl::Buffer::unmapHost(void)
?unpackKernel@Priv@GBackend@gapi@cv@@UEAAXAEAVGraph@ade@@AEBV?$Handle@VNode@ade@@@6@AEBUGKernelImpl@4@@Z;void cv::gapi::GBackend::Priv::unpackKernel(class ade::Graph &,class ade::Handle<class ade::Node> const &,struct cv::GKernelImpl const &)
?unregisterLayer@LayerFactory@dnn4_v20211004@dnn@cv@@SAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::dnn::dnn4_v20211004::LayerFactory::unregisterLayer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?unregisterPageLocked@cuda@cv@@YAXAEAVMat@2@@Z;void cv::cuda::unregisterPageLocked(class cv::Mat &)
?unrollExpr@gimpl@cv@@YA?AUUnrolled@12@AEBV?$vector@V?$variant@VGMat@cv@@VGMatP@2@VGFrame@2@VGScalar@2@VGArrayU@detail@2@VGOpaqueU@72@@util@cv@@V?$allocator@V?$variant@VGMat@cv@@VGMatP@2@VGFrame@2@VGScalar@2@VGArrayU@detail@2@VGOpaqueU@72@@util@cv@@@std@@@std@@0@Z;struct cv::gimpl::Unrolled cv::gimpl::unrollExpr(class std::vector<class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU>,class std::allocator<class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU> > > const &,class std::vector<class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU>,class std::allocator<class cv::util::variant<class cv::GMat,class cv::GMatP,class cv::GFrame,class cv::GScalar,class cv::detail::GArrayU,class cv::detail::GOpaqueU> > > const &)
?unsetAttached@Layer@dnn4_v20211004@dnn@cv@@UEAAXXZ;void cv::dnn::dnn4_v20211004::Layer::unsetAttached(void)
?update@ClfMilBoost@tracking@detail@cv@@QEAAXAEBVMat@4@0@Z;void cv::detail::tracking::ClfMilBoost::update(class cv::Mat const &,class cv::Mat const &)
?update@CvLevMarq@@QEAA_NAEAPEBUCvMat@@AEAPEAU2@1@Z;bool CvLevMarq::update(struct CvMat const * &,struct CvMat * &,struct CvMat * &)
?update@TrackerStateEstimator@tracking@detail@cv@@QEAAXAEAV?$vector@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@@2@@std@@@Z;void cv::detail::tracking::TrackerStateEstimator::update(class std::vector<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > >,class std::allocator<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > > > &)
?updateAlt@CvLevMarq@@QEAA_NAEAPEBUCvMat@@AEAPEAU2@1AEAPEAN@Z;bool CvLevMarq::updateAlt(struct CvMat const * &,struct CvMat * &,struct CvMat * &,double * &)
?updateContinuityFlag@GpuMat@cuda@cv@@QEAAXXZ;void cv::cuda::GpuMat::updateContinuityFlag(void)
?updateContinuityFlag@Mat@cv@@QEAAXXZ;void cv::Mat::updateContinuityFlag(void)
?updateContinuityFlag@UMat@cv@@QEAAXXZ;void cv::UMat::updateContinuityFlag(void)
?updateImpl@TrackerStateEstimatorMILBoosting@tracking@detail@cv@@MEAAXAEAV?$vector@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@V?$allocator@U?$pair@U?$Ptr@VTrackerTargetState@tracking@detail@cv@@@cv@@M@std@@@2@@std@@@2@@std@@@Z;void cv::detail::tracking::TrackerStateEstimatorMILBoosting::updateImpl(class std::vector<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > >,class std::allocator<class std::vector<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float>,class std::allocator<struct std::pair<struct cv::Ptr<class cv::detail::tracking::TrackerTargetState>,float> > > > > &)
?updateLabelsUsingSeam@DpSeamFinder@detail@cv@@AEAAXHHAEBV?$vector@V?$Point_@H@cv@@V?$allocator@V?$Point_@H@cv@@@std@@@std@@_N@Z;void cv::detail::DpSeamFinder::updateLabelsUsingSeam(int,int,class std::vector<class cv::Point_<int>,class std::allocator<class cv::Point_<int> > > const &,bool)
?updateMemoryShapes@Layer@dnn4_v20211004@dnn@cv@@UEAA_NAEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@Z;bool cv::dnn::dnn4_v20211004::Layer::updateMemoryShapes(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &)
?updateTrackedObjects@DetectionBasedTracker@cv@@IEAAXAEBV?$vector@V?$Rect_@H@cv@@V?$allocator@V?$Rect_@H@cv@@@std@@@std@@@Z;void cv::DetectionBasedTracker::updateTrackedObjects(class std::vector<class cv::Rect_<int>,class std::allocator<class cv::Rect_<int> > > const &)
?updateWindow@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::updateWindow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?upload@GpuMat@cuda@cv@@QEAAXAEBV_InputArray@3@@Z;void cv::cuda::GpuMat::upload(class cv::_InputArray const &)
?upload@GpuMat@cuda@cv@@QEAAXAEBV_InputArray@3@AEAVStream@23@@Z;void cv::cuda::GpuMat::upload(class cv::_InputArray const &,class cv::cuda::Stream &)
?upload@GpuMatND@cuda@cv@@QEAAXAEBV_InputArray@3@@Z;void cv::cuda::GpuMatND::upload(class cv::_InputArray const &)
?upload@GpuMatND@cuda@cv@@QEAAXAEBV_InputArray@3@AEAVStream@23@@Z;void cv::cuda::GpuMatND::upload(class cv::_InputArray const &,class cv::cuda::Stream &)
?upload@MatAllocator@cv@@UEBAXPEAUUMatData@2@PEBXHQEB_K222@Z;void cv::MatAllocator::upload(struct cv::UMatData *,void const *,int,unsigned __int64 const * const,unsigned __int64 const * const,unsigned __int64 const * const,unsigned __int64 const * const)
?useIPP@ipp@cv@@YA_NXZ;bool cv::ipp::useIPP(void)
?useIPP_NotExact@ipp@cv@@YA_NXZ;bool cv::ipp::useIPP_NotExact(void)
?useInstrumentation@instr@cv@@YA_NXZ;bool cv::instr::useInstrumentation(void)
?useOpenCL@OpenCLExecutionContext@ocl@cv@@QEBA_NXZ;bool cv::ocl::OpenCLExecutionContext::useOpenCL(void)
?useOpenCL@ocl@cv@@YA_NXZ;bool cv::ocl::useOpenCL(void)
?useOpenVX@cv@@YA_NXZ;bool cv::useOpenVX(void)
?useOptimized@cv@@YA_NXZ;bool cv::useOptimized(void)
?useSVM@Context@ocl@cv@@QEBA_NXZ;bool cv::ocl::Context::useSVM(void)
?valid@AsyncArray@cv@@QEBA_NXZ;bool cv::AsyncArray::valid(void)
?validateDisparity@cv@@YAXAEBV_InputOutputArray@1@AEBV_InputArray@1@HHH@Z;void cv::validateDisparity(class cv::_InputOutputArray const &,class cv::_InputArray const &,int,int,int)
?validateInputMeta@GCompiler@gimpl@cv@@AEAAXXZ;void cv::gimpl::GCompiler::validateInputMeta(void)
?validateOutProtoArgs@GCompiler@gimpl@cv@@AEAAXXZ;void cv::gimpl::GCompiler::validateOutProtoArgs(void)
?validate_input_arg@cv@@YAXAEBUGRunArg@1@@Z;void cv::validate_input_arg(struct cv::GRunArg const &)
?validate_input_args@cv@@YAXAEBV?$vector@UGRunArg@cv@@V?$allocator@UGRunArg@cv@@@std@@@std@@@Z;void cv::validate_input_args(class std::vector<struct cv::GRunArg,class std::allocator<struct cv::GRunArg> > const &)
?vconcat@cv@@YAXAEBV_InputArray@1@0AEBV_OutputArray@1@@Z;void cv::vconcat(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_OutputArray const &)
?vconcat@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@@Z;void cv::vconcat(class cv::_InputArray const &,class cv::_OutputArray const &)
?vconcat@cv@@YAXPEBVMat@1@_KAEBV_OutputArray@1@@Z;void cv::vconcat(class cv::Mat const *,unsigned __int64,class cv::_OutputArray const &)
?vecopTypeToStr@ocl@cv@@YAPEBDH@Z;char const * cv::ocl::vecopTypeToStr(int)
?vector_of_strings_deserialize@s11n@gapi@cv@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAUIIStream@123@@Z;class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > cv::gapi::s11n::vector_of_strings_deserialize(struct cv::gapi::s11n::IIStream &)
?vendor@PlatformInfo@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::PlatformInfo::vendor(void)
?vendorID@Device@ocl@cv@@QEBAHXZ;int cv::ocl::Device::vendorID(void)
?vendorName@Device@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Device::vendorName(void)
?version@Device@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::Device::version(void)
?version@PlatformInfo@ocl@cv@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cv::ocl::PlatformInfo::version(void)
?versionMajor@PlatformInfo@ocl@cv@@QEBAHXZ;int cv::ocl::PlatformInfo::versionMajor(void)
?versionMinor@PlatformInfo@ocl@cv@@QEBAHXZ;int cv::ocl::PlatformInfo::versionMinor(void)
?waitAny@VideoCapture@cv@@SA_NAEBV?$vector@VVideoCapture@cv@@V?$allocator@VVideoCapture@cv@@@std@@@std@@AEAV?$vector@HV?$allocator@H@std@@@4@_J@Z;bool cv::VideoCapture::waitAny(class std::vector<class cv::VideoCapture,class std::allocator<class cv::VideoCapture> > const &,class std::vector<int,class std::allocator<int> > &,__int64)
?waitEvent@Stream@cuda@cv@@QEAAXAEBVEvent@23@@Z;void cv::cuda::Stream::waitEvent(class cv::cuda::Event const &)
?waitForCompletion@Event@cuda@cv@@QEAAXXZ;void cv::cuda::Event::waitForCompletion(void)
?waitForCompletion@Stream@cuda@cv@@QEAAXXZ;void cv::cuda::Stream::waitForCompletion(void)
?waitKey@cv@@YAHH@Z;int cv::waitKey(int)
?waitKeyEx@cv@@YAHH@Z;int cv::waitKeyEx(int)
?wait_for@AsyncArray@cv@@QEBA_NN@Z;bool cv::AsyncArray::wait_for(double)
?wait_for@AsyncArray@cv@@QEBA_N_J@Z;bool cv::AsyncArray::wait_for(__int64)
?warp@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@AffineWarper@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::AffineWarper::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@CylindricalWarper@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::CylindricalWarper::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@CylindricalWarperGpu@detail@cv@@QEAA?AV?$Point_@H@3@AEBVGpuMat@cuda@3@AEBV_InputArray@3@1HHAEAV563@@Z;class cv::Point_<int> cv::detail::CylindricalWarperGpu::warp(class cv::cuda::GpuMat const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::cuda::GpuMat &)
?warp@CylindricalWarperGpu@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::CylindricalWarperGpu::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@PlaneWarper@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@000HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::PlaneWarper::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@PlaneWarper@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::PlaneWarper::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@PlaneWarperGpu@detail@cv@@QEAA?AV?$Point_@H@3@AEBVGpuMat@cuda@3@AEBV_InputArray@3@11HHAEAV563@@Z;class cv::Point_<int> cv::detail::PlaneWarperGpu::warp(class cv::cuda::GpuMat const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::cuda::GpuMat &)
?warp@PlaneWarperGpu@detail@cv@@QEAA?AV?$Point_@H@3@AEBVGpuMat@cuda@3@AEBV_InputArray@3@1HHAEAV563@@Z;class cv::Point_<int> cv::detail::PlaneWarperGpu::warp(class cv::cuda::GpuMat const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::cuda::GpuMat &)
?warp@PlaneWarperGpu@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@000HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::PlaneWarperGpu::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@PlaneWarperGpu@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::PlaneWarperGpu::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@PyRotationWarper@cv@@QEAA?AV?$Point_@H@2@AEBV_InputArray@2@00HHAEBV_OutputArray@2@@Z;class cv::Point_<int> cv::PyRotationWarper::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@SphericalWarper@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::SphericalWarper::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warp@SphericalWarperGpu@detail@cv@@QEAA?AV?$Point_@H@3@AEBVGpuMat@cuda@3@AEBV_InputArray@3@1HHAEAV563@@Z;class cv::Point_<int> cv::detail::SphericalWarperGpu::warp(class cv::cuda::GpuMat const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::cuda::GpuMat &)
?warp@SphericalWarperGpu@detail@cv@@UEAA?AV?$Point_@H@3@AEBV_InputArray@3@00HHAEBV_OutputArray@3@@Z;class cv::Point_<int> cv::detail::SphericalWarperGpu::warp(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::_OutputArray const &)
?warpAffine@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0V?$Size_@H@1@HHAEBV?$Scalar_@N@1@@Z;void cv::warpAffine(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::Size_<int>,int,int,class cv::Scalar_<double> const &)
?warpAffine@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVMat@2@AEBV?$Size_@H@2@HHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::warpAffine(class cv::GMat const &,class cv::Mat const &,class cv::Size_<int> const &,int,int,class cv::Scalar_<double> const &)
?warpAffine@hal@cv@@YAXHPEBE_KHHPEAE1HHQEBNHH3@Z;void cv::hal::warpAffine(int,unsigned char const *,unsigned __int64,int,int,unsigned char *,unsigned __int64,int,int,double const * const,int,int,double const * const)
?warpBackward@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAAXAEBV_InputArray@3@00HHV?$Size_@H@3@AEBV_OutputArray@3@@Z;void cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpBackward@PyRotationWarper@cv@@QEAAXAEBV_InputArray@2@00HHV?$Size_@H@2@AEBV_OutputArray@2@@Z;void cv::PyRotationWarper::warpBackward(class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &,int,int,class cv::Size_<int>,class cv::_OutputArray const &)
?warpPerspective@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@0V?$Size_@H@1@HHAEBV?$Scalar_@N@1@@Z;void cv::warpPerspective(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::_InputArray const &,class cv::Size_<int>,int,int,class cv::Scalar_<double> const &)
?warpPerspective@gapi@cv@@YA?AVGMat@2@AEBV32@AEBVMat@2@AEBV?$Size_@H@2@HHAEBV?$Scalar_@N@2@@Z;class cv::GMat cv::gapi::warpPerspective(class cv::GMat const &,class cv::Mat const &,class cv::Size_<int> const &,int,int,class cv::Scalar_<double> const &)
?warpPerspective@hal@cv@@YAXHPEBE_KHHPEAE1HHQEBNHH3@Z;void cv::hal::warpPerspective(int,unsigned char const *,unsigned __int64,int,int,unsigned char *,unsigned __int64,int,int,double const * const,int,int,double const * const)
?warpPoint@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@AffineWarper@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::AffineWarper::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@PlaneWarper@detail@cv@@QEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@11@Z;class cv::Point_<float> cv::detail::PlaneWarper::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@PlaneWarper@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::PlaneWarper::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPoint@PyRotationWarper@cv@@QEAA?AV?$Point_@M@2@AEBV32@AEBV_InputArray@2@1@Z;class cv::Point_<float> cv::PyRotationWarper::warpPoint(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@AffineWarper@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::AffineWarper::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@PlaneWarper@detail@cv@@QEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@11@Z;class cv::Point_<float> cv::detail::PlaneWarper::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@PlaneWarper@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::PlaneWarper::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@PyRotationWarper@cv@@QEAA?AV?$Point_@M@2@AEBV32@AEBV_InputArray@2@1@Z;class cv::Point_<float> cv::PyRotationWarper::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPointBackward@RotationWarper@detail@cv@@UEAA?AV?$Point_@M@3@AEBV43@AEBV_InputArray@3@1@Z;class cv::Point_<float> cv::detail::RotationWarper::warpPointBackward(class cv::Point_<float> const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpPolar@cv@@YAXAEBV_InputArray@1@AEBV_OutputArray@1@V?$Size_@H@1@V?$Point_@M@1@NH@Z;void cv::warpPolar(class cv::_InputArray const &,class cv::_OutputArray const &,class cv::Size_<int>,class cv::Point_<float>,double,int)
?warpRoi@?$RotationWarperBase@UCompressedRectilinearPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearPortraitProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CompressedRectilinearProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UCylindricalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CylindricalPortraitProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UCylindricalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::CylindricalProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UFisheyeProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::FisheyeProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::MercatorProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UPaniniPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PaniniPortraitProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UPaniniProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PaniniProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UPlanePortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PlanePortraitProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UPlaneProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::PlaneProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@USphericalPortraitProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::SphericalPortraitProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@USphericalProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::SphericalProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UStereographicProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::StereographicProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@?$RotationWarperBase@UTransverseMercatorProjector@detail@cv@@@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::RotationWarperBase<struct cv::detail::TransverseMercatorProjector>::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@AffineWarper@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::AffineWarper::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@PlaneWarper@detail@cv@@QEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@11@Z;class cv::Rect_<int> cv::detail::PlaneWarper::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@PlaneWarper@detail@cv@@UEAA?AV?$Rect_@H@3@V?$Size_@H@3@AEBV_InputArray@3@1@Z;class cv::Rect_<int> cv::detail::PlaneWarper::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpRoi@PyRotationWarper@cv@@QEAA?AV?$Rect_@H@2@V?$Size_@H@2@AEBV_InputArray@2@1@Z;class cv::Rect_<int> cv::PyRotationWarper::warpRoi(class cv::Size_<int>,class cv::_InputArray const &,class cv::_InputArray const &)
?warpSize@DeviceInfo@cuda@cv@@QEBAHXZ;int cv::cuda::DeviceInfo::warpSize(void)
?warper@Stitcher@cv@@QEAA?AU?$Ptr@VWarperCreator@cv@@@2@XZ;struct cv::Ptr<class cv::WarperCreator> cv::Stitcher::warper(void)
?warper@Stitcher@cv@@QEBA?BU?$Ptr@VWarperCreator@cv@@@2@XZ;struct cv::Ptr<class cv::WarperCreator> const cv::Stitcher::warper(void)
?watershed@cv@@YAXAEBV_InputArray@1@AEBV_InputOutputArray@1@@Z;void cv::watershed(class cv::_InputArray const &,class cv::_InputOutputArray const &)
?waveCorrect@detail@cv@@YAXAEAV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@W4WaveCorrectKind@12@@Z;void cv::detail::waveCorrect(class std::vector<class cv::Mat,class std::allocator<class cv::Mat> > &,enum cv::detail::WaveCorrectKind)
?waveCorrectKind@Stitcher@cv@@QEBA?AW4WaveCorrectKind@detail@2@XZ;enum cv::detail::WaveCorrectKind cv::Stitcher::waveCorrectKind(void)
?waveCorrection@Stitcher@cv@@QEBA_NXZ;bool cv::Stitcher::waveCorrection(void)
?what@DataProviderSystemErrorException@onevpl@wip@gapi@cv@@UEBAPEBDXZ;char const * cv::gapi::wip::onevpl::DataProviderSystemErrorException::what(void)
?what@Exception@cv@@UEBAPEBDXZ;char const * cv::Exception::what(void)
?what@GAsyncCanceled@wip@gapi@cv@@UEBAPEBDXZ;char const * cv::gapi::wip::GAsyncCanceled::what(void)
?withDepth@GMatDesc@cv@@QEBA?AU12@H@Z;struct cv::GMatDesc cv::GMatDesc::withDepth(int)
?withSize@GMatDesc@cv@@QEBA?AU12@V?$Size_@H@2@@Z;struct cv::GMatDesc cv::GMatDesc::withSize(class cv::Size_<int>)
?withSizeDelta@GMatDesc@cv@@QEBA?AU12@HH@Z;struct cv::GMatDesc cv::GMatDesc::withSizeDelta(int,int)
?withSizeDelta@GMatDesc@cv@@QEBA?AU12@V?$Size_@H@2@@Z;struct cv::GMatDesc cv::GMatDesc::withSizeDelta(class cv::Size_<int>)
?withType@GMatDesc@cv@@QEBA?AU12@HH@Z;struct cv::GMatDesc cv::GMatDesc::withType(int,int)
?workGroupSize@Kernel@ocl@cv@@QEBA_KXZ;unsigned __int64 cv::ocl::Kernel::workGroupSize(void)
?workScale@Stitcher@cv@@QEBANXZ;double cv::Stitcher::workScale(void)
?wrapperEMD@cv@@YAMAEBV_InputArray@1@0H0U?$Ptr@M@1@AEBV_OutputArray@1@@Z;float cv::wrapperEMD(class cv::_InputArray const &,class cv::_InputArray const &,int,class cv::_InputArray const &,struct cv::Ptr<float>,class cv::_OutputArray const &)
?write@Algorithm@cv@@QEBAXAEBU?$Ptr@VFileStorage@cv@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::Algorithm::write(struct cv::Ptr<class cv::FileStorage> const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@Algorithm@cv@@UEBAXAEAVFileStorage@2@@Z;void cv::Algorithm::write(class cv::FileStorage &)
?write@DescriptorMatcher@cv@@QEBAXAEBU?$Ptr@VFileStorage@cv@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::DescriptorMatcher::write(struct cv::Ptr<class cv::FileStorage> const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@DescriptorMatcher@cv@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::DescriptorMatcher::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@DescriptorMatcher@cv@@UEBAXAEAVFileStorage@2@@Z;void cv::DescriptorMatcher::write(class cv::FileStorage &)
?write@EMImpl@ml@cv@@UEBAXAEAVFileStorage@3@@Z;void cv::ml::EMImpl::write(class cv::FileStorage &)
?write@Feature2D@cv@@QEBAXAEBU?$Ptr@VFileStorage@cv@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::Feature2D::write(struct cv::Ptr<class cv::FileStorage> const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@Feature2D@cv@@QEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::Feature2D::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@Feature2D@cv@@UEBAXAEAVFileStorage@2@@Z;void cv::Feature2D::write(class cv::FileStorage &)
?write@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void cv::FileStorage::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z;void cv::FileStorage::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
?write@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVMat@2@@Z;void cv::FileStorage::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Mat const &)
?write@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;void cv::FileStorage::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?write@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z;void cv::FileStorage::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double)
?write@FlannBasedMatcher@cv@@UEBAXAEAVFileStorage@2@@Z;void cv::FlannBasedMatcher::write(class cv::FileStorage &)
?write@HOGDescriptor@cv@@UEBAXAEAVFileStorage@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::HOGDescriptor::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@PCA@cv@@QEBAXAEAVFileStorage@2@@Z;void cv::PCA::write(class cv::FileStorage &)
?write@Params@SimpleBlobDetector@cv@@QEBAXAEAVFileStorage@3@@Z;void cv::SimpleBlobDetector::Params::write(class cv::FileStorage &)
?write@Program@ocl@cv@@QEBA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool cv::ocl::Program::write(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
?write@SimpleBlobDetectorImpl@cv@@UEBAXAEAVFileStorage@2@@Z;void cv::SimpleBlobDetectorImpl::write(class cv::FileStorage &)
?write@VideoWriter@cv@@UEAAXAEBV_InputArray@2@@Z;void cv::VideoWriter::write(class cv::_InputArray const &)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@VDMatch@cv@@V?$allocator@VDMatch@cv@@@std@@@4@@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class cv::DMatch,class std::allocator<class cv::DMatch> > const &)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@VKeyPoint@cv@@V?$allocator@VKeyPoint@cv@@@std@@@4@@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::vector<class cv::KeyPoint,class std::allocator<class cv::KeyPoint> > const &)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVMat@1@@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::Mat const &)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVSparseMat@1@@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::SparseMat const &)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,float)
?write@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z;void cv::write(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double)
?writeComment@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z;void cv::FileStorage::writeComment(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)
?writeDone@Priv@Buffer@fluid@gapi@cv@@QEAAXXZ;void cv::gapi::fluid::Buffer::Priv::writeDone(void)
?writeEnd@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::writeEnd(void)
?writeFormat@Algorithm@cv@@IEBAXAEAVFileStorage@2@@Z;void cv::Algorithm::writeFormat(class cv::FileStorage &)
?writeIndex@AVIWriteContainer@cv@@QEAAXHW4StreamType@2@@Z;void cv::AVIWriteContainer::writeIndex(int,enum cv::StreamType)
?writeLogMessage@internal@logging@utils@cv@@YAXW4LogLevel@234@PEBD@Z;void cv::utils::logging::internal::writeLogMessage(enum cv::utils::logging::LogLevel,char const *)
?writeLogMessageEx@internal@logging@utils@cv@@YAXW4LogLevel@234@PEBD1H11@Z;void cv::utils::logging::internal::writeLogMessageEx(enum cv::utils::logging::LogLevel,char const *,char const *,int,char const *,char const *)
?writeOpticalFlow@cv@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV_InputArray@1@@Z;bool cv::writeOpticalFlow(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class cv::_InputArray const &)
?writeRaw@FileStorage@cv@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBX_K@Z;void cv::FileStorage::writeRaw(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,void const *,unsigned __int64)
?writeScalar@cv@@YAXAEAVFileStorage@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void cv::writeScalar(class cv::FileStorage &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?writeScalar@cv@@YAXAEAVFileStorage@1@H@Z;void cv::writeScalar(class cv::FileStorage &,int)
?writeScalar@cv@@YAXAEAVFileStorage@1@M@Z;void cv::writeScalar(class cv::FileStorage &,float)
?writeScalar@cv@@YAXAEAVFileStorage@1@N@Z;void cv::writeScalar(class cv::FileStorage &,double)
?writeStart@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::writeStart(void)
?writeStreamHeader@AVIWriteContainer@cv@@QEAAXW4Codecs@2@@Z;void cv::AVIWriteContainer::writeStreamHeader(enum cv::Codecs)
?writeTextGraph@dnn4_v20211004@dnn@cv@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void cv::dnn::dnn4_v20211004::writeTextGraph(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
?write_params@EMImpl@ml@cv@@QEBAXAEAVFileStorage@3@@Z;void cv::ml::EMImpl::write_params(class cv::FileStorage &)
?writer_lpi@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::writer_lpi(void)
?xor8u@hal@cv@@YAXPEBE_K01PEAE1HHPEAX@Z;void cv::hal::xor8u(unsigned char const *,unsigned __int64,unsigned char const *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
?y@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::y(void)
?y@Priv@Buffer@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::Buffer::Priv::y(void)
?y@View@fluid@gapi@cv@@QEBAHXZ;int cv::gapi::fluid::View::y(void)
?yield@GCall@cv@@QEAA?AVGMat@2@H@Z;class cv::GMat cv::GCall::yield(int)
?yieldArray@GCall@cv@@IEAA?AVGArrayU@detail@2@H@Z;class cv::detail::GArrayU cv::GCall::yieldArray(int)
?yieldFrame@GCall@cv@@QEAA?AVGFrame@2@H@Z;class cv::GFrame cv::GCall::yieldFrame(int)
?yieldOpaque@GCall@cv@@IEAA?AVGOpaqueU@detail@2@H@Z;class cv::detail::GOpaqueU cv::GCall::yieldOpaque(int)
?yieldP@GCall@cv@@QEAA?AVGMatP@2@H@Z;class cv::GMatP cv::GCall::yieldP(int)
?yieldScalar@GCall@cv@@QEAA?AVGScalar@2@H@Z;class cv::GScalar cv::GCall::yieldScalar(int)
?zero@softdouble@cv@@SA?AU12@XZ;struct cv::softdouble cv::softdouble::zero(void)
?zero@softfloat@cv@@SA?AU12@XZ;struct cv::softfloat cv::softfloat::zero(void)
?zeroFill@BufferArea@utils@cv@@QEAAXXZ;void cv::utils::BufferArea::zeroFill(void)
?zeroFill_@BufferArea@utils@cv@@AEAAXPEAPEAX@Z;void cv::utils::BufferArea::zeroFill_(void * *)
?zeros@Mat@cv@@SA?AVMatExpr@2@HHH@Z;class cv::MatExpr cv::Mat::zeros(int,int,int)
?zeros@Mat@cv@@SA?AVMatExpr@2@HPEBHH@Z;class cv::MatExpr cv::Mat::zeros(int,int const *,int)
?zeros@Mat@cv@@SA?AVMatExpr@2@V?$Size_@H@2@H@Z;class cv::MatExpr cv::Mat::zeros(class cv::Size_<int>,int)
?zeros@UMat@cv@@SA?AV12@HHH@Z;class cv::UMat cv::UMat::zeros(int,int,int)
?zeros@UMat@cv@@SA?AV12@HHHW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::zeros(int,int,int,enum cv::UMatUsageFlags)
?zeros@UMat@cv@@SA?AV12@HPEBHH@Z;class cv::UMat cv::UMat::zeros(int,int const *,int)
?zeros@UMat@cv@@SA?AV12@HPEBHHW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::zeros(int,int const *,int,enum cv::UMatUsageFlags)
?zeros@UMat@cv@@SA?AV12@V?$Size_@H@2@H@Z;class cv::UMat cv::UMat::zeros(class cv::Size_<int>,int)
?zeros@UMat@cv@@SA?AV12@V?$Size_@H@2@HW4UMatUsageFlags@2@@Z;class cv::UMat cv::UMat::zeros(class cv::Size_<int>,int,enum cv::UMatUsageFlags)
cv2DRotationMatrix;cv2DRotationMatrix
cvAbsDiff;cvAbsDiff
cvAbsDiffS;cvAbsDiffS
cvAcc;cvAcc
cvAdaptiveThreshold;cvAdaptiveThreshold
cvAdd;cvAdd
cvAddS;cvAddS
cvAddWeighted;cvAddWeighted
cvAlloc;cvAlloc
cvAnd;cvAnd
cvAndS;cvAndS
cvApproxChains;cvApproxChains
cvApproxPoly;cvApproxPoly
cvArcLength;cvArcLength
cvAvg;cvAvg
cvAvgSdv;cvAvgSdv
cvBackProjectPCA;cvBackProjectPCA
cvBoundingRect;cvBoundingRect
cvBoxPoints;cvBoxPoints
cvCalcArrBackProject;cvCalcArrBackProject
cvCalcArrBackProjectPatch;cvCalcArrBackProjectPatch
cvCalcArrHist;cvCalcArrHist
cvCalcBayesianProb;cvCalcBayesianProb
cvCalcCovarMatrix;cvCalcCovarMatrix
cvCalcEMD2;cvCalcEMD2
cvCalcPCA;cvCalcPCA
cvCalcProbDensity;cvCalcProbDensity
cvCanny;cvCanny
cvCartToPolar;cvCartToPolar
cvCbrt;cvCbrt
cvChangeSeqBlock;cvChangeSeqBlock
cvCheckArr;cvCheckArr
cvCheckContourConvexity;cvCheckContourConvexity
cvCheckHardwareSupport;cvCheckHardwareSupport
cvCheckTermCriteria;cvCheckTermCriteria
cvCircle;cvCircle
cvClearGraph;cvClearGraph
cvClearHist;cvClearHist
cvClearMemStorage;cvClearMemStorage
cvClearND;cvClearND
cvClearSeq;cvClearSeq
cvClearSet;cvClearSet
cvClipLine;cvClipLine
cvClone;cvClone
cvCloneGraph;cvCloneGraph
cvCloneImage;cvCloneImage
cvCloneMat;cvCloneMat
cvCloneMatND;cvCloneMatND
cvCloneSparseMat;cvCloneSparseMat
cvCmp;cvCmp
cvCmpS;cvCmpS
cvColorToScalar;cvColorToScalar
cvCompareHist;cvCompareHist
cvCompleteSymm;cvCompleteSymm
cvContourArea;cvContourArea
cvConvertMaps;cvConvertMaps
cvConvertScale;cvConvertScale
cvConvertScaleAbs;cvConvertScaleAbs
cvConvexHull2;cvConvexHull2
cvConvexityDefects;cvConvexityDefects
cvCopy;cvCopy
cvCopyHist;cvCopyHist
cvCopyMakeBorder;cvCopyMakeBorder
cvCornerEigenValsAndVecs;cvCornerEigenValsAndVecs
cvCornerHarris;cvCornerHarris
cvCornerMinEigenVal;cvCornerMinEigenVal
cvCountNonZero;cvCountNonZero
cvCreateCameraCapture;cvCreateCameraCapture
cvCreateChildMemStorage;cvCreateChildMemStorage
cvCreateData;cvCreateData
cvCreateFileCapture;cvCreateFileCapture
cvCreateFileCaptureWithPreference;cvCreateFileCaptureWithPreference
cvCreateGraph;cvCreateGraph
cvCreateGraphScanner;cvCreateGraphScanner
cvCreateHist;cvCreateHist
cvCreateImage;cvCreateImage
cvCreateImageHeader;cvCreateImageHeader
cvCreateMat;cvCreateMat
cvCreateMatHeader;cvCreateMatHeader
cvCreateMatND;cvCreateMatND
cvCreateMatNDHeader;cvCreateMatNDHeader
cvCreateMemStorage;cvCreateMemStorage
cvCreatePyramid;cvCreatePyramid
cvCreateSeq;cvCreateSeq
cvCreateSeqBlock;cvCreateSeqBlock
cvCreateSet;cvCreateSet
cvCreateSparseMat;cvCreateSparseMat
cvCreateStructuringElementEx;cvCreateStructuringElementEx
cvCreateTrackbar;cvCreateTrackbar
cvCreateTrackbar2;cvCreateTrackbar2
cvCreateVideoWriter;cvCreateVideoWriter
cvCrossProduct;cvCrossProduct
cvCvtColor;cvCvtColor
cvCvtSeqToArray;cvCvtSeqToArray
cvDCT;cvDCT
cvDFT;cvDFT
cvDestroyAllWindows;cvDestroyAllWindows
cvDestroyWindow;cvDestroyWindow
cvDet;cvDet
cvDilate;cvDilate
cvDistTransform;cvDistTransform
cvDiv;cvDiv
cvDotProduct;cvDotProduct
cvDrawContours;cvDrawContours
cvEigenVV;cvEigenVV
cvEllipse;cvEllipse
cvEllipse2Poly;cvEllipse2Poly
cvEndFindContours;cvEndFindContours
cvEndWriteSeq;cvEndWriteSeq
cvEqualizeHist;cvEqualizeHist
cvErode;cvErode
cvError;cvError
cvErrorFromIppStatus;cvErrorFromIppStatus
cvErrorStr;cvErrorStr
cvExp;cvExp
cvFastArctan;cvFastArctan
cvFillConvexPoly;cvFillConvexPoly
cvFillPoly;cvFillPoly
cvFilter2D;cvFilter2D
cvFindContours;cvFindContours
cvFindCornerSubPix;cvFindCornerSubPix
cvFindGraphEdge;cvFindGraphEdge
cvFindGraphEdgeByPtr;cvFindGraphEdgeByPtr
cvFindNextContour;cvFindNextContour
cvFitEllipse2;cvFitEllipse2
cvFitLine;cvFitLine
cvFlip;cvFlip
cvFloodFill;cvFloodFill
cvFlushSeqWriter;cvFlushSeqWriter
cvFree_;cvFree_
cvGEMM;cvGEMM
cvGet1D;cvGet1D
cvGet2D;cvGet2D
cvGet3D;cvGet3D
cvGetAffineTransform;cvGetAffineTransform
cvGetCaptureDomain;cvGetCaptureDomain
cvGetCaptureProperty;cvGetCaptureProperty
cvGetCentralMoment;cvGetCentralMoment
cvGetCols;cvGetCols
cvGetDiag;cvGetDiag
cvGetDimSize;cvGetDimSize
cvGetDims;cvGetDims
cvGetElemType;cvGetElemType
cvGetErrInfo;cvGetErrInfo
cvGetErrMode;cvGetErrMode
cvGetErrStatus;cvGetErrStatus
cvGetHuMoments;cvGetHuMoments
cvGetImage;cvGetImage
cvGetImageCOI;cvGetImageCOI
cvGetImageROI;cvGetImageROI
cvGetMat;cvGetMat
cvGetMinMaxHistValue;cvGetMinMaxHistValue
cvGetND;cvGetND
cvGetNormalizedCentralMoment;cvGetNormalizedCentralMoment
cvGetNumThreads;cvGetNumThreads
cvGetOptimalDFTSize;cvGetOptimalDFTSize
cvGetPerspectiveTransform;cvGetPerspectiveTransform
cvGetQuadrangleSubPix;cvGetQuadrangleSubPix
cvGetRawData;cvGetRawData
cvGetReal1D;cvGetReal1D
cvGetReal2D;cvGetReal2D
cvGetReal3D;cvGetReal3D
cvGetRealND;cvGetRealND
cvGetRectSubPix;cvGetRectSubPix
cvGetRows;cvGetRows
cvGetSeqElem;cvGetSeqElem
cvGetSeqReaderPos;cvGetSeqReaderPos
cvGetSize;cvGetSize
cvGetSpatialMoment;cvGetSpatialMoment
cvGetSubRect;cvGetSubRect
cvGetTextSize;cvGetTextSize
cvGetThreadNum;cvGetThreadNum
cvGetTickCount;cvGetTickCount
cvGetTickFrequency;cvGetTickFrequency
cvGetTrackbarPos;cvGetTrackbarPos
cvGetWindowHandle;cvGetWindowHandle
cvGetWindowImageRect;cvGetWindowImageRect
cvGetWindowName;cvGetWindowName
cvGetWindowProperty;cvGetWindowProperty
cvGoodFeaturesToTrack;cvGoodFeaturesToTrack
cvGrabFrame;cvGrabFrame
cvGraphAddEdge;cvGraphAddEdge
cvGraphAddEdgeByPtr;cvGraphAddEdgeByPtr
cvGraphAddVtx;cvGraphAddVtx
cvGraphRemoveEdge;cvGraphRemoveEdge
cvGraphRemoveEdgeByPtr;cvGraphRemoveEdgeByPtr
cvGraphRemoveVtx;cvGraphRemoveVtx
cvGraphRemoveVtxByPtr;cvGraphRemoveVtxByPtr
cvGraphVtxDegree;cvGraphVtxDegree
cvGraphVtxDegreeByPtr;cvGraphVtxDegreeByPtr
cvGuiBoxReport;cvGuiBoxReport
cvHoughCircles;cvHoughCircles
cvHoughLines2;cvHoughLines2
cvInRange;cvInRange
cvInRangeS;cvInRangeS
cvInitFont;cvInitFont
cvInitImageHeader;cvInitImageHeader
cvInitLineIterator;cvInitLineIterator
cvInitMatHeader;cvInitMatHeader
cvInitMatNDHeader;cvInitMatNDHeader
cvInitNArrayIterator;cvInitNArrayIterator
cvInitSparseMatIterator;cvInitSparseMatIterator
cvInitSystem;cvInitSystem
cvInitTreeNodeIterator;cvInitTreeNodeIterator
cvInsertNodeIntoTree;cvInsertNodeIntoTree
cvIntegral;cvIntegral
cvInvert;cvInvert
cvKMeans2;cvKMeans2
cvLUT;cvLUT
cvLaplace;cvLaplace
cvLine;cvLine
cvLinearPolar;cvLinearPolar
cvLog;cvLog
cvLogPolar;cvLogPolar
cvMahalanobis;cvMahalanobis
cvMakeHistHeaderForArray;cvMakeHistHeaderForArray
cvMakeSeqHeaderForArray;cvMakeSeqHeaderForArray
cvMatchShapes;cvMatchShapes
cvMatchTemplate;cvMatchTemplate
cvMax;cvMax
cvMaxRect;cvMaxRect
cvMaxS;cvMaxS
cvMemStorageAlloc;cvMemStorageAlloc
cvMerge;cvMerge
cvMin;cvMin
cvMinAreaRect2;cvMinAreaRect2
cvMinEnclosingCircle;cvMinEnclosingCircle
cvMinMaxLoc;cvMinMaxLoc
cvMinS;cvMinS
cvMixChannels;cvMixChannels
cvMoments;cvMoments
cvMorphologyEx;cvMorphologyEx
cvMoveWindow;cvMoveWindow
cvMul;cvMul
cvMulSpectrums;cvMulSpectrums
cvMulTransposed;cvMulTransposed
cvMultiplyAcc;cvMultiplyAcc
cvNamedWindow;cvNamedWindow
cvNextGraphItem;cvNextGraphItem
cvNextNArraySlice;cvNextNArraySlice
cvNextTreeNode;cvNextTreeNode
cvNorm;cvNorm
cvNormalize;cvNormalize
cvNormalizeHist;cvNormalizeHist
cvNot;cvNot
cvNulDevReport;cvNulDevReport
cvOr;cvOr
cvOrS;cvOrS
cvPerspectiveTransform;cvPerspectiveTransform
cvPointPolygonTest;cvPointPolygonTest
cvPointSeqFromMat;cvPointSeqFromMat
cvPolarToCart;cvPolarToCart
cvPolyLine;cvPolyLine
cvPow;cvPow
cvPreCornerDetect;cvPreCornerDetect
cvPrevTreeNode;cvPrevTreeNode
cvProjectPCA;cvProjectPCA
cvPtr1D;cvPtr1D
cvPtr2D;cvPtr2D
cvPtr3D;cvPtr3D
cvPtrND;cvPtrND
cvPutText;cvPutText
cvPyrDown;cvPyrDown
cvPyrMeanShiftFiltering;cvPyrMeanShiftFiltering
cvPyrUp;cvPyrUp
cvQueryFrame;cvQueryFrame
cvRandArr;cvRandArr
cvRandShuffle;cvRandShuffle
cvRange;cvRange
cvRawDataToScalar;cvRawDataToScalar
cvReadChainPoint;cvReadChainPoint
cvRectangle;cvRectangle
cvRectangleR;cvRectangleR
cvRedirectError;cvRedirectError
cvReduce;cvReduce
cvRelease;cvRelease
cvReleaseCapture;cvReleaseCapture
cvReleaseData;cvReleaseData
cvReleaseGraphScanner;cvReleaseGraphScanner
cvReleaseHist;cvReleaseHist
cvReleaseImage;cvReleaseImage
cvReleaseImageHeader;cvReleaseImageHeader
cvReleaseMat;cvReleaseMat
cvReleaseMemStorage;cvReleaseMemStorage
cvReleasePyramid;cvReleasePyramid
cvReleaseSparseMat;cvReleaseSparseMat
cvReleaseStructuringElement;cvReleaseStructuringElement
cvReleaseVideoWriter;cvReleaseVideoWriter
cvRemap;cvRemap
cvRemoveNodeFromTree;cvRemoveNodeFromTree
cvRepeat;cvRepeat
cvResetImageROI;cvResetImageROI
cvReshape;cvReshape
cvReshapeMatND;cvReshapeMatND
cvResize;cvResize
cvResizeWindow;cvResizeWindow
cvRestoreMemStoragePos;cvRestoreMemStoragePos
cvRetrieveFrame;cvRetrieveFrame
cvRunningAvg;cvRunningAvg
cvSVBkSb;cvSVBkSb
cvSVD;cvSVD
cvSampleLine;cvSampleLine
cvSaveMemStoragePos;cvSaveMemStoragePos
cvScalarToRawData;cvScalarToRawData
cvScaleAdd;cvScaleAdd
cvSeqElemIdx;cvSeqElemIdx
cvSeqInsert;cvSeqInsert
cvSeqInsertSlice;cvSeqInsertSlice
cvSeqInvert;cvSeqInvert
cvSeqPartition;cvSeqPartition
cvSeqPop;cvSeqPop
cvSeqPopFront;cvSeqPopFront
cvSeqPopMulti;cvSeqPopMulti
cvSeqPush;cvSeqPush
cvSeqPushFront;cvSeqPushFront
cvSeqPushMulti;cvSeqPushMulti
cvSeqRemove;cvSeqRemove
cvSeqRemoveSlice;cvSeqRemoveSlice
cvSeqSearch;cvSeqSearch
cvSeqSlice;cvSeqSlice
cvSeqSort;cvSeqSort
cvSet;cvSet
cvSet1D;cvSet1D
cvSet2D;cvSet2D
cvSet3D;cvSet3D
cvSetAdd;cvSetAdd
cvSetCaptureProperty;cvSetCaptureProperty
cvSetData;cvSetData
cvSetErrMode;cvSetErrMode
cvSetErrStatus;cvSetErrStatus
cvSetHistBinRanges;cvSetHistBinRanges
cvSetIPLAllocators;cvSetIPLAllocators
cvSetIdentity;cvSetIdentity
cvSetImageCOI;cvSetImageCOI
cvSetImageROI;cvSetImageROI
cvSetMouseCallback;cvSetMouseCallback
cvSetND;cvSetND
cvSetNumThreads;cvSetNumThreads
cvSetOpenGlContext;cvSetOpenGlContext
cvSetOpenGlDrawCallback;cvSetOpenGlDrawCallback
cvSetPostprocessFuncWin32_;cvSetPostprocessFuncWin32_
cvSetPreprocessFuncWin32_;cvSetPreprocessFuncWin32_
cvSetReal1D;cvSetReal1D
cvSetReal2D;cvSetReal2D
cvSetReal3D;cvSetReal3D
cvSetRealND;cvSetRealND
cvSetRemove;cvSetRemove
cvSetSeqBlockSize;cvSetSeqBlockSize
cvSetSeqReaderPos;cvSetSeqReaderPos
cvSetTrackbarMax;cvSetTrackbarMax
cvSetTrackbarMin;cvSetTrackbarMin
cvSetTrackbarPos;cvSetTrackbarPos
cvSetWindowProperty;cvSetWindowProperty
cvSetZero;cvSetZero
cvShowImage;cvShowImage
cvSliceLength;cvSliceLength
cvSmooth;cvSmooth
cvSobel;cvSobel
cvSolve;cvSolve
cvSolveCubic;cvSolveCubic
cvSolvePoly;cvSolvePoly
cvSort;cvSort
cvSplit;cvSplit
cvSquareAcc;cvSquareAcc
cvStartAppendToSeq;cvStartAppendToSeq
cvStartFindContours;cvStartFindContours
cvStartReadChainPoints;cvStartReadChainPoints
cvStartReadSeq;cvStartReadSeq
cvStartWindowThread;cvStartWindowThread
cvStartWriteSeq;cvStartWriteSeq
cvStdErrReport;cvStdErrReport
cvSub;cvSub
cvSubRS;cvSubRS
cvSubstituteContour;cvSubstituteContour
cvSum;cvSum
cvThreshHist;cvThreshHist
cvThreshold;cvThreshold
cvTrace;cvTrace
cvTransform;cvTransform
cvTranspose;cvTranspose
cvTreeToNodeSeq;cvTreeToNodeSeq
cvUpdateWindow;cvUpdateWindow
cvUseOptimized;cvUseOptimized
cvWaitKey;cvWaitKey
cvWarpAffine;cvWarpAffine
cvWarpPerspective;cvWarpPerspective
cvWatershed;cvWatershed
cvWriteFrame;cvWriteFrame
cvXor;cvXor
cvXorS;cvXorS
