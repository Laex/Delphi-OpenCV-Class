// ??0Kernel@SVM@ml@cv@@QEAA@$$QEAV0123@@Z     public: __cdecl cv::ml::SVM::Kernel::Kernel(class cv::ml::SVM::Kernel && __ptr64) __ptr64
// ??0Kernel@SVM@ml@cv@@QEAA@AEBV0123@@Z       public: __cdecl cv::ml::SVM::Kernel::Kernel(class cv::ml::SVM::Kernel const & __ptr64) __ptr64
// ??0Kernel@SVM@ml@cv@@QEAA@XZ                public: __cdecl cv::ml::SVM::Kernel::Kernel(void) __ptr64
// ??0SVM@ml@cv@@QEAA@$$QEAV012@@Z             public: __cdecl cv::ml::SVM::SVM(class cv::ml::SVM && __ptr64) __ptr64
// ??0SVM@ml@cv@@QEAA@AEBV012@@Z               public: __cdecl cv::ml::SVM::SVM(class cv::ml::SVM const & __ptr64) __ptr64
// ??0SVM@ml@cv@@QEAA@XZ                       public: __cdecl cv::ml::SVM::SVM(void) __ptr64
// ??1Kernel@SVM@ml@cv@@UEAA@XZ                public: virtual __cdecl cv::ml::SVM::Kernel::~Kernel(void) __ptr64
// ??1SVM@ml@cv@@UEAA@XZ                       public: virtual __cdecl cv::ml::SVM::~SVM(void) __ptr64
// ??4Kernel@SVM@ml@cv@@QEAAAEAV0123@$$QEAV0123@@Z   public: class cv::ml::SVM::Kernel & __ptr64 __cdecl cv::ml::SVM::Kernel::operator=(class cv::ml::SVM::Kernel && __ptr64) __ptr64
// ??4Kernel@SVM@ml@cv@@QEAAAEAV0123@AEBV0123@@Z     public: class cv::ml::SVM::Kernel & __ptr64 __cdecl cv::ml::SVM::Kernel::operator=(class cv::ml::SVM::Kernel const & __ptr64) __ptr64
// ??4SVM@ml@cv@@QEAAAEAV012@$$QEAV012@@Z            public: class cv::ml::SVM & __ptr64 __cdecl cv::ml::SVM::operator=(class cv::ml::SVM && __ptr64) __ptr64
// ??4SVM@ml@cv@@QEAAAEAV012@AEBV012@@Z              public: class cv::ml::SVM & __ptr64 __cdecl cv::ml::SVM::operator=(class cv::ml::SVM const & __ptr64) __ptr64
// ??_7Kernel@SVM@ml@cv@@6B@                         const cv::ml::SVM::Kernel::`vftable'
{
  ??_7SVM@ml@cv@@6B@
  const cv::ml::SVM::`vftable'
}
procedure vftable_SVM; external opencv_world_dll name '??_7SVM@ml@cv@@6B@'{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
{
  ?create@SVM@ml@cv@@SA?AU?$Ptr@VSVM@ml@cv@@@3@XZ
  public: static struct cv::Ptr<class cv::ml::SVM> __cdecl cv::ml::SVM::create(void)
}
procedure create_SVM(Var obj: TPtr<TSVM>.pT); external opencv_world_dll name '?create@SVM@ml@cv@@SA?AU?$Ptr@VSVM@ml@cv@@@3@XZ'{$IFDEF DELAYED_LOAD_DLL} delayed{$ENDIF};
// ?getDefaultGrid@SVM@ml@cv@@SA?AVParamGrid@23@H@Z                     public: static class cv::ml::ParamGrid __cdecl cv::ml::SVM::getDefaultGrid(int)
// ?getDefaultGridPtr@SVM@ml@cv@@SA?AU?$Ptr@VParamGrid@ml@cv@@@3@H@Z    public: static struct cv::Ptr<class cv::ml::ParamGrid> __cdecl cv::ml::SVM::getDefaultGridPtr(int)
// ?load@SVM@ml@cv@@SA?AU?$Ptr@VSVM@ml@cv@@@3@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z     public: static struct cv::Ptr<class cv::ml::SVM> __cdecl cv::ml::SVM::load(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)
