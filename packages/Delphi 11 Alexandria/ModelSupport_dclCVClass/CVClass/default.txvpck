<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="oo11e609t613a89i_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TOnCVNotify">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="558,1126,90,36" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVReceiverList">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="845,40,298,36" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVCustomSource">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="821,958,212,373" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCustomSource.FCapture" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCustomSource.FSourceThread" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCustomSource.FThreadDelay" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCustomSource.FEnabled" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCustomSource.FOnMat" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.Loaded()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.OnNotifyData(CVClass.TObject,opencv_world.TMat)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.SetEnabled(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.GetEnabled()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.TerminateSourceThread()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.ReleaseSource()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.getCapture()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCustomSource.Destroy()" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCustomSource.Capture" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCustomSource.Enabled" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCustomSource.OnMat" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCustomSource.Width" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCustomSource.Height" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCustomSource.FPS" />
      <reference referencedUin="delphi:l_gnt:src:dclCVClass:CVClass.TCVCustomSource:CVClass.TCVDataSource">
        <property name="sourceAnchor" value="998,958" />
        <property name="targetAnchor" value="998,705" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVCustomSource.FSourceThread">
        <property name="sourceAnchor" value="921,1331" />
        <property name="targetAnchor" value="727,1555" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVCustomSource.FOnMat">
        <property name="sourceAnchor" value="821,1150" />
        <property name="targetAnchor" value="648,1150" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVCustomSource.OnMat">
        <property name="sourceAnchor" value="821,1138" />
        <property name="targetAnchor" value="648,1138" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.ICVDataSource">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="378,1005,140,278" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.AddReceiver(CVClass.ICVDataReceiver)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.RemoveReceiver(CVClass.ICVDataReceiver)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.GetEnabled()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.getMat()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.GetName()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.getHeight()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.getWidth()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataSource.GetFPS()" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.ICVDataSource.Enabled" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.ICVDataSource.Mat" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.ICVDataSource.Name" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.ICVDataSource.Width" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.ICVDataSource.Height" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.ICVDataSource.FPS" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVDataReceiver">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="10,1048,169,192" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataReceiver.FCVSource" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataReceiver.SetSource(CVClass.TObject)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataReceiver.SetCVSource(CVClass.ICVDataSource)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataReceiver.TakeMat(opencv_world.TMat)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataReceiver.Destroy()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataReceiver.isSourceEnabled()" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVDataReceiver.Source" />
      <reference referencedUin="delphi:l_impl:src:dclCVClass:CVClass.TCVDataReceiver:CVClass.ICVDataReceiver">
        <property name="sourceAnchor" value="95,1048" />
        <property name="targetAnchor" value="236,106" />
        <property name="bendpoints" value="95,517" />
        <property name="bounds_setted_by_user" value="True" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVDataReceiver.FCVSource">
        <property name="sourceAnchor" value="179,1176" />
        <property name="targetAnchor" value="378,1176" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVDataReceiver.Source">
        <property name="sourceAnchor" value="179,1112" />
        <property name="targetAnchor" value="378,1112" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVCaptureSource">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="1010,1411,273,492" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCaptureSource.FOperation" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCaptureSource.FOperationClass" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCaptureSource.FCaptureSource" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCaptureSource.FResolution" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCaptureSource.FCustomHeight" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVCaptureSource.FCustomWidth" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.SetEnabled(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.SetCameraSource(opencv_world.VideoCaptureAPIs)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.SetResolution(CVClass.TocvResolution)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.SetCameraResolution()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.GetPropertiesClassName()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.SetProperties(CVProp.TocvCustomImageOperation)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.SetPropertiesClassName(System.string)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.RecreateProperties()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.CreateProperties()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.DestroyProperties()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.GetProperties()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.GetPropertiesClass()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.SetPropertiesClass(CVProp.TocvImageOperationClass)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVCaptureSource.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCaptureSource.OperationClass" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCaptureSource.OperationClassName" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCaptureSource.Operation" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCaptureSource.Camera" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCaptureSource.Resolution" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCaptureSource.CustomWidth" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVCaptureSource.CustomHeight" />
      <reference referencedUin="delphi:l_gnt:src:dclCVClass:CVClass.TCVCaptureSource:CVClass.TCVCustomSource">
        <property name="sourceAnchor" value="1021,1411" />
        <property name="targetAnchor" value="1021,1331" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVCaptureSource.FResolution">
        <property name="sourceAnchor" value="1010,1685" />
        <property name="targetAnchor" value="870,1685" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVCaptureSource.Resolution">
        <property name="sourceAnchor" value="1010,1627" />
        <property name="targetAnchor" value="870,1627" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.ICVDataReceiver">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="210,10,114,96" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataReceiver.TakeMat(opencv_world.TMat)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.ICVDataReceiver.SetSource(CVClass.TObject)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVFileSource">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="1109,310,180,237" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVFileSource.FFileName" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVFileSource.FLoop" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVFileSource.FOnEndOfFile" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVFileSource.FDelay" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVFileSource.SetDelay(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVFileSource.SetFileName(System.SysUtils.@unitclass.TFileName)" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVFileSource.Delay" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVFileSource.FileName" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVFileSource.Loop" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVFileSource.OnEndOfFile" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVIPCameraSource">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="1214,190,180,81" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TOnCVAfterPaint">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="716,509,114,36" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TocvResolution">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="767,1570,103,173" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.r160x120" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.r320x240" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.r424x240" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.r640x360" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.r800x448" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.r960x544" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.r1280x720" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvResolution.rCustom" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TRegisteredImageOperations">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="1163,10,279,143" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TRegisteredImageOperations.FindByClassName(System.string)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TRegisteredImageOperations.FindByName(System.string)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TRegisteredImageOperations.GetNameByClass(CVClass.TClass)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TRegisteredImageOperations.RegisterIOClass(CVClass.TClass,System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TocvCaptureThread">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="553,1523,174,267" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvCaptureThread.FOnNotifyData" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvCaptureThread.FOnNoData" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvCaptureThread.FThreadDelay" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvCaptureThread.FLock" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TocvCaptureThread.SetCapture(opencv_world.TVideoCapture*)" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TocvCaptureThread.FCapture" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TocvCaptureThread.Execute()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TocvCaptureThread.Create(System.Boolean)" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TocvCaptureThread.Capture" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TocvCaptureThread.OnNoData" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TocvCaptureThread.OnNotifyData" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TocvCaptureThread.ThreadDelay" />
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TocvCaptureThread.FOnNotifyData">
        <property name="sourceAnchor" value="602,1523" />
        <property name="targetAnchor" value="602,1162" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TocvCaptureThread.OnNotifyData">
        <property name="sourceAnchor" value="580,1523" />
        <property name="targetAnchor" value="580,1162" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.@unitclass.GetRegisteredImageOperations()" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.@unitclass._RegisteredImageOperations" />
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.@unitclass._RegisteredImageOperations" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.@unitclass.ipDraw(,opencv_world.TMat,System.Types.TRect,System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVDataSource">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="900,348,189,357" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataSource.FCVReceivers" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataSource.FMat" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataSource.FName" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataSource.FWidth" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataSource.FHeight" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataSource.FFPS" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.NotifyReceiver(opencv_world.TMat)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.getMat()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.GetEnabled()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.GetName()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.getHeight()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.getWidth()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.GetFPS()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.Destroy()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.AddReceiver(CVClass.ICVDataReceiver)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataSource.RemoveReceiver(CVClass.ICVDataReceiver)" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVDataSource.Mat" />
      <reference referencedUin="delphi:l_impl:src:dclCVClass:CVClass.TCVDataSource:CVClass.ICVDataSource">
        <property name="sourceAnchor" value="949,705" />
        <property name="targetAnchor" value="518,1081" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVDataSource.FCVReceivers">
        <property name="sourceAnchor" value="994,348" />
        <property name="targetAnchor" value="994,76" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVView">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="386,176,190,762" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FCVSource" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FMat" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FOnAfterPaint" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FOnBeforePaint" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FCanvas" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FStretch" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FProportional" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVView.FCenter" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.WMEraseBkgnd(ref@Winapi.Messages.TWMEraseBkgnd)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.WMPaint(ref@Winapi.Messages.TWMPaint)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.SetSource(CVClass.TObject)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.SetCVSource(CVClass.ICVDataSource)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.TakeMat(opencv_world.TMat)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.isSourceEnabled()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.PaintRect()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.getMat()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.Destroy()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.DrawMat(opencv_world.TMat)" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.Canvas" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.Mat" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.Source" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.Proportional" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.Stretch" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.Center" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.Align" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnAfterPaint" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnBeforePaint" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnEnter" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnExit" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnKeyDown" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnKeyPress" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnKeyUp" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseDown" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseUp" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseMove" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseEnter" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseLeave" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseWheel" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseWheelUp" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.OnMouseWheelDown" />
      <reference referencedUin="delphi:l_impl:src:dclCVClass:CVClass.TCVView:CVClass.ICVDataReceiver">
        <property name="sourceAnchor" value="481,176" />
        <property name="targetAnchor" value="293,106" />
        <property name="bendpoints" value="" />
        <property name="bounds_setted_by_user" value="True" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVView.FCVSource">
        <property name="sourceAnchor" value="452,938" />
        <property name="targetAnchor" value="452,1005" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVView.FOnAfterPaint">
        <property name="sourceAnchor" value="576,533" />
        <property name="targetAnchor" value="716,533" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVView.FOnBeforePaint">
        <property name="sourceAnchor" value="567,938" />
        <property name="targetAnchor" value="567,1126" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVView.Source">
        <property name="sourceAnchor" value="444,938" />
        <property name="targetAnchor" value="444,1005" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVView.OnAfterPaint">
        <property name="sourceAnchor" value="576,521" />
        <property name="targetAnchor" value="716,521" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVView.OnBeforePaint">
        <property name="sourceAnchor" value="559,938" />
        <property name="targetAnchor" value="559,1127" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.MatIsNotEmpty()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.getPMat()" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVView.ReleaseMat()" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVView.pMat" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVWebCameraSource">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="10,10,180,81" />
    </reference>
    <reference referencedUin="delphi:e_class:src:dclCVClass:CVClass.TCVDataProxy">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="191,110,166,163" />
      <reference referencedUin="delphi:e_field:src:dclCVClass:CVClass.TCVDataProxy.FCVSource" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataProxy.SetSource(CVClass.TObject)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataProxy.SetCVSource(CVClass.ICVDataSource)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataProxy.TakeMat(opencv_world.TMat)" />
      <reference referencedUin="delphi:e_method:src:dclCVClass:CVClass.TCVDataProxy.Destroy()" />
      <reference referencedUin="delphi:e_property:src:dclCVClass:CVClass.TCVDataProxy.Source" />
      <reference referencedUin="delphi:l_impl:src:dclCVClass:CVClass.TCVDataProxy:CVClass.ICVDataReceiver">
        <property name="sourceAnchor" value="269,110" />
        <property name="targetAnchor" value="269,106" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_gnt:src:dclCVClass:CVClass.TCVDataProxy:CVClass.TCVDataSource">
        <property name="sourceAnchor" value="357,229" />
        <property name="targetAnchor" value="900,481" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVDataProxy.FCVSource">
        <property name="sourceAnchor" value="289,273" />
        <property name="targetAnchor" value="422,1005" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:dclCVClass:CVClass.TCVDataProxy.Source">
        <property name="sourceAnchor" value="282,273" />
        <property name="targetAnchor" value="416,1005" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
  </view>
</nodeSet>